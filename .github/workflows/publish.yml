name: Publish

on:
  pull_request: 
    branches: [ main ]
    types: [ closed ]

permissions:
  contents: write 
  pull-requests: write  
  packages: write  

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node 
        uses: actions/setup-node@v4 
        with:
          registry-url: https://registry.npmjs.org/
          node-version: 'latest'
      - name: Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY        
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Enable Corepack and install Yarn latest
        run: |
            corepack enable
            corepack prepare yarn@latest
      - name: Install dependencies
        run: yarn install
      - name: Lerna build
        run: yarn build
      - name: Set Current Version
        run: |
          CURRENT_VERSION=$(node -p 'require("./lerna.json").version')
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV
          - name: Tag Check
          run: |
            TAG_EXISTS=$(git ls-remote --tags origin refs/tags/v${CURRENT_VERSION})
            if [ -n "$TAG_EXISTS" ]; then
              echo "exists_tag=true" >> $GITHUB_ENV
            else
              echo "exists_tag=false" >> $GITHUB_ENV
            fi
      - name: Create Git Tag
        if: env.exists_tag == 'false'
        uses: pkgdeps/git-tag-action@v2
        with:
          version: ${{ env.CURRENT_VERSION }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repo: ${{ github.repository }}
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: "v"
      - name: Create Release
        id: create_release
        if: env.exists_tag == 'false' && github.event.pull_request.merged == true
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.CURRENT_VERSION }}
          release_name: ${{ github.event.pull_request.title }}
          body: |
            ${{ github.event.pull_request.body }}
          draft: false
          prerelease: false
      - name: Publish
        if: steps.tag_check.outputs.exists_tag == 'false'
        run: |
          yarn publish
        env:
           GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/github-script@v7
        with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
              github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'https://github.com/${{ github.repository }}/releases/tag/v${{ env.CURRENT_VERSION }} is released ðŸŽ‰'
              })
