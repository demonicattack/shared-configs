{
  "configs": [
    {
      "name": "eslint/defaults/languages",
      "languageOptions": {
        "sourceType": "module",
        "ecmaVersion": "latest",
        "parserOptions": {}
      },
      "linterOptions": {
        "reportUnusedDisableDirectives": 1
      },
      "index": 0
    },
    {
      "name": "eslint/defaults/ignores",
      "ignores": [
        "**/node_modules/",
        ".git/"
      ],
      "index": 1
    },
    {
      "name": "eslint/defaults/files",
      "files": [
        "**/*.js",
        "**/*.mjs"
      ],
      "index": 2
    },
    {
      "name": "eslint/defaults/files-cjs",
      "files": [
        "**/*.cjs"
      ],
      "languageOptions": {
        "sourceType": "commonjs",
        "ecmaVersion": "latest"
      },
      "index": 3
    },
    {
      "name": "@demonicattack/@git/gitignore",
      "ignores": [
        "**/.yarn",
        "**/.pnp",
        "**/.pnp.*",
        "**/.pnp.js",
        "**/node_modules",
        "**/.env",
        "**/.env.local",
        "**/.env.development.local",
        "**/.env.test.local",
        "**/.env.production.local",
        "**/npm-debug.log*",
        "**/yarn-debug.log*",
        "**/yarn-error.log*",
        "**/.next/",
        "**/out/",
        "**/build",
        "**/dist",
        "**/tmp",
        "**/coverage",
        "**/.project",
        "**/.classpath",
        "**/.c9/",
        "**/*.launch",
        "**/.settings/",
        "**/*.sublime-workspace",
        "**/.DS_Store",
        "**/*.pem",
        "**/testem.log",
        "**/Thumbs.db",
        "**/.eslint-viewer"
      ],
      "index": 4
    },
    {
      "name": "@demonicattack/@files/ignores",
      "ignores": [
        "**/node_modules",
        "**/dist",
        "**/package-lock.json",
        "**/yarn.lock",
        "**/pnpm-lock.yaml",
        "**/bun.lockb",
        "apps/*/.next",
        "**/output",
        "**/coverage",
        "**/temp",
        "**/.temp",
        "**/tmp",
        "**/.tmp",
        "**/.history",
        "**/.vitepress/cache",
        "**/.nuxt",
        "**/.next",
        "**/.vercel",
        "**/.changeset",
        "**/.idea",
        "**/.cache",
        "**/.output",
        "**/.vite-inspect",
        "**/.yarn",
        ".nx/",
        "**/CHANGELOG*.md",
        "**/*.min.*",
        "**/LICENSE*",
        "**/__snapshots__",
        "**/auto-import?(s).d.ts",
        "**/components.d.ts",
        "**/exports-unused.ts",
        "**/jest.config.js",
        "**/fixtures/**",
        "**/.docusaurus/**",
        "**/build/**",
        "**/*.config.{js,cjs,mjs}",
        ".storybook/*",
        "typegen.d.ts",
        ".eslint-config-inspector"
      ],
      "index": 5
    },
    {
      "name": "@demonicattack/@js/setup",
      "languageOptions": {
        "ecmaVersion": "latest",
        "globals": {
          "AbortController": false,
          "AbortSignal": false,
          "AbsoluteOrientationSensor": false,
          "AbstractRange": false,
          "Accelerometer": false,
          "addEventListener": false,
          "ai": false,
          "AI": false,
          "AITextSession": false,
          "alert": false,
          "AnalyserNode": false,
          "Animation": false,
          "AnimationEffect": false,
          "AnimationEvent": false,
          "AnimationPlaybackEvent": false,
          "AnimationTimeline": false,
          "atob": false,
          "Attr": false,
          "Audio": false,
          "AudioBuffer": false,
          "AudioBufferSourceNode": false,
          "AudioContext": false,
          "AudioData": false,
          "AudioDecoder": false,
          "AudioDestinationNode": false,
          "AudioEncoder": false,
          "AudioListener": false,
          "AudioNode": false,
          "AudioParam": false,
          "AudioParamMap": false,
          "AudioProcessingEvent": false,
          "AudioScheduledSourceNode": false,
          "AudioSinkInfo": false,
          "AudioWorklet": false,
          "AudioWorkletGlobalScope": false,
          "AudioWorkletNode": false,
          "AudioWorkletProcessor": false,
          "AuthenticatorAssertionResponse": false,
          "AuthenticatorAttestationResponse": false,
          "AuthenticatorResponse": false,
          "BackgroundFetchManager": false,
          "BackgroundFetchRecord": false,
          "BackgroundFetchRegistration": false,
          "BarcodeDetector": false,
          "BarProp": false,
          "BaseAudioContext": false,
          "BatteryManager": false,
          "BeforeUnloadEvent": false,
          "BiquadFilterNode": false,
          "Blob": false,
          "BlobEvent": false,
          "Bluetooth": false,
          "BluetoothCharacteristicProperties": false,
          "BluetoothDevice": false,
          "BluetoothRemoteGATTCharacteristic": false,
          "BluetoothRemoteGATTDescriptor": false,
          "BluetoothRemoteGATTServer": false,
          "BluetoothRemoteGATTService": false,
          "BluetoothUUID": false,
          "blur": false,
          "BroadcastChannel": false,
          "BrowserCaptureMediaStreamTrack": false,
          "btoa": false,
          "ByteLengthQueuingStrategy": false,
          "Cache": false,
          "caches": false,
          "CacheStorage": false,
          "cancelAnimationFrame": false,
          "cancelIdleCallback": false,
          "CanvasCaptureMediaStream": false,
          "CanvasCaptureMediaStreamTrack": false,
          "CanvasGradient": false,
          "CanvasPattern": false,
          "CanvasRenderingContext2D": false,
          "CaptureController": false,
          "CaretPosition": false,
          "CDATASection": false,
          "ChannelMergerNode": false,
          "ChannelSplitterNode": false,
          "ChapterInformation": false,
          "CharacterBoundsUpdateEvent": false,
          "CharacterData": false,
          "clearInterval": false,
          "clearTimeout": false,
          "clientInformation": false,
          "Clipboard": false,
          "ClipboardEvent": false,
          "ClipboardItem": false,
          "close": true,
          "closed": false,
          "CloseEvent": false,
          "CloseWatcher": false,
          "Comment": false,
          "CompositionEvent": false,
          "CompressionStream": false,
          "confirm": false,
          "console": false,
          "ConstantSourceNode": false,
          "ContentVisibilityAutoStateChangeEvent": false,
          "ConvolverNode": false,
          "CookieChangeEvent": false,
          "CookieDeprecationLabel": false,
          "cookieStore": false,
          "CookieStore": false,
          "CookieStoreManager": false,
          "CountQueuingStrategy": false,
          "createImageBitmap": false,
          "Credential": false,
          "credentialless": false,
          "CredentialsContainer": false,
          "CropTarget": false,
          "crossOriginIsolated": false,
          "crypto": false,
          "Crypto": false,
          "CryptoKey": false,
          "CSS": false,
          "CSSAnimation": false,
          "CSSConditionRule": false,
          "CSSContainerRule": false,
          "CSSCounterStyleRule": false,
          "CSSFontFaceRule": false,
          "CSSFontFeatureValuesRule": false,
          "CSSFontPaletteValuesRule": false,
          "CSSGroupingRule": false,
          "CSSImageValue": false,
          "CSSImportRule": false,
          "CSSKeyframeRule": false,
          "CSSKeyframesRule": false,
          "CSSKeywordValue": false,
          "CSSLayerBlockRule": false,
          "CSSLayerStatementRule": false,
          "CSSMarginRule": false,
          "CSSMathClamp": false,
          "CSSMathInvert": false,
          "CSSMathMax": false,
          "CSSMathMin": false,
          "CSSMathNegate": false,
          "CSSMathProduct": false,
          "CSSMathSum": false,
          "CSSMathValue": false,
          "CSSMatrixComponent": false,
          "CSSMediaRule": false,
          "CSSNamespaceRule": false,
          "CSSNestedDeclarations": false,
          "CSSNumericArray": false,
          "CSSNumericValue": false,
          "CSSPageDescriptors": false,
          "CSSPageRule": false,
          "CSSPerspective": false,
          "CSSPositionTryDescriptors": false,
          "CSSPositionTryRule": false,
          "CSSPositionValue": false,
          "CSSPropertyRule": false,
          "CSSRotate": false,
          "CSSRule": false,
          "CSSRuleList": false,
          "CSSScale": false,
          "CSSScopeRule": false,
          "CSSSkew": false,
          "CSSSkewX": false,
          "CSSSkewY": false,
          "CSSStartingStyleRule": false,
          "CSSStyleDeclaration": false,
          "CSSStyleRule": false,
          "CSSStyleSheet": false,
          "CSSStyleValue": false,
          "CSSSupportsRule": false,
          "CSSTransformComponent": false,
          "CSSTransformValue": false,
          "CSSTransition": false,
          "CSSTranslate": false,
          "CSSUnitValue": false,
          "CSSUnparsedValue": false,
          "CSSVariableReferenceValue": false,
          "CSSViewTransitionRule": false,
          "currentFrame": false,
          "currentTime": false,
          "CustomElementRegistry": false,
          "customElements": false,
          "CustomEvent": false,
          "CustomStateSet": false,
          "DataTransfer": false,
          "DataTransferItem": false,
          "DataTransferItemList": false,
          "DecompressionStream": false,
          "DelayNode": false,
          "DelegatedInkTrailPresenter": false,
          "DeviceMotionEvent": false,
          "DeviceMotionEventAcceleration": false,
          "DeviceMotionEventRotationRate": false,
          "DeviceOrientationEvent": false,
          "devicePixelRatio": false,
          "dispatchEvent": false,
          "document": "readonly",
          "Document": false,
          "DocumentFragment": false,
          "documentPictureInPicture": false,
          "DocumentPictureInPicture": false,
          "DocumentPictureInPictureEvent": false,
          "DocumentTimeline": false,
          "DocumentType": false,
          "DOMError": false,
          "DOMException": false,
          "DOMImplementation": false,
          "DOMMatrix": false,
          "DOMMatrixReadOnly": false,
          "DOMParser": false,
          "DOMPoint": false,
          "DOMPointReadOnly": false,
          "DOMQuad": false,
          "DOMRect": false,
          "DOMRectList": false,
          "DOMRectReadOnly": false,
          "DOMStringList": false,
          "DOMStringMap": false,
          "DOMTokenList": false,
          "DragEvent": false,
          "DynamicsCompressorNode": false,
          "EditContext": false,
          "Element": false,
          "ElementInternals": false,
          "EncodedAudioChunk": false,
          "EncodedVideoChunk": false,
          "ErrorEvent": false,
          "event": false,
          "Event": false,
          "EventCounts": false,
          "EventSource": false,
          "EventTarget": false,
          "external": false,
          "External": false,
          "EyeDropper": false,
          "FeaturePolicy": false,
          "FederatedCredential": false,
          "fence": false,
          "Fence": false,
          "FencedFrameConfig": false,
          "fetch": false,
          "fetchLater": false,
          "FetchLaterResult": false,
          "File": false,
          "FileList": false,
          "FileReader": false,
          "FileSystem": false,
          "FileSystemDirectoryEntry": false,
          "FileSystemDirectoryHandle": false,
          "FileSystemDirectoryReader": false,
          "FileSystemEntry": false,
          "FileSystemFileEntry": false,
          "FileSystemFileHandle": false,
          "FileSystemHandle": false,
          "FileSystemWritableFileStream": false,
          "find": false,
          "Float16Array": false,
          "focus": false,
          "FocusEvent": false,
          "FontData": false,
          "FontFace": false,
          "FontFaceSet": false,
          "FontFaceSetLoadEvent": false,
          "FormData": false,
          "FormDataEvent": false,
          "FragmentDirective": false,
          "frameElement": false,
          "frames": false,
          "GainNode": false,
          "Gamepad": false,
          "GamepadAxisMoveEvent": false,
          "GamepadButton": false,
          "GamepadButtonEvent": false,
          "GamepadEvent": false,
          "GamepadHapticActuator": false,
          "GamepadPose": false,
          "Geolocation": false,
          "GeolocationCoordinates": false,
          "GeolocationPosition": false,
          "GeolocationPositionError": false,
          "getComputedStyle": false,
          "getScreenDetails": false,
          "getSelection": false,
          "GPU": false,
          "GPUAdapter": false,
          "GPUAdapterInfo": false,
          "GPUBindGroup": false,
          "GPUBindGroupLayout": false,
          "GPUBuffer": false,
          "GPUBufferUsage": false,
          "GPUCanvasContext": false,
          "GPUColorWrite": false,
          "GPUCommandBuffer": false,
          "GPUCommandEncoder": false,
          "GPUCompilationInfo": false,
          "GPUCompilationMessage": false,
          "GPUComputePassEncoder": false,
          "GPUComputePipeline": false,
          "GPUDevice": false,
          "GPUDeviceLostInfo": false,
          "GPUError": false,
          "GPUExternalTexture": false,
          "GPUInternalError": false,
          "GPUMapMode": false,
          "GPUOutOfMemoryError": false,
          "GPUPipelineError": false,
          "GPUPipelineLayout": false,
          "GPUQuerySet": false,
          "GPUQueue": false,
          "GPURenderBundle": false,
          "GPURenderBundleEncoder": false,
          "GPURenderPassEncoder": false,
          "GPURenderPipeline": false,
          "GPUSampler": false,
          "GPUShaderModule": false,
          "GPUShaderStage": false,
          "GPUSupportedFeatures": false,
          "GPUSupportedLimits": false,
          "GPUTexture": false,
          "GPUTextureUsage": false,
          "GPUTextureView": false,
          "GPUUncapturedErrorEvent": false,
          "GPUValidationError": false,
          "GravitySensor": false,
          "Gyroscope": false,
          "HashChangeEvent": false,
          "Headers": false,
          "HID": false,
          "HIDConnectionEvent": false,
          "HIDDevice": false,
          "HIDInputReportEvent": false,
          "Highlight": false,
          "HighlightRegistry": false,
          "history": false,
          "History": false,
          "HTMLAllCollection": false,
          "HTMLAnchorElement": false,
          "HTMLAreaElement": false,
          "HTMLAudioElement": false,
          "HTMLBaseElement": false,
          "HTMLBodyElement": false,
          "HTMLBRElement": false,
          "HTMLButtonElement": false,
          "HTMLCanvasElement": false,
          "HTMLCollection": false,
          "HTMLDataElement": false,
          "HTMLDataListElement": false,
          "HTMLDetailsElement": false,
          "HTMLDialogElement": false,
          "HTMLDirectoryElement": false,
          "HTMLDivElement": false,
          "HTMLDListElement": false,
          "HTMLDocument": false,
          "HTMLElement": false,
          "HTMLEmbedElement": false,
          "HTMLFencedFrameElement": false,
          "HTMLFieldSetElement": false,
          "HTMLFontElement": false,
          "HTMLFormControlsCollection": false,
          "HTMLFormElement": false,
          "HTMLFrameElement": false,
          "HTMLFrameSetElement": false,
          "HTMLHeadElement": false,
          "HTMLHeadingElement": false,
          "HTMLHRElement": false,
          "HTMLHtmlElement": false,
          "HTMLIFrameElement": false,
          "HTMLImageElement": false,
          "HTMLInputElement": false,
          "HTMLLabelElement": false,
          "HTMLLegendElement": false,
          "HTMLLIElement": false,
          "HTMLLinkElement": false,
          "HTMLMapElement": false,
          "HTMLMarqueeElement": false,
          "HTMLMediaElement": false,
          "HTMLMenuElement": false,
          "HTMLMetaElement": false,
          "HTMLMeterElement": false,
          "HTMLModElement": false,
          "HTMLObjectElement": false,
          "HTMLOListElement": false,
          "HTMLOptGroupElement": false,
          "HTMLOptionElement": false,
          "HTMLOptionsCollection": false,
          "HTMLOutputElement": false,
          "HTMLParagraphElement": false,
          "HTMLParamElement": false,
          "HTMLPictureElement": false,
          "HTMLPreElement": false,
          "HTMLProgressElement": false,
          "HTMLQuoteElement": false,
          "HTMLScriptElement": false,
          "HTMLSelectElement": false,
          "HTMLSlotElement": false,
          "HTMLSourceElement": false,
          "HTMLSpanElement": false,
          "HTMLStyleElement": false,
          "HTMLTableCaptionElement": false,
          "HTMLTableCellElement": false,
          "HTMLTableColElement": false,
          "HTMLTableElement": false,
          "HTMLTableRowElement": false,
          "HTMLTableSectionElement": false,
          "HTMLTemplateElement": false,
          "HTMLTextAreaElement": false,
          "HTMLTimeElement": false,
          "HTMLTitleElement": false,
          "HTMLTrackElement": false,
          "HTMLUListElement": false,
          "HTMLUnknownElement": false,
          "HTMLVideoElement": false,
          "IDBCursor": false,
          "IDBCursorWithValue": false,
          "IDBDatabase": false,
          "IDBFactory": false,
          "IDBIndex": false,
          "IDBKeyRange": false,
          "IDBObjectStore": false,
          "IDBOpenDBRequest": false,
          "IDBRequest": false,
          "IDBTransaction": false,
          "IDBVersionChangeEvent": false,
          "IdentityCredential": false,
          "IdentityCredentialError": false,
          "IdentityProvider": false,
          "IdleDeadline": false,
          "IdleDetector": false,
          "IIRFilterNode": false,
          "Image": false,
          "ImageBitmap": false,
          "ImageBitmapRenderingContext": false,
          "ImageCapture": false,
          "ImageData": false,
          "ImageDecoder": false,
          "ImageTrack": false,
          "ImageTrackList": false,
          "indexedDB": false,
          "Ink": false,
          "innerHeight": false,
          "innerWidth": false,
          "InputDeviceCapabilities": false,
          "InputDeviceInfo": false,
          "InputEvent": false,
          "IntersectionObserver": false,
          "IntersectionObserverEntry": false,
          "isSecureContext": false,
          "Keyboard": false,
          "KeyboardEvent": false,
          "KeyboardLayoutMap": false,
          "KeyframeEffect": false,
          "LargestContentfulPaint": false,
          "LaunchParams": false,
          "launchQueue": false,
          "LaunchQueue": false,
          "LayoutShift": false,
          "LayoutShiftAttribution": false,
          "length": false,
          "LinearAccelerationSensor": false,
          "localStorage": false,
          "location": false,
          "Location": false,
          "locationbar": false,
          "Lock": false,
          "LockManager": false,
          "matchMedia": false,
          "MathMLElement": false,
          "MediaCapabilities": false,
          "MediaCapabilitiesInfo": false,
          "MediaDeviceInfo": false,
          "MediaDevices": false,
          "MediaElementAudioSourceNode": false,
          "MediaEncryptedEvent": false,
          "MediaError": false,
          "MediaKeyError": false,
          "MediaKeyMessageEvent": false,
          "MediaKeys": false,
          "MediaKeySession": false,
          "MediaKeyStatusMap": false,
          "MediaKeySystemAccess": false,
          "MediaList": false,
          "MediaMetadata": false,
          "MediaQueryList": false,
          "MediaQueryListEvent": false,
          "MediaRecorder": false,
          "MediaRecorderErrorEvent": false,
          "MediaSession": false,
          "MediaSource": false,
          "MediaSourceHandle": false,
          "MediaStream": false,
          "MediaStreamAudioDestinationNode": false,
          "MediaStreamAudioSourceNode": false,
          "MediaStreamEvent": false,
          "MediaStreamTrack": false,
          "MediaStreamTrackAudioSourceNode": false,
          "MediaStreamTrackAudioStats": false,
          "MediaStreamTrackEvent": false,
          "MediaStreamTrackGenerator": false,
          "MediaStreamTrackProcessor": false,
          "MediaStreamTrackVideoStats": false,
          "menubar": false,
          "MessageChannel": false,
          "MessageEvent": false,
          "MessagePort": false,
          "MIDIAccess": false,
          "MIDIConnectionEvent": false,
          "MIDIInput": false,
          "MIDIInputMap": false,
          "MIDIMessageEvent": false,
          "MIDIOutput": false,
          "MIDIOutputMap": false,
          "MIDIPort": false,
          "MimeType": false,
          "MimeTypeArray": false,
          "model": false,
          "ModelGenericSession": false,
          "ModelManager": false,
          "MouseEvent": false,
          "moveBy": false,
          "moveTo": false,
          "MutationEvent": false,
          "MutationObserver": false,
          "MutationRecord": false,
          "name": false,
          "NamedNodeMap": false,
          "NavigateEvent": false,
          "navigation": false,
          "Navigation": false,
          "NavigationActivation": false,
          "NavigationCurrentEntryChangeEvent": false,
          "NavigationDestination": false,
          "NavigationHistoryEntry": false,
          "NavigationPreloadManager": false,
          "NavigationTransition": false,
          "navigator": "readonly",
          "Navigator": false,
          "NavigatorLogin": false,
          "NavigatorManagedData": false,
          "NavigatorUAData": false,
          "NetworkInformation": false,
          "Node": false,
          "NodeFilter": false,
          "NodeIterator": false,
          "NodeList": false,
          "Notification": false,
          "NotifyPaintEvent": false,
          "NotRestoredReasonDetails": false,
          "NotRestoredReasons": false,
          "OfflineAudioCompletionEvent": false,
          "OfflineAudioContext": false,
          "offscreenBuffering": false,
          "OffscreenCanvas": false,
          "OffscreenCanvasRenderingContext2D": false,
          "onabort": true,
          "onafterprint": true,
          "onanimationcancel": true,
          "onanimationend": true,
          "onanimationiteration": true,
          "onanimationstart": true,
          "onappinstalled": true,
          "onauxclick": true,
          "onbeforeinput": true,
          "onbeforeinstallprompt": true,
          "onbeforematch": true,
          "onbeforeprint": true,
          "onbeforetoggle": true,
          "onbeforeunload": true,
          "onbeforexrselect": true,
          "onblur": true,
          "oncancel": true,
          "oncanplay": true,
          "oncanplaythrough": true,
          "onchange": true,
          "onclick": true,
          "onclose": true,
          "oncontentvisibilityautostatechange": true,
          "oncontextlost": true,
          "oncontextmenu": true,
          "oncontextrestored": true,
          "oncopy": true,
          "oncuechange": true,
          "oncut": true,
          "ondblclick": true,
          "ondevicemotion": true,
          "ondeviceorientation": true,
          "ondeviceorientationabsolute": true,
          "ondrag": true,
          "ondragend": true,
          "ondragenter": true,
          "ondragleave": true,
          "ondragover": true,
          "ondragstart": true,
          "ondrop": true,
          "ondurationchange": true,
          "onemptied": true,
          "onended": true,
          "onerror": true,
          "onfocus": true,
          "onformdata": true,
          "ongamepadconnected": true,
          "ongamepaddisconnected": true,
          "ongotpointercapture": true,
          "onhashchange": true,
          "oninput": true,
          "oninvalid": true,
          "onkeydown": true,
          "onkeypress": true,
          "onkeyup": true,
          "onlanguagechange": true,
          "onload": true,
          "onloadeddata": true,
          "onloadedmetadata": true,
          "onloadstart": true,
          "onlostpointercapture": true,
          "onmessage": true,
          "onmessageerror": true,
          "onmousedown": true,
          "onmouseenter": true,
          "onmouseleave": true,
          "onmousemove": true,
          "onmouseout": true,
          "onmouseover": true,
          "onmouseup": true,
          "onmousewheel": true,
          "onoffline": true,
          "ononline": true,
          "onpagehide": true,
          "onpagereveal": true,
          "onpageshow": true,
          "onpageswap": true,
          "onpaste": true,
          "onpause": true,
          "onplay": true,
          "onplaying": true,
          "onpointercancel": true,
          "onpointerdown": true,
          "onpointerenter": true,
          "onpointerleave": true,
          "onpointermove": true,
          "onpointerout": true,
          "onpointerover": true,
          "onpointerrawupdate": true,
          "onpointerup": true,
          "onpopstate": true,
          "onprogress": true,
          "onratechange": true,
          "onrejectionhandled": true,
          "onreset": true,
          "onresize": true,
          "onscroll": true,
          "onscrollend": true,
          "onscrollsnapchange": true,
          "onscrollsnapchanging": true,
          "onsearch": true,
          "onsecuritypolicyviolation": true,
          "onseeked": true,
          "onseeking": true,
          "onselect": true,
          "onselectionchange": true,
          "onselectstart": true,
          "onslotchange": true,
          "onstalled": true,
          "onstorage": true,
          "onsubmit": true,
          "onsuspend": true,
          "ontimeupdate": true,
          "ontoggle": true,
          "ontransitioncancel": true,
          "ontransitionend": true,
          "ontransitionrun": true,
          "ontransitionstart": true,
          "onunhandledrejection": true,
          "onunload": true,
          "onvolumechange": true,
          "onwaiting": true,
          "onwheel": true,
          "open": false,
          "opener": false,
          "Option": false,
          "OrientationSensor": false,
          "origin": false,
          "originAgentCluster": false,
          "OscillatorNode": false,
          "OTPCredential": false,
          "outerHeight": false,
          "outerWidth": false,
          "OverconstrainedError": false,
          "PageRevealEvent": false,
          "PageSwapEvent": false,
          "PageTransitionEvent": false,
          "pageXOffset": false,
          "pageYOffset": false,
          "PannerNode": false,
          "parent": false,
          "PasswordCredential": false,
          "Path2D": false,
          "PaymentAddress": false,
          "PaymentManager": false,
          "PaymentMethodChangeEvent": false,
          "PaymentRequest": false,
          "PaymentRequestUpdateEvent": false,
          "PaymentResponse": false,
          "performance": false,
          "Performance": false,
          "PerformanceElementTiming": false,
          "PerformanceEntry": false,
          "PerformanceEventTiming": false,
          "PerformanceLongAnimationFrameTiming": false,
          "PerformanceLongTaskTiming": false,
          "PerformanceMark": false,
          "PerformanceMeasure": false,
          "PerformanceNavigation": false,
          "PerformanceNavigationTiming": false,
          "PerformanceObserver": false,
          "PerformanceObserverEntryList": false,
          "PerformancePaintTiming": false,
          "PerformanceResourceTiming": false,
          "PerformanceScriptTiming": false,
          "PerformanceServerTiming": false,
          "PerformanceTiming": false,
          "PeriodicSyncManager": false,
          "PeriodicWave": false,
          "Permissions": false,
          "PermissionStatus": false,
          "PERSISTENT": false,
          "personalbar": false,
          "PictureInPictureEvent": false,
          "PictureInPictureWindow": false,
          "Plugin": false,
          "PluginArray": false,
          "PointerEvent": false,
          "PopStateEvent": false,
          "postMessage": true,
          "Presentation": false,
          "PresentationAvailability": false,
          "PresentationConnection": false,
          "PresentationConnectionAvailableEvent": false,
          "PresentationConnectionCloseEvent": false,
          "PresentationConnectionList": false,
          "PresentationReceiver": false,
          "PresentationRequest": false,
          "PressureObserver": false,
          "PressureRecord": false,
          "print": false,
          "ProcessingInstruction": false,
          "Profiler": false,
          "ProgressEvent": false,
          "PromiseRejectionEvent": false,
          "prompt": false,
          "ProtectedAudience": false,
          "PublicKeyCredential": false,
          "PushManager": false,
          "PushSubscription": false,
          "PushSubscriptionOptions": false,
          "queryLocalFonts": false,
          "queueMicrotask": false,
          "RadioNodeList": false,
          "Range": false,
          "ReadableByteStreamController": false,
          "ReadableStream": false,
          "ReadableStreamBYOBReader": false,
          "ReadableStreamBYOBRequest": false,
          "ReadableStreamDefaultController": false,
          "ReadableStreamDefaultReader": false,
          "registerProcessor": false,
          "RelativeOrientationSensor": false,
          "RemotePlayback": false,
          "removeEventListener": false,
          "reportError": false,
          "ReportingObserver": false,
          "Request": false,
          "requestAnimationFrame": false,
          "requestIdleCallback": false,
          "resizeBy": false,
          "ResizeObserver": false,
          "ResizeObserverEntry": false,
          "ResizeObserverSize": false,
          "resizeTo": false,
          "Response": false,
          "RTCCertificate": false,
          "RTCDataChannel": false,
          "RTCDataChannelEvent": false,
          "RTCDtlsTransport": false,
          "RTCDTMFSender": false,
          "RTCDTMFToneChangeEvent": false,
          "RTCEncodedAudioFrame": false,
          "RTCEncodedVideoFrame": false,
          "RTCError": false,
          "RTCErrorEvent": false,
          "RTCIceCandidate": false,
          "RTCIceTransport": false,
          "RTCPeerConnection": false,
          "RTCPeerConnectionIceErrorEvent": false,
          "RTCPeerConnectionIceEvent": false,
          "RTCRtpReceiver": false,
          "RTCRtpScriptTransform": false,
          "RTCRtpSender": false,
          "RTCRtpTransceiver": false,
          "RTCSctpTransport": false,
          "RTCSessionDescription": false,
          "RTCStatsReport": false,
          "RTCTrackEvent": false,
          "sampleRate": false,
          "scheduler": false,
          "Scheduler": false,
          "Scheduling": false,
          "screen": false,
          "Screen": false,
          "ScreenDetailed": false,
          "ScreenDetails": false,
          "screenLeft": false,
          "ScreenOrientation": false,
          "screenTop": false,
          "screenX": false,
          "screenY": false,
          "ScriptProcessorNode": false,
          "scroll": false,
          "scrollbars": false,
          "scrollBy": false,
          "ScrollTimeline": false,
          "scrollTo": false,
          "scrollX": false,
          "scrollY": false,
          "SecurityPolicyViolationEvent": false,
          "Selection": false,
          "self": false,
          "Sensor": false,
          "SensorErrorEvent": false,
          "Serial": false,
          "SerialPort": false,
          "ServiceWorker": false,
          "ServiceWorkerContainer": false,
          "ServiceWorkerRegistration": false,
          "sessionStorage": false,
          "setInterval": false,
          "setTimeout": false,
          "ShadowRoot": false,
          "sharedStorage": false,
          "SharedStorage": false,
          "SharedStorageWorklet": false,
          "SharedWorker": false,
          "showDirectoryPicker": false,
          "showOpenFilePicker": false,
          "showSaveFilePicker": false,
          "SnapEvent": false,
          "SourceBuffer": false,
          "SourceBufferList": false,
          "speechSynthesis": false,
          "SpeechSynthesis": false,
          "SpeechSynthesisErrorEvent": false,
          "SpeechSynthesisEvent": false,
          "SpeechSynthesisUtterance": false,
          "SpeechSynthesisVoice": false,
          "StaticRange": false,
          "status": false,
          "statusbar": false,
          "StereoPannerNode": false,
          "stop": false,
          "Storage": false,
          "StorageBucket": false,
          "StorageBucketManager": false,
          "StorageEvent": false,
          "StorageManager": false,
          "structuredClone": false,
          "styleMedia": false,
          "StylePropertyMap": false,
          "StylePropertyMapReadOnly": false,
          "StyleSheet": false,
          "StyleSheetList": false,
          "SubmitEvent": false,
          "SubtleCrypto": false,
          "SVGAElement": false,
          "SVGAngle": false,
          "SVGAnimatedAngle": false,
          "SVGAnimatedBoolean": false,
          "SVGAnimatedEnumeration": false,
          "SVGAnimatedInteger": false,
          "SVGAnimatedLength": false,
          "SVGAnimatedLengthList": false,
          "SVGAnimatedNumber": false,
          "SVGAnimatedNumberList": false,
          "SVGAnimatedPreserveAspectRatio": false,
          "SVGAnimatedRect": false,
          "SVGAnimatedString": false,
          "SVGAnimatedTransformList": false,
          "SVGAnimateElement": false,
          "SVGAnimateMotionElement": false,
          "SVGAnimateTransformElement": false,
          "SVGAnimationElement": false,
          "SVGCircleElement": false,
          "SVGClipPathElement": false,
          "SVGComponentTransferFunctionElement": false,
          "SVGDefsElement": false,
          "SVGDescElement": false,
          "SVGElement": false,
          "SVGEllipseElement": false,
          "SVGFEBlendElement": false,
          "SVGFEColorMatrixElement": false,
          "SVGFEComponentTransferElement": false,
          "SVGFECompositeElement": false,
          "SVGFEConvolveMatrixElement": false,
          "SVGFEDiffuseLightingElement": false,
          "SVGFEDisplacementMapElement": false,
          "SVGFEDistantLightElement": false,
          "SVGFEDropShadowElement": false,
          "SVGFEFloodElement": false,
          "SVGFEFuncAElement": false,
          "SVGFEFuncBElement": false,
          "SVGFEFuncGElement": false,
          "SVGFEFuncRElement": false,
          "SVGFEGaussianBlurElement": false,
          "SVGFEImageElement": false,
          "SVGFEMergeElement": false,
          "SVGFEMergeNodeElement": false,
          "SVGFEMorphologyElement": false,
          "SVGFEOffsetElement": false,
          "SVGFEPointLightElement": false,
          "SVGFESpecularLightingElement": false,
          "SVGFESpotLightElement": false,
          "SVGFETileElement": false,
          "SVGFETurbulenceElement": false,
          "SVGFilterElement": false,
          "SVGForeignObjectElement": false,
          "SVGGElement": false,
          "SVGGeometryElement": false,
          "SVGGradientElement": false,
          "SVGGraphicsElement": false,
          "SVGImageElement": false,
          "SVGLength": false,
          "SVGLengthList": false,
          "SVGLinearGradientElement": false,
          "SVGLineElement": false,
          "SVGMarkerElement": false,
          "SVGMaskElement": false,
          "SVGMatrix": false,
          "SVGMetadataElement": false,
          "SVGMPathElement": false,
          "SVGNumber": false,
          "SVGNumberList": false,
          "SVGPathElement": false,
          "SVGPatternElement": false,
          "SVGPoint": false,
          "SVGPointList": false,
          "SVGPolygonElement": false,
          "SVGPolylineElement": false,
          "SVGPreserveAspectRatio": false,
          "SVGRadialGradientElement": false,
          "SVGRect": false,
          "SVGRectElement": false,
          "SVGScriptElement": false,
          "SVGSetElement": false,
          "SVGStopElement": false,
          "SVGStringList": false,
          "SVGStyleElement": false,
          "SVGSVGElement": false,
          "SVGSwitchElement": false,
          "SVGSymbolElement": false,
          "SVGTextContentElement": false,
          "SVGTextElement": false,
          "SVGTextPathElement": false,
          "SVGTextPositioningElement": false,
          "SVGTitleElement": false,
          "SVGTransform": false,
          "SVGTransformList": false,
          "SVGTSpanElement": false,
          "SVGUnitTypes": false,
          "SVGUseElement": false,
          "SVGViewElement": false,
          "SyncManager": false,
          "TaskAttributionTiming": false,
          "TaskController": false,
          "TaskPriorityChangeEvent": false,
          "TaskSignal": false,
          "TEMPORARY": false,
          "Text": false,
          "TextDecoder": false,
          "TextDecoderStream": false,
          "TextEncoder": false,
          "TextEncoderStream": false,
          "TextEvent": false,
          "TextFormat": false,
          "TextFormatUpdateEvent": false,
          "TextMetrics": false,
          "TextTrack": false,
          "TextTrackCue": false,
          "TextTrackCueList": false,
          "TextTrackList": false,
          "TextUpdateEvent": false,
          "TimeEvent": false,
          "TimeRanges": false,
          "ToggleEvent": false,
          "toolbar": false,
          "top": false,
          "Touch": false,
          "TouchEvent": false,
          "TouchList": false,
          "TrackEvent": false,
          "TransformStream": false,
          "TransformStreamDefaultController": false,
          "TransitionEvent": false,
          "TreeWalker": false,
          "TrustedHTML": false,
          "TrustedScript": false,
          "TrustedScriptURL": false,
          "TrustedTypePolicy": false,
          "TrustedTypePolicyFactory": false,
          "trustedTypes": false,
          "UIEvent": false,
          "URL": false,
          "URLPattern": false,
          "URLSearchParams": false,
          "USB": false,
          "USBAlternateInterface": false,
          "USBConfiguration": false,
          "USBConnectionEvent": false,
          "USBDevice": false,
          "USBEndpoint": false,
          "USBInterface": false,
          "USBInTransferResult": false,
          "USBIsochronousInTransferPacket": false,
          "USBIsochronousInTransferResult": false,
          "USBIsochronousOutTransferPacket": false,
          "USBIsochronousOutTransferResult": false,
          "USBOutTransferResult": false,
          "UserActivation": false,
          "ValidityState": false,
          "VideoColorSpace": false,
          "VideoDecoder": false,
          "VideoEncoder": false,
          "VideoFrame": false,
          "VideoPlaybackQuality": false,
          "ViewTimeline": false,
          "ViewTransition": false,
          "ViewTransitionTypeSet": false,
          "VirtualKeyboard": false,
          "VirtualKeyboardGeometryChangeEvent": false,
          "VisibilityStateEntry": false,
          "visualViewport": false,
          "VisualViewport": false,
          "VTTCue": false,
          "VTTRegion": false,
          "WakeLock": false,
          "WakeLockSentinel": false,
          "WaveShaperNode": false,
          "WebAssembly": false,
          "WebGL2RenderingContext": false,
          "WebGLActiveInfo": false,
          "WebGLBuffer": false,
          "WebGLContextEvent": false,
          "WebGLFramebuffer": false,
          "WebGLObject": false,
          "WebGLProgram": false,
          "WebGLQuery": false,
          "WebGLRenderbuffer": false,
          "WebGLRenderingContext": false,
          "WebGLSampler": false,
          "WebGLShader": false,
          "WebGLShaderPrecisionFormat": false,
          "WebGLSync": false,
          "WebGLTexture": false,
          "WebGLTransformFeedback": false,
          "WebGLUniformLocation": false,
          "WebGLVertexArrayObject": false,
          "WebSocket": false,
          "WebSocketError": false,
          "WebSocketStream": false,
          "WebTransport": false,
          "WebTransportBidirectionalStream": false,
          "WebTransportDatagramDuplexStream": false,
          "WebTransportError": false,
          "WebTransportReceiveStream": false,
          "WebTransportSendStream": false,
          "WGSLLanguageFeatures": false,
          "WheelEvent": false,
          "window": "readonly",
          "Window": false,
          "WindowControlsOverlay": false,
          "WindowControlsOverlayGeometryChangeEvent": false,
          "Worker": false,
          "Worklet": false,
          "WorkletGlobalScope": false,
          "WritableStream": false,
          "WritableStreamDefaultController": false,
          "WritableStreamDefaultWriter": false,
          "XMLDocument": false,
          "XMLHttpRequest": false,
          "XMLHttpRequestEventTarget": false,
          "XMLHttpRequestUpload": false,
          "XMLSerializer": false,
          "XPathEvaluator": false,
          "XPathExpression": false,
          "XPathResult": false,
          "XRAnchor": false,
          "XRAnchorSet": false,
          "XRBoundedReferenceSpace": false,
          "XRCamera": false,
          "XRCPUDepthInformation": false,
          "XRDepthInformation": false,
          "XRDOMOverlayState": false,
          "XRFrame": false,
          "XRHand": false,
          "XRHitTestResult": false,
          "XRHitTestSource": false,
          "XRInputSource": false,
          "XRInputSourceArray": false,
          "XRInputSourceEvent": false,
          "XRInputSourcesChangeEvent": false,
          "XRJointPose": false,
          "XRJointSpace": false,
          "XRLayer": false,
          "XRLightEstimate": false,
          "XRLightProbe": false,
          "XRPose": false,
          "XRRay": false,
          "XRReferenceSpace": false,
          "XRReferenceSpaceEvent": false,
          "XRRenderState": false,
          "XRRigidTransform": false,
          "XRSession": false,
          "XRSessionEvent": false,
          "XRSpace": false,
          "XRSystem": false,
          "XRTransientInputHitTestResult": false,
          "XRTransientInputHitTestSource": false,
          "XRView": false,
          "XRViewerPose": false,
          "XRViewport": false,
          "XRWebGLBinding": false,
          "XRWebGLDepthInformation": false,
          "XRWebGLLayer": false,
          "XSLTProcessor": false,
          "AggregateError": false,
          "Array": false,
          "ArrayBuffer": false,
          "Atomics": false,
          "BigInt": false,
          "BigInt64Array": false,
          "BigUint64Array": false,
          "Boolean": false,
          "DataView": false,
          "Date": false,
          "decodeURI": false,
          "decodeURIComponent": false,
          "encodeURI": false,
          "encodeURIComponent": false,
          "Error": false,
          "escape": false,
          "eval": false,
          "EvalError": false,
          "FinalizationRegistry": false,
          "Float32Array": false,
          "Float64Array": false,
          "Function": false,
          "globalThis": false,
          "Infinity": false,
          "Int16Array": false,
          "Int32Array": false,
          "Int8Array": false,
          "Intl": false,
          "isFinite": false,
          "isNaN": false,
          "JSON": false,
          "Map": false,
          "Math": false,
          "NaN": false,
          "Number": false,
          "Object": false,
          "parseFloat": false,
          "parseInt": false,
          "Promise": false,
          "Proxy": false,
          "RangeError": false,
          "ReferenceError": false,
          "Reflect": false,
          "RegExp": false,
          "Set": false,
          "SharedArrayBuffer": false,
          "String": false,
          "Symbol": false,
          "SyntaxError": false,
          "TypeError": false,
          "Uint16Array": false,
          "Uint32Array": false,
          "Uint8Array": false,
          "Uint8ClampedArray": false,
          "undefined": false,
          "unescape": false,
          "URIError": false,
          "WeakMap": false,
          "WeakRef": false,
          "WeakSet": false,
          "__dirname": false,
          "__filename": false,
          "Buffer": false,
          "clearImmediate": false,
          "exports": true,
          "global": false,
          "module": false,
          "process": false,
          "require": false,
          "setImmediate": false,
          "applicationCache": false,
          "Client": false,
          "clients": false,
          "Clients": false,
          "ExtendableEvent": false,
          "ExtendableMessageEvent": false,
          "FetchEvent": false,
          "FileReaderSync": false,
          "importScripts": false,
          "onconnect": true,
          "onfetch": true,
          "oninstall": true,
          "onnotificationclick": true,
          "onnotificationclose": true,
          "onpush": true,
          "onpushsubscriptionchange": true,
          "onsync": true,
          "registration": false,
          "ServiceWorkerGlobalScope": false,
          "ServiceWorkerMessageEvent": false,
          "skipWaiting": false,
          "WindowClient": false,
          "WorkerGlobalScope": false
        },
        "parserOptions": {
          "ecmaFeatures": {
            "jsx": true
          },
          "ecmaVersion": "latest",
          "sourceType": "module"
        },
        "sourceType": "module"
      },
      "linterOptions": {
        "reportUnusedDisableDirectives": true
      },
      "index": 6
    },
    {
      "name": "@demonicattack/@js/rules",
      "plugins": {
        "@js": {}
      },
      "rules": {
        "constructor-super": "error",
        "for-direction": "error",
        "getter-return": [
          "error",
          {
            "allowImplicit": true
          }
        ],
        "no-async-promise-executor": "error",
        "no-case-declarations": "error",
        "no-class-assign": "error",
        "no-compare-neg-zero": "error",
        "no-cond-assign": [
          "error",
          "except-parens"
        ],
        "no-const-assign": "error",
        "no-constant-binary-expression": "error",
        "no-constant-condition": [
          "warn",
          {
            "checkLoops": false
          }
        ],
        "no-control-regex": "error",
        "no-debugger": "error",
        "no-delete-var": "error",
        "no-dupe-args": "error",
        "no-dupe-class-members": "error",
        "no-dupe-else-if": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-empty": [
          "error",
          {
            "allowEmptyCatch": true
          }
        ],
        "no-empty-character-class": "error",
        "no-empty-pattern": "error",
        "no-empty-static-block": "error",
        "no-ex-assign": "error",
        "no-extra-boolean-cast": "error",
        "no-fallthrough": "error",
        "no-func-assign": "error",
        "no-global-assign": [
          "error",
          {
            "exceptions": []
          }
        ],
        "no-import-assign": "error",
        "no-invalid-regexp": "error",
        "no-irregular-whitespace": "error",
        "no-loss-of-precision": "error",
        "no-misleading-character-class": "error",
        "no-new-native-nonconstructor": "error",
        "no-nonoctal-decimal-escape": "error",
        "no-obj-calls": "error",
        "no-octal": "error",
        "no-prototype-builtins": "error",
        "no-redeclare": "error",
        "no-regex-spaces": "error",
        "no-self-assign": [
          "error",
          {
            "props": true
          }
        ],
        "no-setter-return": "error",
        "no-shadow-restricted-names": "error",
        "no-sparse-arrays": "error",
        "no-this-before-super": "error",
        "no-undef": "error",
        "no-unexpected-multiline": "error",
        "no-unreachable": "error",
        "no-unsafe-finally": "error",
        "no-unsafe-negation": [
          "error",
          {
            "enforceForOrderingRelations": true
          }
        ],
        "no-unsafe-optional-chaining": [
          "error",
          {
            "disallowArithmeticOperators": true
          }
        ],
        "no-unused-labels": "error",
        "no-unused-private-class-members": "error",
        "no-unused-vars": [
          "error",
          {
            "args": "after-used",
            "argsIgnorePattern": "^_",
            "ignoreRestSiblings": false,
            "vars": "all",
            "varsIgnorePattern": "^_"
          }
        ],
        "no-useless-backreference": "error",
        "no-useless-catch": "error",
        "no-useless-escape": "error",
        "no-with": "error",
        "require-yield": "error",
        "use-isnan": "error",
        "valid-typeof": [
          "error",
          {
            "requireStringLiterals": true
          }
        ],
        "array-callback-return": [
          "error",
          {
            "allowImplicit": true
          }
        ],
        "arrow-body-style": [
          "error",
          "as-needed",
          {
            "requireReturnForObjectLiteral": false
          }
        ],
        "camelcase": [
          "error",
          {
            "allow": [
              "^UNSAFE_"
            ],
            "ignoreDestructuring": false,
            "properties": "never"
          }
        ],
        "class-methods-use-this": [
          "error",
          {
            "exceptMethods": []
          }
        ],
        "consistent-return": [
          "off",
          {
            "treatUndefinedAsUnspecified": true
          }
        ],
        "curly": [
          "error",
          "multi-line"
        ],
        "default-case": [
          "error",
          {
            "commentPattern": "^no default$"
          }
        ],
        "default-case-last": "error",
        "default-param-last": "error",
        "dot-notation": [
          "error",
          {
            "allowKeywords": true
          }
        ],
        "eqeqeq": "error",
        "func-style": [
          "error",
          "expression"
        ],
        "grouped-accessor-pairs": "error",
        "guard-for-in": "error",
        "new-cap": [
          "error",
          {
            "capIsNew": false
          }
        ],
        "no-alert": "error",
        "no-array-constructor": "error",
        "no-caller": "error",
        "no-console": [
          "error",
          {
            "allow": [
              "warn",
              "error"
            ]
          }
        ],
        "no-constructor-return": "error",
        "no-else-return": "warn",
        "no-eval": "error",
        "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-implied-eval": "error",
        "no-inner-declarations": "error",
        "no-invalid-this": "off",
        "no-iterator": "error",
        "no-label-var": "error",
        "no-labels": [
          "error"
        ],
        "no-lone-blocks": "error",
        "no-loop-func": "warn",
        "no-multi-str": "error",
        "no-nested-ternary": "error",
        "no-new": "error",
        "no-new-func": "error",
        "no-new-wrappers": "error",
        "no-object-constructor": "error",
        "no-octal-escape": "error",
        "no-param-reassign": "error",
        "no-proto": "error",
        "no-process-exit": "off",
        "no-restricted-properties": [
          "error",
          {
            "message": "Use `Object.getPrototypeOf` or `Object.setPrototypeOf` instead.",
            "property": "__proto__"
          },
          {
            "message": "Use `Object.defineProperty` instead.",
            "property": "__defineGetter__"
          },
          {
            "message": "Use `Object.defineProperty` instead.",
            "property": "__defineSetter__"
          },
          {
            "message": "Use `Object.getOwnPropertyDescriptor` instead.",
            "property": "__lookupGetter__"
          },
          {
            "message": "Use `Object.getOwnPropertyDescriptor` instead.",
            "property": "__lookupSetter__"
          }
        ],
        "no-return-assign": [
          "error",
          "except-parens"
        ],
        "no-script-url": "error",
        "no-self-compare": "error",
        "no-sequences": "error",
        "no-shadow": "off",
        "no-throw-literal": "error",
        "no-undef-init": "warn",
        "no-undefined": "off",
        "no-underscore-dangle": [
          "error",
          {
            "allow": [],
            "allowAfterThis": false,
            "allowAfterSuper": false,
            "enforceInMethodNames": true
          }
        ],
        "no-unmodified-loop-condition": "error",
        "no-unneeded-ternary": "error",
        "no-unreachable-loop": "error",
        "no-unused-expressions": [
          "error",
          {
            "allowShortCircuit": true,
            "allowTaggedTemplates": true,
            "allowTernary": true
          }
        ],
        "no-use-before-define": [
          "error",
          {
            "classes": false,
            "functions": false,
            "variables": true
          }
        ],
        "no-useless-assignment": "error",
        "no-useless-call": "error",
        "no-useless-computed-key": "warn",
        "no-useless-concat": "error",
        "no-useless-constructor": "error",
        "no-useless-rename": "warn",
        "no-useless-return": "warn",
        "no-var": "error",
        "object-shorthand": [
          "error",
          "always",
          {
            "avoidExplicitReturnArrows": true,
            "avoidQuotes": true,
            "ignoreConstructors": false
          }
        ],
        "operator-assignment": [
          "error",
          "always"
        ],
        "prefer-arrow-callback": [
          "error",
          {
            "allowNamedFunctions": false,
            "allowUnboundThis": true
          }
        ],
        "prefer-const": [
          "error",
          {
            "destructuring": "all",
            "ignoreReadBeforeAssign": true
          }
        ],
        "prefer-exponentiation-operator": "error",
        "prefer-numeric-literals": "error",
        "prefer-object-has-own": "error",
        "prefer-promise-reject-errors": [
          "error",
          {
            "allowEmptyReject": true
          }
        ],
        "prefer-regex-literals": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "warn",
        "radix": "error",
        "require-unicode-regexp": "off",
        "strict": [
          "error",
          "never"
        ],
        "symbol-description": "error",
        "unicode-bom": [
          "error",
          "never"
        ],
        "yoda": "warn",
        "array-bracket-spacing": "error",
        "arrow-parens": [
          "error",
          "as-needed"
        ],
        "arrow-spacing": "error",
        "block-spacing": "error",
        "brace-style": [
          "error",
          "1tbs"
        ],
        "comma-dangle": "error",
        "comma-spacing": "error",
        "comma-style": [
          "error",
          "last"
        ],
        "computed-property-spacing": "error",
        "dot-location": [
          "error",
          "property"
        ],
        "eol-last": "error",
        "func-call-spacing": "error",
        "function-call-argument-newline": [
          "error",
          "consistent"
        ],
        "function-paren-newline": [
          "error",
          "consistent"
        ],
        "generator-star-spacing": "error",
        "indent": [
          "error",
          4,
          {
            "SwitchCase": 1
          }
        ],
        "key-spacing": [
          "error",
          {
            "beforeColon": false,
            "afterColon": true
          }
        ],
        "keyword-spacing": "error",
        "lines-around-comment": [
          "error",
          {
            "beforeBlockComment": true,
            "afterBlockComment": false,
            "beforeLineComment": true,
            "afterLineComment": false
          }
        ],
        "max-len": [
          "error",
          160,
          {
            "ignoreComments": true,
            "ignoreUrls": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreRegExpLiterals": true
          }
        ],
        "max-statements-per-line": "error",
        "new-parens": "error",
        "no-confusing-arrow": "error",
        "no-extra-semi": "error",
        "no-floating-decimal": "error",
        "no-mixed-spaces-and-tabs": [
          "error",
          false
        ],
        "no-multi-spaces": "error",
        "no-multiple-empty-lines": [
          "error",
          {
            "max": 2,
            "maxBOF": 0,
            "maxEOF": 0
          }
        ],
        "no-tabs": "error",
        "no-trailing-spaces": "error",
        "no-whitespace-before-property": "error",
        "object-curly-newline": [
          "error",
          {
            "consistent": true,
            "multiline": true
          }
        ],
        "object-curly-spacing": [
          "error",
          "always"
        ],
        "object-property-newline": [
          "error",
          {
            "allowAllPropertiesOnSameLine": true
          }
        ],
        "one-var-declaration-per-line": "error",
        "operator-linebreak": "error",
        "padding-line-between-statements": [
          "error",
          {
            "blankLine": "always",
            "prev": [
              "const",
              "let",
              "var"
            ],
            "next": "*"
          },
          {
            "blankLine": "any",
            "prev": [
              "const",
              "let",
              "var"
            ],
            "next": [
              "const",
              "let",
              "var"
            ]
          }
        ],
        "quotes": [
          "error",
          "double",
          {
            "avoidEscape": true
          }
        ],
        "quote-props": [
          "error",
          "as-needed"
        ],
        "rest-spread-spacing": "error",
        "semi": "error",
        "semi-spacing": [
          "error",
          {
            "before": false,
            "after": true
          }
        ],
        "semi-style": "error",
        "space-before-blocks": "error",
        "space-before-function-paren": [
          "error",
          {
            "anonymous": "never",
            "named": "never",
            "asyncArrow": "always"
          }
        ],
        "space-in-parens": "error",
        "space-infix-ops": "error",
        "space-unary-ops": [
          "error",
          {
            "words": true,
            "nonwords": false
          }
        ],
        "spaced-comment": [
          "error",
          "always",
          {
            "exceptions": [
              "-"
            ]
          }
        ],
        "switch-colon-spacing": "error",
        "template-curly-spacing": [
          "error",
          "never"
        ],
        "template-tag-spacing": "error",
        "wrap-iife": "error",
        "yield-star-spacing": "error",
        "accessor-pairs": [
          "error",
          {
            "enforceForClassMembers": true,
            "setWithoutGet": true
          }
        ],
        "block-scoped-var": "error",
        "complexity": [
          "off",
          20
        ],
        "max-classes-per-file": [
          "error",
          1
        ],
        "no-div-regex": "off",
        "no-empty-function": [
          "error",
          {
            "allow": [
              "arrowFunctions",
              "functions",
              "methods"
            ]
          }
        ],
        "no-eq-null": "error",
        "no-extra-label": "error",
        "no-native-reassign": "off",
        "no-implicit-coercion": [
          "error",
          {
            "allow": [],
            "boolean": true,
            "disallowTemplateShorthand": true,
            "number": true,
            "string": true
          }
        ],
        "no-implicit-globals": "error",
        "no-magic-numbers": [
          "off",
          {
            "ignore": [],
            "ignoreArrayIndexes": true,
            "enforceConst": true,
            "detectObjects": false
          }
        ],
        "no-return-await": "error",
        "no-void": "error",
        "no-warning-comments": [
          "off",
          {
            "terms": [
              "todo",
              "fixme",
              "xxx"
            ],
            "location": "start"
          }
        ],
        "prefer-named-capture-group": "error",
        "require-await": "off",
        "vars-on-top": "off",
        "no-await-in-loop": "error",
        "no-extra-parens": [
          "off",
          "all",
          {
            "conditionalAssign": true,
            "nestedBinaryExpressions": false,
            "returnAssign": false,
            "ignoreJSX": "all",
            "enforceForArrowConditionals": false
          }
        ],
        "no-promise-executor-return": "error",
        "no-template-curly-in-string": "error",
        "no-negated-in-lhs": "off",
        "require-atomic-updates": "off",
        "valid-jsdoc": "off",
        "no-duplicate-imports": "off",
        "no-new-symbol": "error",
        "no-restricted-exports": [
          "error",
          {
            "restrictedNamedExports": [
              "then"
            ]
          }
        ],
        "no-restricted-imports": [
          "off",
          {
            "paths": [],
            "patterns": []
          }
        ],
        "prefer-destructuring": [
          "error",
          {
            "AssignmentExpression": {
              "array": false,
              "object": false
            },
            "VariableDeclarator": {
              "array": false,
              "object": true
            }
          },
          {
            "enforceForRenamedProperties": false
          }
        ],
        "prefer-reflect": "off",
        "sort-imports": [
          "off",
          {
            "ignoreCase": false,
            "ignoreDeclarationSort": false,
            "ignoreMemberSort": false,
            "memberSyntaxSortOrder": [
              "none",
              "all",
              "multiple",
              "single"
            ]
          }
        ],
        "callback-return": "off",
        "global-require": "off",
        "handle-callback-err": [
          "error",
          "error"
        ],
        "no-buffer-constructor": "error",
        "no-mixed-requires": [
          "off",
          false
        ],
        "no-new-require": "error",
        "no-path-concat": "error",
        "no-process-env": "off",
        "no-restricted-modules": "off",
        "no-sync": "off",
        "array-bracket-newline": [
          "off",
          "consistent"
        ],
        "array-element-newline": [
          "off",
          {
            "multiline": true,
            "minItems": 3
          }
        ],
        "capitalized-comments": [
          "off",
          "never",
          {
            "line": {
              "ignorePattern": ".*",
              "ignoreInlineComments": true,
              "ignoreConsecutiveComments": true
            },
            "block": {
              "ignorePattern": ".*",
              "ignoreInlineComments": true,
              "ignoreConsecutiveComments": true
            }
          }
        ],
        "consistent-this": "off",
        "func-name-matching": [
          "off",
          "always",
          {
            "includeCommonJSModuleExports": false,
            "considerPropertyDescriptor": true
          }
        ],
        "func-names": [
          "error",
          "as-needed"
        ],
        "id-denylist": "off",
        "id-length": "off",
        "id-match": "off",
        "implicit-arrow-linebreak": [
          "error",
          "beside"
        ],
        "jsx-quotes": [
          "off",
          "prefer-double"
        ],
        "line-comment-position": [
          "off",
          {
            "position": "above",
            "ignorePattern": "",
            "applyDefaultPatterns": true
          }
        ],
        "linebreak-style": [
          "error",
          "unix"
        ],
        "lines-between-class-members": [
          "error",
          "always",
          {
            "exceptAfterSingleLine": false
          }
        ],
        "lines-around-directive": [
          "error",
          {
            "before": "always",
            "after": "always"
          }
        ],
        "max-depth": [
          "off",
          4
        ],
        "max-lines": [
          "off",
          {
            "max": 300,
            "skipBlankLines": true,
            "skipComments": true
          }
        ],
        "max-lines-per-function": [
          "off",
          {
            "max": 50,
            "skipBlankLines": true,
            "skipComments": true,
            "IIFEs": true
          }
        ],
        "max-nested-callbacks": "off",
        "max-params": [
          "warn",
          5
        ],
        "max-statements": [
          "off",
          10
        ],
        "multiline-comment-style": [
          "off",
          "starred-block"
        ],
        "multiline-ternary": [
          "error",
          "never"
        ],
        "newline-after-var": "off",
        "newline-before-return": "off",
        "newline-per-chained-call": [
          "error",
          {
            "ignoreChainWithDepth": 4
          }
        ],
        "no-bitwise": "error",
        "no-continue": "off",
        "no-inline-comments": "off",
        "no-lonely-if": "warn",
        "no-mixed-operators": [
          "error",
          {
            "groups": [
              [
                "%",
                "**"
              ],
              [
                "%",
                "+"
              ],
              [
                "%",
                "-"
              ],
              [
                "%",
                "*"
              ],
              [
                "%",
                "/"
              ],
              [
                "/",
                "*"
              ],
              [
                "&",
                "|",
                "<<",
                ">>",
                ">>>"
              ],
              [
                "==",
                "!=",
                "===",
                "!=="
              ],
              [
                "&&",
                "||"
              ]
            ],
            "allowSamePrecedence": false
          }
        ],
        "no-multi-assign": [
          "error"
        ],
        "no-negated-condition": "off",
        "no-new-object": "error",
        "no-plusplus": [
          "error",
          {
            "allowForLoopAfterthoughts": true
          }
        ],
        "no-restricted-syntax": [
          "error",
          "TSEnumDeclaration[const=true]",
          "TSExportAssignment"
        ],
        "no-spaced-func": "error",
        "no-ternary": "off",
        "nonblock-statement-body-position": [
          "error",
          "beside",
          {
            "overrides": {}
          }
        ],
        "one-var": [
          "error",
          "never"
        ],
        "padded-blocks": [
          "error",
          {
            "blocks": "never",
            "classes": "never",
            "switches": "never"
          },
          {
            "allowSingleLineBlocks": true
          }
        ],
        "prefer-object-spread": "warn",
        "require-jsdoc": "off",
        "sort-keys": [
          "off",
          "asc",
          {
            "caseSensitive": false,
            "natural": true
          }
        ],
        "sort-vars": "off",
        "wrap-regex": "off",
        "init-declarations": "off",
        "no-catch-shadow": "off",
        "no-restricted-globals": [
          "error",
          "addEventListener",
          "blur",
          "close",
          "closed",
          "confirm",
          "defaultStatus",
          "event",
          "external",
          "defaultstatus",
          "find",
          "focus",
          "frameElement",
          "frames",
          "history",
          "innerHeight",
          "innerWidth",
          "length",
          "location",
          "locationbar",
          "menubar",
          "moveBy",
          "moveTo",
          "name",
          "onblur",
          "onerror",
          "onfocus",
          "onload",
          "onresize",
          "onunload",
          "open",
          "opener",
          "opera",
          "outerHeight",
          "outerWidth",
          "pageXOffset",
          "pageYOffset",
          "parent",
          "print",
          "removeEventListener",
          "resizeBy",
          "resizeTo",
          "screen",
          "screenLeft",
          "screenTop",
          "screenX",
          "screenY",
          "scroll",
          "scrollbars",
          "scrollBy",
          "scrollTo",
          "scrollX",
          "scrollY",
          "self",
          "status",
          "statusbar",
          "stop",
          "toolbar",
          "top",
          {
            "name": "global",
            "message": "Use `globalThis` instead."
          },
          {
            "name": "self",
            "message": "Use `globalThis` instead."
          }
        ]
      },
      "index": 7
    },
    {
      "name": "@demonicattack/@node/rules",
      "plugins": {
        "@node": {}
      },
      "rules": {
        "@node/callback-return": [
          "error",
          [
            "cb",
            "callback",
            "next"
          ]
        ],
        "@node/handle-callback-err": [
          "error",
          "err"
        ],
        "@node/prefer-node-protocol": "error",
        "@node/no-mixed-requires": "error",
        "@node/no-new-require": "error",
        "@node/no-path-concat": "error"
      },
      "index": 8
    },
    {
      "name": "@demonicattack/@arca/rules",
      "plugins": {
        "@arca": {}
      },
      "rules": {
        "@arca/curly": "error",
        "@arca/import-quotes": "error",
        "@arca/jsx-import-react": "error",
        "@arca/jsx-longhand-props": "error",
        "@arca/jsx-no-string-styles": "error",
        "@arca/melted-constructs": "error",
        "@arca/no-default-export": "error"
      },
      "index": 9
    },
    {
      "name": "@demonicattack/@comments/rules",
      "plugins": {
        "@comments": {}
      },
      "rules": {
        "@comments/disable-enable-pair": "error",
        "@comments/no-aggregating-enable": "error",
        "@comments/no-duplicate-disable": "error",
        "@comments/no-unlimited-disable": "error",
        "@comments/no-unused-enable": "error"
      },
      "index": 10
    },
    {
      "name": "@demonicattack/@esx/rules",
      "plugins": {
        "@es-x": {}
      },
      "rules": {
        "@es-x/no-async-iteration": "error",
        "@es-x/no-malformed-template-literals": "error",
        "@es-x/no-regexp-lookbehind-assertions": "error",
        "@es-x/no-regexp-named-capture-groups": "error",
        "@es-x/no-regexp-s-flag": "error",
        "@es-x/no-regexp-unicode-property-escapes": "error"
      },
      "index": 11
    },
    {
      "name": "@demonicattack/@import/setup",
      "plugins": {
        "@import": {},
        "@simple-import-sort": {}
      },
      "index": 12
    },
    {
      "name": "@demonicattack/@import/rules",
      "rules": {
        "@import/no-unresolved": [
          "error",
          {
            "commonjs": true,
            "caseSensitive": true
          }
        ],
        "@import/named": "off",
        "@import/namespace": "off",
        "@import/default": "off",
        "@import/export": "off",
        "@import/no-named-as-default": "error",
        "@import/no-named-as-default-member": "error",
        "@import/no-duplicates": "error",
        "@import/no-deprecated": "off",
        "@import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": [
              "test/**",
              "tests/**",
              "spec/**",
              "**/__tests__/**",
              "**/__mocks__/**",
              "test.{js,jsx}",
              "test-*.{js,jsx}",
              "**/*{.,_}{test,spec}.{js,jsx}",
              "**/jest.config.js",
              "**/jest.setup.js",
              "**/vue.config.js",
              "**/webpack.config.js",
              "**/webpack.config.*.js",
              "**/rollup.config.js",
              "**/rollup.config.*.js",
              "**/gulpfile.js",
              "**/gulpfile.*.js",
              "**/Gruntfile{,.js}",
              "**/protractor.conf.js",
              "**/protractor.conf.*.js",
              "**/karma.conf.js",
              "**/.eslintrc.js"
            ],
            "optionalDependencies": false
          }
        ],
        "@import/no-mutable-exports": "error",
        "@import/no-commonjs": "off",
        "@import/no-amd": "error",
        "@import/no-nodejs-modules": "off",
        "@import/first": "error",
        "@import/imports-first": "off",
        "@import/no-namespace": "off",
        "@import/extensions": [
          "error",
          "ignorePackages",
          {
            "js": "never",
            "jsx": "never",
            "mjs": "never",
            "ts": "never",
            "tsx": "never"
          }
        ],
        "@import/order": "off",
        "@import/newline-after-import": "error",
        "@import/prefer-default-export": "off",
        "@import/no-restricted-paths": "off",
        "@import/max-dependencies": [
          "off",
          {
            "max": 10
          }
        ],
        "@import/no-absolute-path": "error",
        "@import/no-dynamic-require": "error",
        "@import/no-internal-modules": [
          "off",
          {
            "allow": []
          }
        ],
        "@import/unambiguous": "off",
        "@import/no-webpack-loader-syntax": "error",
        "@import/no-unassigned-import": "off",
        "@import/no-named-default": "error",
        "@import/no-anonymous-default-export": [
          "off",
          {
            "allowArray": false,
            "allowArrowFunction": false,
            "allowAnonymousClass": false,
            "allowAnonymousFunction": false,
            "allowLiteral": false,
            "allowObject": false
          }
        ],
        "@import/exports-last": "off",
        "@import/group-exports": "off",
        "@import/no-default-export": "off",
        "@import/no-named-export": "off",
        "@import/no-self-import": "error",
        "@import/no-cycle": [
          "error",
          {
            "maxDepth": "∞"
          }
        ],
        "@import/no-useless-path-segments": [
          "error",
          {
            "commonjs": true
          }
        ],
        "@import/dynamic-import-chunkname": [
          "off",
          {
            "importFunctions": [],
            "webpackChunknameFormat": "[0-9a-zA-Z-_/.]+"
          }
        ],
        "@import/no-relative-parent-imports": "off",
        "@import/no-unused-modules": [
          "off",
          {
            "ignoreExports": [],
            "missingExports": true,
            "unusedExports": true
          }
        ],
        "@import/no-import-module-exports": [
          "error",
          {
            "exceptions": []
          }
        ],
        "@import/no-relative-packages": "error",
        "@import/consistent-type-specifier-style": [
          "error",
          "prefer-top-level"
        ],
        "@simple-import-sort/exports": "error",
        "@simple-import-sort/imports": [
          "error",
          {
            "groups": [
              [
                "^react",
                "^next",
                "^\\w"
              ],
              [
                "^@app(/.*|$)"
              ],
              [
                "^@store(/.*|$)"
              ],
              [
                "^@components(/.*|$)"
              ],
              [
                "^@ui(/.*|$)"
              ],
              [
                "^@lib(/.*|$)"
              ],
              [
                "^@pages(/.*|$)"
              ],
              [
                "^@routes(/.*|$)"
              ],
              [
                "^@layouts(/.*|$)"
              ],
              [
                "^@widgets(/.*|$)"
              ],
              [
                "^@features(/.*|$)"
              ],
              [
                "^@entities(/.*|$)"
              ],
              [
                "^@utils(/.*|$)"
              ],
              [
                "^@assets(/.*|$)"
              ],
              [
                "^@helpers(/.*|$)"
              ],
              [
                "^@hooks(/.*|$)"
              ],
              [
                "^@providers(/.*|$)"
              ],
              [
                "^@services(/.*|$)"
              ],
              [
                "^@shared(/.*|$)"
              ],
              [
                "^\\u0000"
              ],
              [
                "^\\.\\.(?!/?$)",
                "^\\.\\./?$"
              ],
              [
                "^\\./(?=.*/)(?!/?$)",
                "^\\.(?!/?$)",
                "^\\./?$"
              ],
              [
                "^.+\\.?(css)$"
              ]
            ]
          }
        ]
      },
      "settings": {
        "import/resolver": {
          "node": {
            "extensions": [
              ".ts",
              ".tsx",
              ".js",
              ".jsx",
              ".json"
            ]
          },
          "typescript": {
            "alwaysTryTypes": true
          }
        },
        "import/extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ],
        "import/core-modules": [],
        "import/ignore": [
          "node_modules",
          "\\.(coffee|scss|css|less|hbs|svg|json)$"
        ],
        "import/parsers": {
          "typescript-eslint/parser": [
            ".ts",
            ".tsx",
            ".d.ts"
          ]
        }
      },
      "index": 13
    },
    {
      "name": "@demonicattack/@mutation/rules",
      "plugins": {
        "@mutation": {}
      },
      "rules": {
        "@mutation/no-mutating-functions": "error",
        "@mutation/no-mutating-methods": "error",
        "@mutation/no-mutation": "error"
      },
      "index": 14
    },
    {
      "name": "@demonicattack/@perfectionist/rules",
      "plugins": {
        "@perfectionist": {}
      },
      "rules": {
        "@perfectionist/sort-array-includes": "error",
        "@perfectionist/sort-astro-attributes": "off",
        "@perfectionist/sort-classes": "off",
        "@perfectionist/sort-enums": "error",
        "@perfectionist/sort-exports": "off",
        "@perfectionist/sort-imports": "off",
        "@perfectionist/sort-interfaces": [
          "error",
          {
            "type": "natural",
            "ignoreCase": false,
            "customGroups": {
              "id": [
                "^_$",
                "^id$",
                "^key$",
                "^self$"
              ],
              "type": [
                "^type$",
                "^kind$"
              ],
              "meta": [
                "^name$",
                "^meta$",
                "^title$",
                "^description$"
              ],
              "alias": [
                "^alias$",
                "^as$"
              ],
              "rules": [
                "^node$",
                "^messageId$"
              ]
            },
            "groups": [
              "id",
              "type",
              "meta",
              "alias",
              "rules",
              "unknown"
            ]
          }
        ],
        "@perfectionist/sort-intersection-types": "error",
        "@perfectionist/sort-jsx-props": "error",
        "@perfectionist/sort-maps": "error",
        "@perfectionist/sort-modules": "off",
        "@perfectionist/sort-named-exports": "off",
        "@perfectionist/sort-named-imports": "off",
        "@perfectionist/sort-object-types": [
          "error",
          {
            "type": "natural",
            "ignoreCase": false,
            "customGroups": {
              "id": [
                "^_$",
                "^id$",
                "^key$",
                "^self$"
              ],
              "type": [
                "^type$",
                "^kind$"
              ],
              "meta": [
                "^name$",
                "^meta$",
                "^title$",
                "^description$"
              ],
              "alias": [
                "^alias$",
                "^as$"
              ],
              "rules": [
                "^node$",
                "^messageId$"
              ]
            },
            "groups": [
              "id",
              "type",
              "meta",
              "alias",
              "rules",
              "unknown"
            ],
            "partitionByComment": "^Part:.*"
          }
        ],
        "@perfectionist/sort-objects": [
          "error",
          {
            "type": "natural",
            "ignoreCase": false,
            "customGroups": {
              "id": [
                "^_$",
                "^id$",
                "^key$",
                "^self$"
              ],
              "type": [
                "^type$",
                "^kind$"
              ],
              "meta": [
                "^name$",
                "^meta$",
                "^title$",
                "^description$"
              ],
              "alias": [
                "^alias$",
                "^as$"
              ],
              "rules": [
                "^node$",
                "^messageId$"
              ]
            },
            "groups": [
              "id",
              "type",
              "meta",
              "alias",
              "rules",
              "unknown"
            ],
            "partitionByComment": "^Part:.*"
          }
        ],
        "@perfectionist/sort-sets": "error",
        "@perfectionist/sort-svelte-attributes": "off",
        "@perfectionist/sort-switch-case": "error",
        "@perfectionist/sort-union-types": "error",
        "@perfectionist/sort-variable-declarations": "error",
        "@perfectionist/sort-vue-attributes": "off"
      },
      "index": 15
    },
    {
      "name": "@demonicattack/@promise/rules",
      "plugins": {
        "@promise": {}
      },
      "rules": {
        "@promise/always-return": "off",
        "@promise/no-return-wrap": [
          "error",
          {
            "allowReject": true
          }
        ],
        "@promise/param-names": "error",
        "@promise/catch-or-return": "off",
        "@promise/no-native": "off",
        "@promise/no-nesting": "warn",
        "@promise/no-promise-in-callback": "warn",
        "@promise/no-callback-in-promise": "warn",
        "@promise/avoid-new": "off",
        "@promise/no-new-statics": "error",
        "@promise/no-return-in-finally": "warn",
        "@promise/valid-params": "warn"
      },
      "index": 16
    },
    {
      "name": "@demonicattack/@regexp/rules",
      "plugins": {
        "@regexp": {}
      },
      "rules": {
        "no-control-regex": "error",
        "no-misleading-character-class": "error",
        "no-regex-spaces": "error",
        "prefer-regex-literals": "error",
        "no-invalid-regexp": "off",
        "no-useless-backreference": "off",
        "no-empty-character-class": "off",
        "@regexp/confusing-quantifier": "warn",
        "@regexp/control-character-escape": "error",
        "@regexp/match-any": [
          "error",
          {
            "allows": [
              "dotAll",
              "[\\S\\s]"
            ]
          }
        ],
        "@regexp/negation": "error",
        "@regexp/no-contradiction-with-assertion": "error",
        "@regexp/no-dupe-characters-character-class": "error",
        "@regexp/no-dupe-disjunctions": "error",
        "@regexp/no-empty-alternative": "warn",
        "@regexp/no-empty-capturing-group": "error",
        "@regexp/no-empty-character-class": "error",
        "@regexp/no-empty-group": "error",
        "@regexp/no-empty-lookarounds-assertion": "error",
        "@regexp/no-empty-string-literal": "error",
        "@regexp/no-escape-backspace": "error",
        "@regexp/no-extra-lookaround-assertions": "error",
        "@regexp/no-invalid-regexp": "error",
        "@regexp/no-invisible-character": "error",
        "@regexp/no-lazy-ends": "warn",
        "@regexp/no-legacy-features": "error",
        "@regexp/no-misleading-capturing-group": "error",
        "@regexp/no-misleading-unicode-character": "error",
        "@regexp/no-missing-g-flag": "error",
        "@regexp/no-non-standard-flag": "error",
        "@regexp/no-obscure-range": "error",
        "@regexp/no-optional-assertion": "error",
        "@regexp/no-potentially-useless-backreference": "warn",
        "@regexp/no-super-linear-backtracking": "error",
        "@regexp/no-trivially-nested-assertion": "error",
        "@regexp/no-trivially-nested-quantifier": "error",
        "@regexp/no-unused-capturing-group": "error",
        "@regexp/no-useless-assertions": "error",
        "@regexp/no-useless-backreference": "error",
        "@regexp/no-useless-character-class": "error",
        "@regexp/no-useless-dollar-replacements": "error",
        "@regexp/no-useless-escape": "error",
        "@regexp/no-useless-flag": [
          "error",
          {
            "strictTypes": false
          }
        ],
        "@regexp/no-useless-lazy": "error",
        "@regexp/no-useless-non-capturing-group": "error",
        "@regexp/no-useless-quantifier": "error",
        "@regexp/no-useless-range": "error",
        "@regexp/no-useless-set-operand": "error",
        "@regexp/no-useless-string-literal": "error",
        "@regexp/no-useless-two-nums-quantifier": "error",
        "@regexp/no-zero-quantifier": "error",
        "@regexp/optimal-lookaround-quantifier": "warn",
        "@regexp/optimal-quantifier-concatenation": "error",
        "@regexp/prefer-character-class": "error",
        "@regexp/prefer-d": "error",
        "@regexp/prefer-plus-quantifier": "error",
        "@regexp/prefer-predefined-assertion": "error",
        "@regexp/prefer-question-quantifier": "error",
        "@regexp/prefer-range": "error",
        "@regexp/prefer-set-operation": "error",
        "@regexp/prefer-star-quantifier": "error",
        "@regexp/prefer-unicode-codepoint-escapes": "error",
        "@regexp/prefer-w": "error",
        "@regexp/simplify-set-operations": "error",
        "@regexp/sort-flags": "error",
        "@regexp/strict": "off",
        "@regexp/use-ignore-case": "error",
        "@regexp/no-super-linear-move": "off",
        "@regexp/order-in-character-class": "off",
        "@regexp/prefer-lookaround": "off",
        "@regexp/prefer-named-capture-group": "off",
        "@regexp/require-unicode-regexp": "off",
        "@regexp/require-unicode-sets-regexp": "off",
        "@regexp/sort-character-class-elements": "off"
      },
      "index": 17
    },
    {
      "name": "@demonicattack/@unicorn/rules",
      "plugins": {
        "@unicorn": {}
      },
      "rules": {
        "no-negated-condition": "off",
        "no-nested-ternary": "off",
        "@unicorn/better-regex": "off",
        "@unicorn/catch-error-name": "error",
        "@unicorn/consistent-destructuring": "off",
        "@unicorn/consistent-empty-array-spread": "error",
        "@unicorn/consistent-existence-index-check": "error",
        "@unicorn/consistent-function-scoping": "warn",
        "@unicorn/custom-error-definition": "off",
        "@unicorn/empty-brace-spaces": "error",
        "@unicorn/error-message": "error",
        "@unicorn/escape-case": "error",
        "@unicorn/expiring-todo-comments": "warn",
        "@unicorn/explicit-length-check": [
          "error",
          {
            "non-zero": "not-equal"
          }
        ],
        "@unicorn/filename-case": "error",
        "@unicorn/import-style": [
          "error",
          {
            "styles": {
              "node:path": {
                "named": true,
                "namespace": true
              },
              "path": {
                "named": true,
                "namespace": true
              }
            }
          }
        ],
        "@unicorn/new-for-builtins": "error",
        "@unicorn/no-abusive-eslint-disable": "error",
        "@unicorn/no-anonymous-default-export": "error",
        "@unicorn/no-array-callback-reference": "warn",
        "@unicorn/no-array-for-each": "error",
        "@unicorn/no-array-method-this-argument": "error",
        "@unicorn/no-array-push-push": "error",
        "@unicorn/no-array-reduce": "off",
        "@unicorn/no-await-expression-member": "error",
        "@unicorn/no-await-in-promise-methods": "error",
        "@unicorn/no-console-spaces": "error",
        "@unicorn/no-document-cookie": "error",
        "@unicorn/no-empty-file": "error",
        "@unicorn/no-for-loop": "warn",
        "@unicorn/no-hex-escape": "error",
        "@unicorn/no-instanceof-array": "error",
        "@unicorn/no-invalid-fetch-options": "error",
        "@unicorn/no-invalid-remove-event-listener": "error",
        "@unicorn/no-keyword-prefix": "off",
        "@unicorn/no-length-as-slice-end": "error",
        "@unicorn/no-lonely-if": "error",
        "@unicorn/no-magic-array-flat-depth": "error",
        "@unicorn/no-negated-condition": "error",
        "@unicorn/no-negation-in-equality-check": "error",
        "@unicorn/no-nested-ternary": "error",
        "@unicorn/no-new-array": "error",
        "@unicorn/no-new-buffer": "error",
        "@unicorn/no-null": "off",
        "@unicorn/no-object-as-default-parameter": "off",
        "@unicorn/no-process-exit": "warn",
        "@unicorn/no-single-promise-in-promise-methods": "error",
        "@unicorn/no-static-only-class": "error",
        "@unicorn/no-thenable": "error",
        "@unicorn/no-this-assignment": "error",
        "@unicorn/no-typeof-undefined": "error",
        "@unicorn/no-unnecessary-await": "error",
        "@unicorn/no-unnecessary-polyfills": "off",
        "@unicorn/no-unreadable-array-destructuring": "error",
        "@unicorn/no-unreadable-iife": "error",
        "@unicorn/no-unused-properties": "off",
        "@unicorn/no-useless-fallback-in-spread": "error",
        "@unicorn/no-useless-length-check": "error",
        "@unicorn/no-useless-promise-resolve-reject": "error",
        "@unicorn/no-useless-spread": "error",
        "@unicorn/no-useless-switch-case": "error",
        "@unicorn/no-useless-undefined": "error",
        "@unicorn/no-zero-fractions": "error",
        "@unicorn/number-literal-case": "error",
        "@unicorn/numeric-separators-style": "error",
        "@unicorn/prefer-add-event-listener": "off",
        "@unicorn/prefer-array-find": "error",
        "@unicorn/prefer-array-flat-map": "error",
        "@unicorn/prefer-array-flat": "error",
        "@unicorn/prefer-array-index-of": "error",
        "@unicorn/prefer-array-some": "error",
        "@unicorn/prefer-at": "error",
        "@unicorn/prefer-blob-reading-methods": "error",
        "@unicorn/prefer-code-point": "error",
        "@unicorn/prefer-date-now": "error",
        "@unicorn/prefer-default-parameters": "off",
        "@unicorn/prefer-dom-node-append": "off",
        "@unicorn/prefer-dom-node-dataset": "off",
        "@unicorn/prefer-dom-node-remove": "off",
        "@unicorn/prefer-dom-node-text-content": "error",
        "@unicorn/prefer-event-target": "error",
        "@unicorn/prefer-export-from": [
          "error",
          {
            "ignoreUsedVariables": true
          }
        ],
        "@unicorn/prefer-global-this": "error",
        "@unicorn/prefer-includes": "error",
        "@unicorn/prefer-json-parse-buffer": "error",
        "@unicorn/prefer-keyboard-event-key": "error",
        "@unicorn/prefer-logical-operator-over-ternary": "error",
        "@unicorn/prefer-math-min-max": "error",
        "@unicorn/prefer-math-trunc": "error",
        "@unicorn/prefer-modern-dom-apis": "off",
        "@unicorn/prefer-modern-math-apis": "error",
        "@unicorn/prefer-module": "off",
        "@unicorn/prefer-native-coercion-functions": "error",
        "@unicorn/prefer-negative-index": "error",
        "@unicorn/prefer-node-protocol": "error",
        "@unicorn/prefer-number-properties": "error",
        "@unicorn/prefer-object-from-entries": "error",
        "@unicorn/prefer-optional-catch-binding": "error",
        "@unicorn/prefer-prototype-methods": "error",
        "@unicorn/prefer-query-selector": "off",
        "@unicorn/prefer-reflect-apply": "error",
        "@unicorn/prefer-regexp-test": "error",
        "@unicorn/prefer-set-has": "error",
        "@unicorn/prefer-set-size": "error",
        "@unicorn/prefer-spread": "error",
        "@unicorn/prefer-string-raw": "off",
        "@unicorn/prefer-string-replace-all": "error",
        "@unicorn/prefer-string-slice": "error",
        "@unicorn/prefer-string-starts-ends-with": "error",
        "@unicorn/prefer-string-trim-start-end": "error",
        "@unicorn/prefer-structured-clone": "error",
        "@unicorn/prefer-switch": "error",
        "@unicorn/prefer-ternary": "off",
        "@unicorn/prefer-top-level-await": "error",
        "@unicorn/prefer-type-error": "error",
        "@unicorn/prevent-abbreviations": [
          "error",
          {
            "checkDefaultAndNamespaceImports": true,
            "checkShorthandImports": true,
            "checkShorthandProperties": true
          }
        ],
        "@unicorn/relative-url-style": [
          "error",
          "always"
        ],
        "@unicorn/require-array-join-separator": "error",
        "@unicorn/require-number-to-fixed-digits-argument": "error",
        "@unicorn/require-post-message-target-origin": "off",
        "@unicorn/string-content": "off",
        "@unicorn/switch-case-braces": [
          "error",
          "avoid"
        ],
        "@unicorn/template-indent": "error",
        "@unicorn/text-encoding-identifier-case": "error",
        "@unicorn/throw-new-error": "error",
        "@unicorn/import-index": "off"
      },
      "index": 18
    },
    {
      "name": "@demonicattack/@jsx/setup",
      "files": [
        "**/*.?([cm])js?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "languageOptions": {
        "parserOptions": {
          "ecmaFeatures": {
            "jsx": true
          }
        }
      },
      "index": 19
    },
    {
      "name": "@demonicattack/@eslint/rules",
      "plugins": {
        "@eslint": {}
      },
      "rules": {
        "@eslint/fixer-return": "error",
        "@eslint/no-deprecated-context-methods": "error",
        "@eslint/no-deprecated-report-api": "error",
        "@eslint/no-identical-tests": "error",
        "@eslint/no-missing-message-ids": "error",
        "@eslint/no-missing-placeholders": "error",
        "@eslint/no-only-tests": "error",
        "@eslint/no-unused-message-ids": "error",
        "@eslint/no-unused-placeholders": "error",
        "@eslint/no-useless-token-range": "error",
        "@eslint/prefer-message-ids": "error",
        "@eslint/prefer-object-rule": "error",
        "@eslint/prefer-output-null": "error",
        "@eslint/require-meta-fixable": "error",
        "@eslint/require-meta-has-suggestions": "error",
        "@eslint/require-meta-schema": "error",
        "@eslint/require-meta-type": "error"
      },
      "index": 20
    },
    {
      "name": "@demonicattack/@sonarjs/rules",
      "plugins": {
        "@sonarjs": {}
      },
      "rules": {
        "@sonarjs/function-name": "off",
        "@sonarjs/class-name": "error",
        "@sonarjs/max-lines": "off",
        "@sonarjs/no-tab": "off",
        "@sonarjs/variable-name": "off",
        "@sonarjs/comment-regex": "off",
        "@sonarjs/no-commented-code": "error",
        "@sonarjs/elseif-without-else": "off",
        "@sonarjs/no-fallthrough": "error",
        "@sonarjs/nested-control-flow": "off",
        "@sonarjs/too-many-break-or-continue-in-loop": "off",
        "@sonarjs/max-lines-per-function": "off",
        "@sonarjs/no-nested-incdec": "off",
        "@sonarjs/no-equals-in-for-termination": "error",
        "@sonarjs/no-extra-arguments": "error",
        "@sonarjs/no-collapsible-if": "off",
        "@sonarjs/expression-complexity": "off",
        "@sonarjs/no-redundant-parentheses": "off",
        "@sonarjs/no-labels": "error",
        "@sonarjs/no-nested-assignment": "error",
        "@sonarjs/no-redundant-boolean": "error",
        "@sonarjs/prefer-single-boolean-return": "off",
        "@sonarjs/unused-import": "error",
        "@sonarjs/fixme-tag": "error",
        "@sonarjs/todo-tag": "error",
        "@sonarjs/useless-string-operation": "off",
        "@sonarjs/no-unused-function-argument": "off",
        "@sonarjs/no-duplicate-string": "off",
        "@sonarjs/no-case-label-in-switch": "error",
        "@sonarjs/no-parameter-reassignment": "error",
        "@sonarjs/prefer-while": "error",
        "@sonarjs/no-sonar-comments": "off",
        "@sonarjs/no-small-switch": "error",
        "@sonarjs/no-hardcoded-ip": "error",
        "@sonarjs/label-position": "error",
        "@sonarjs/public-static-readonly": "error",
        "@sonarjs/file-header": "off",
        "@sonarjs/call-argument-line": "error",
        "@sonarjs/max-switch-cases": "error",
        "@sonarjs/no-unused-vars": "error",
        "@sonarjs/prefer-immediate-return": "off",
        "@sonarjs/function-inside-loop": "error",
        "@sonarjs/code-eval": "error",
        "@sonarjs/no-variable-usage-before-declaration": "off",
        "@sonarjs/future-reserved-words": "error",
        "@sonarjs/array-constructor": "off",
        "@sonarjs/bitwise-operators": "error",
        "@sonarjs/no-function-declaration-in-block": "off",
        "@sonarjs/no-primitive-wrappers": "error",
        "@sonarjs/for-in": "off",
        "@sonarjs/cyclomatic-complexity": "off",
        "@sonarjs/no-skipped-tests": "error",
        "@sonarjs/no-one-iteration-loop": "error",
        "@sonarjs/no-identical-expressions": "error",
        "@sonarjs/no-nested-switch": "off",
        "@sonarjs/constructor-for-side-effects": "error",
        "@sonarjs/no-dead-store": "error",
        "@sonarjs/no-identical-conditions": "error",
        "@sonarjs/no-duplicated-branches": "error",
        "@sonarjs/deprecation": "error",
        "@sonarjs/no-inverted-boolean-check": "error",
        "@sonarjs/misplaced-loop-counter": "error",
        "@sonarjs/no-nested-functions": "error",
        "@sonarjs/no-hardcoded-passwords": "error",
        "@sonarjs/sql-queries": "error",
        "@sonarjs/insecure-cookie": "error",
        "@sonarjs/no-useless-increment": "error",
        "@sonarjs/no-globals-shadowing": "error",
        "@sonarjs/no-undefined-assignment": "off",
        "@sonarjs/no-empty-test-file": "error",
        "@sonarjs/no-ignored-return": "error",
        "@sonarjs/no-wildcard-import": "off",
        "@sonarjs/arguments-order": "error",
        "@sonarjs/pseudo-random": "error",
        "@sonarjs/for-loop-increment-sign": "error",
        "@sonarjs/cookies": "off",
        "@sonarjs/null-dereference": "error",
        "@sonarjs/no-selector-parameter": "error",
        "@sonarjs/updated-loop-counter": "error",
        "@sonarjs/block-scoped-var": "error",
        "@sonarjs/no-built-in-override": "off",
        "@sonarjs/prefer-object-literal": "off",
        "@sonarjs/no-ignored-exceptions": "error",
        "@sonarjs/no-gratuitous-expressions": "error",
        "@sonarjs/file-uploads": "error",
        "@sonarjs/file-permissions": "error",
        "@sonarjs/no-empty-character-class": "error",
        "@sonarjs/no-unenclosed-multiline-block": "error",
        "@sonarjs/index-of-compare-to-positive-number": "error",
        "@sonarjs/assertions-in-tests": "error",
        "@sonarjs/no-implicit-global": "error",
        "@sonarjs/no-useless-catch": "error",
        "@sonarjs/xml-parser-xxe": "error",
        "@sonarjs/non-existent-operator": "error",
        "@sonarjs/web-sql-database": "off",
        "@sonarjs/post-message": "error",
        "@sonarjs/no-array-delete": "error",
        "@sonarjs/no-alphabetical-sort": "error",
        "@sonarjs/no-incomplete-assertions": "error",
        "@sonarjs/no-global-this": "error",
        "@sonarjs/new-operator-misuse": "error",
        "@sonarjs/no-delete-var": "error",
        "@sonarjs/strings-comparison": "off",
        "@sonarjs/file-name-differ-from-class": "off",
        "@sonarjs/cookie-no-httponly": "error",
        "@sonarjs/no-nested-conditional": "error",
        "@sonarjs/no-incorrect-string-concat": "off",
        "@sonarjs/different-types-comparison": "error",
        "@sonarjs/inverted-assertion-arguments": "error",
        "@sonarjs/shorthand-property-grouping": "off",
        "@sonarjs/updated-const-var": "error",
        "@sonarjs/arguments-usage": "off",
        "@sonarjs/destructuring-assignment-syntax": "off",
        "@sonarjs/no-invariant-returns": "error",
        "@sonarjs/arrow-function-convention": "off",
        "@sonarjs/class-prototype": "off",
        "@sonarjs/generator-without-yield": "error",
        "@sonarjs/no-require-or-define": "off",
        "@sonarjs/no-associative-arrays": "error",
        "@sonarjs/comma-or-logical-or-case": "error",
        "@sonarjs/no-redundant-jump": "error",
        "@sonarjs/inconsistent-function-call": "error",
        "@sonarjs/no-use-of-empty-return-value": "error",
        "@sonarjs/enforce-trailing-comma": "off",
        "@sonarjs/void-use": "error",
        "@sonarjs/operation-returning-nan": "off",
        "@sonarjs/values-not-convertible-to-numbers": "off",
        "@sonarjs/non-number-in-arithmetic-expression": "off",
        "@sonarjs/cognitive-complexity": "off",
        "@sonarjs/argument-type": "error",
        "@sonarjs/in-operator-type-error": "error",
        "@sonarjs/array-callback-without-return": "error",
        "@sonarjs/declarations-in-global-scope": "off",
        "@sonarjs/function-return-type": "error",
        "@sonarjs/no-inconsistent-returns": "off",
        "@sonarjs/no-reference-error": "off",
        "@sonarjs/super-invocation": "error",
        "@sonarjs/no-all-duplicated-branches": "error",
        "@sonarjs/no-same-line-conditional": "error",
        "@sonarjs/conditional-indentation": "off",
        "@sonarjs/no-collection-size-mischeck": "error",
        "@sonarjs/no-unthrown-error": "error",
        "@sonarjs/no-unused-collection": "error",
        "@sonarjs/no-os-command-from-path": "error",
        "@sonarjs/no-misleading-array-reverse": "error",
        "@sonarjs/no-invalid-await": "error",
        "@sonarjs/no-for-in-iterable": "off",
        "@sonarjs/no-element-overwrite": "error",
        "@sonarjs/no-identical-functions": "error",
        "@sonarjs/no-empty-collection": "error",
        "@sonarjs/no-redundant-assignments": "error",
        "@sonarjs/prefer-type-guard": "error",
        "@sonarjs/use-type-alias": "error",
        "@sonarjs/no-return-type-any": "off",
        "@sonarjs/no-implicit-dependencies": "off",
        "@sonarjs/no-useless-intersection": "error",
        "@sonarjs/weak-ssl": "error",
        "@sonarjs/no-weak-keys": "error",
        "@sonarjs/csrf": "error",
        "@sonarjs/production-debug": "error",
        "@sonarjs/prefer-default-last": "error",
        "@sonarjs/no-in-misuse": "error",
        "@sonarjs/no-duplicate-in-composite": "error",
        "@sonarjs/max-union-size": "off",
        "@sonarjs/no-undefined-argument": "error",
        "@sonarjs/no-nested-template-literals": "off",
        "@sonarjs/prefer-promise-shorthand": "error",
        "@sonarjs/os-command": "error",
        "@sonarjs/no-redundant-optional": "error",
        "@sonarjs/regular-expr": "off",
        "@sonarjs/encryption": "off",
        "@sonarjs/hashing": "error",
        "@sonarjs/bool-param-default": "off",
        "@sonarjs/xpath": "off",
        "@sonarjs/sockets": "off",
        "@sonarjs/no-try-promise": "error",
        "@sonarjs/process-argv": "off",
        "@sonarjs/standard-input": "off",
        "@sonarjs/unverified-certificate": "error",
        "@sonarjs/no-unsafe-unzip": "error",
        "@sonarjs/cors": "error",
        "@sonarjs/link-with-target-blank": "error",
        "@sonarjs/disabled-auto-escaping": "error",
        "@sonarjs/table-header": "error",
        "@sonarjs/no-table-as-layout": "error",
        "@sonarjs/table-header-reference": "error",
        "@sonarjs/object-alt-content": "error",
        "@sonarjs/no-clear-text-protocols": "error",
        "@sonarjs/publicly-writable-directories": "error",
        "@sonarjs/unverified-hostname": "error",
        "@sonarjs/encryption-secure-mode": "error",
        "@sonarjs/no-weak-cipher": "error",
        "@sonarjs/no-intrusive-permissions": "error",
        "@sonarjs/insecure-jwt-token": "error",
        "@sonarjs/x-powered-by": "error",
        "@sonarjs/hidden-files": "error",
        "@sonarjs/content-length": "error",
        "@sonarjs/disabled-resource-integrity": "error",
        "@sonarjs/content-security-policy": "error",
        "@sonarjs/no-mixed-content": "error",
        "@sonarjs/frame-ancestors": "error",
        "@sonarjs/no-mime-sniff": "error",
        "@sonarjs/no-referrer-policy": "error",
        "@sonarjs/strict-transport-security": "error",
        "@sonarjs/certificate-transparency": "error",
        "@sonarjs/dns-prefetching": "off",
        "@sonarjs/confidential-information-logging": "error",
        "@sonarjs/no-ip-forward": "error",
        "@sonarjs/empty-string-repetition": "error",
        "@sonarjs/regex-complexity": "error",
        "@sonarjs/anchor-precedence": "error",
        "@sonarjs/slow-regex": "error",
        "@sonarjs/no-invalid-regexp": "error",
        "@sonarjs/unused-named-groups": "error",
        "@sonarjs/no-same-argument-assert": "error",
        "@sonarjs/unicode-aware-regex": "off",
        "@sonarjs/no-misleading-character-class": "error",
        "@sonarjs/duplicates-in-character-class": "error",
        "@sonarjs/session-regeneration": "error",
        "@sonarjs/test-check-exception": "error",
        "@sonarjs/stable-tests": "error",
        "@sonarjs/no-empty-after-reluctant": "error",
        "@sonarjs/single-character-alternation": "error",
        "@sonarjs/no-code-after-done": "error",
        "@sonarjs/disabled-timeout": "error",
        "@sonarjs/chai-determinate-assertion": "error",
        "@sonarjs/aws-s3-bucket-server-encryption": "off",
        "@sonarjs/aws-s3-bucket-insecure-http": "error",
        "@sonarjs/aws-s3-bucket-versioning": "error",
        "@sonarjs/aws-s3-bucket-granted-access": "error",
        "@sonarjs/no-angular-bypass-sanitization": "error",
        "@sonarjs/aws-iam-public-access": "error",
        "@sonarjs/aws-ec2-unencrypted-ebs-volume": "error",
        "@sonarjs/aws-s3-bucket-public-access": "error",
        "@sonarjs/no-vue-bypass-sanitization": "off",
        "@sonarjs/aws-iam-all-privileges": "error",
        "@sonarjs/aws-rds-unencrypted-databases": "error",
        "@sonarjs/aws-iam-all-resources-accessible": "off",
        "@sonarjs/aws-opensearchservice-domain": "error",
        "@sonarjs/aws-iam-privilege-escalation": "error",
        "@sonarjs/aws-sagemaker-unencrypted-notebook": "error",
        "@sonarjs/aws-restricted-ip-admin-access": "error",
        "@sonarjs/no-empty-alternatives": "error",
        "@sonarjs/no-control-regex": "error",
        "@sonarjs/no-regex-spaces": "error",
        "@sonarjs/aws-sns-unencrypted-topics": "error",
        "@sonarjs/existing-groups": "error",
        "@sonarjs/aws-ec2-rds-dms-public": "error",
        "@sonarjs/aws-sqs-unencrypted-queue": "error",
        "@sonarjs/no-empty-group": "error",
        "@sonarjs/aws-efs-unencrypted": "error",
        "@sonarjs/aws-apigateway-public-api": "error",
        "@sonarjs/stateful-regex": "error",
        "@sonarjs/concise-regex": "error",
        "@sonarjs/single-char-in-character-classes": "error",
        "@sonarjs/no-hardcoded-secrets": "error",
        "@sonarjs/no-exclusive-tests": "error",
        "@sonarjs/jsx-no-leaked-render": "error",
        "@sonarjs/no-hook-setter-in-body": "error",
        "@sonarjs/no-useless-react-setstate": "error",
        "@sonarjs/no-uniq-key": "error",
        "@sonarjs/redundant-type-aliases": "error",
        "@sonarjs/prefer-regexp-exec": "error",
        "@sonarjs/no-internal-api-use": "error",
        "@sonarjs/prefer-read-only-props": "error",
        "@sonarjs/no-literal-call": "error",
        "@sonarjs/reduce-initial-value": "error",
        "@sonarjs/no-async-constructor": "error"
      },
      "index": 21
    },
    {
      "name": "@demonicattack/@tw/rules",
      "plugins": {
        "@tw": {}
      },
      "rules": {
        "@tw/classnames-order": "warn",
        "@tw/enforces-negative-arbitrary-values": "warn",
        "@tw/enforces-shorthand": "warn",
        "@tw/migration-from-tailwind-2": "warn",
        "@tw/no-arbitrary-value": "off",
        "@tw/no-custom-classname": "warn",
        "@tw/no-contradicting-classname": "error",
        "@tw/no-unnecessary-arbitrary-value": "warn"
      },
      "index": 22
    },
    {
      "name": "@demonicattack/@next/rules",
      "plugins": {
        "@next": {}
      },
      "rules": {
        "@next/google-font-display": "warn",
        "@next/google-font-preconnect": "warn",
        "@next/next-script-for-ga": "warn",
        "@next/no-async-client-component": "warn",
        "@next/no-before-interactive-script-outside-document": "warn",
        "@next/no-css-tags": "warn",
        "@next/no-head-element": "warn",
        "@next/no-html-link-for-pages": "warn",
        "@next/no-img-element": "warn",
        "@next/no-page-custom-font": "warn",
        "@next/no-styled-jsx-in-document": "warn",
        "@next/no-sync-scripts": "warn",
        "@next/no-title-in-document-head": "warn",
        "@next/no-typos": "warn",
        "@next/no-unwanted-polyfillio": "warn",
        "@next/inline-script-id": "error",
        "@next/no-assign-module-variable": "error",
        "@next/no-document-import-in-page": "error",
        "@next/no-duplicate-head": "error",
        "@next/no-head-import-in-document": "error",
        "@next/no-script-component-in-head": "error"
      },
      "index": 23
    },
    {
      "name": "@demonicattack/@ts/setup",
      "plugins": {
        "@ts": {}
      },
      "index": 24
    },
    {
      "files": [
        "**/*.?([m])ts?(x)"
      ],
      "name": "@demonicattack/@ts/parser",
      "languageOptions": {
        "parser": "typescript-eslint/parser",
        "parserOptions": {
          "extraFileExtensions": [],
          "sourceType": "module"
        }
      },
      "index": 25
    },
    {
      "files": [
        "**/*.?([m])ts?(x)"
      ],
      "ignores": [
        "**/*.md"
      ],
      "name": "@demonicattack/@ts/type-aware-parser",
      "languageOptions": {
        "parser": "typescript-eslint/parser",
        "parserOptions": {
          "extraFileExtensions": [],
          "sourceType": "module",
          "projectService": {
            "allowDefaultProject": [
              "./*.js"
            ],
            "defaultProject": "tsconfig.json"
          },
          "tsconfigRootDir": "/home/runner/work/shared-configs/shared-configs/configs/eslint"
        }
      },
      "index": 26
    },
    {
      "name": "@demonicattack/@ts/rules",
      "files": [
        "**/*.?([m])ts?(x)"
      ],
      "rules": {
        "constructor-super": "off",
        "getter-return": "off",
        "no-class-assign": "off",
        "no-const-assign": "off",
        "no-dupe-args": "off",
        "no-dupe-class-members": "off",
        "no-dupe-keys": "off",
        "no-func-assign": "off",
        "no-import-assign": "off",
        "no-new-symbol": "off",
        "no-new-native-nonconstructor": "off",
        "no-obj-calls": "off",
        "no-redeclare": "off",
        "no-setter-return": "off",
        "no-this-before-super": "off",
        "no-undef": "off",
        "no-unreachable": "off",
        "no-unsafe-negation": "off",
        "no-var": "error",
        "prefer-const": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "@ts/ban-ts-comment": "error",
        "no-array-constructor": "off",
        "@ts/no-array-constructor": "error",
        "@ts/no-duplicate-enum-values": "error",
        "@ts/no-dynamic-delete": "error",
        "@ts/no-empty-object-type": "error",
        "@ts/no-explicit-any": "error",
        "@ts/no-extra-non-null-assertion": "error",
        "@ts/no-extraneous-class": "error",
        "@ts/no-invalid-void-type": "error",
        "@ts/no-misused-new": "error",
        "@ts/no-namespace": "error",
        "@ts/no-non-null-asserted-nullish-coalescing": "error",
        "@ts/no-non-null-asserted-optional-chain": "error",
        "@ts/no-non-null-assertion": "error",
        "@ts/no-require-imports": "error",
        "@ts/no-this-alias": "error",
        "@ts/no-unnecessary-type-constraint": "error",
        "@ts/no-unsafe-declaration-merging": "error",
        "@ts/no-unsafe-function-type": "error",
        "no-unused-expressions": "off",
        "@ts/no-unused-expressions": "error",
        "no-unused-vars": "off",
        "@ts/no-unused-vars": [
          "error",
          {
            "args": "after-used",
            "argsIgnorePattern": "^_",
            "ignoreRestSiblings": false,
            "vars": "all",
            "varsIgnorePattern": "^_"
          }
        ],
        "no-useless-constructor": "off",
        "@ts/no-useless-constructor": "error",
        "@ts/no-wrapper-object-types": "error",
        "@ts/prefer-as-const": "error",
        "@ts/prefer-literal-enum-member": "error",
        "@ts/prefer-namespace-keyword": "error",
        "@ts/triple-slash-reference": "error",
        "@ts/unified-signatures": "error",
        "@ts/consistent-type-definitions": [
          "error",
          "interface"
        ],
        "@ts/consistent-type-imports": [
          "error",
          {
            "disallowTypeAnnotations": false,
            "prefer": "type-imports"
          }
        ]
      },
      "index": 27
    },
    {
      "name": "@demonicattack/@ts/rules-type-aware",
      "files": [
        "**/*.?([m])ts?(x)"
      ],
      "ignores": [
        "**/*.md"
      ],
      "rules": {
        "@ts/adjacent-overload-signatures": "error",
        "@ts/array-type": "error",
        "@ts/await-thenable": "error",
        "@ts/ban-ts-comment": "error",
        "@ts/ban-tslint-comment": "error",
        "@ts/class-literal-property-style": "error",
        "@ts/consistent-generic-constructors": "error",
        "@ts/consistent-indexed-object-style": "error",
        "@ts/consistent-type-assertions": "error",
        "@ts/consistent-type-definitions": "error",
        "@ts/dot-notation": [
          "error",
          {
            "allowKeywords": true
          }
        ],
        "@ts/no-array-constructor": "error",
        "@ts/no-array-delete": "error",
        "@ts/no-base-to-string": "error",
        "@ts/no-confusing-non-null-assertion": "error",
        "@ts/no-confusing-void-expression": "error",
        "@ts/no-deprecated": "error",
        "@ts/no-duplicate-enum-values": "error",
        "@ts/no-duplicate-type-constituents": "error",
        "@ts/no-dynamic-delete": "error",
        "@ts/no-empty-function": "error",
        "@ts/no-empty-object-type": "error",
        "@ts/no-explicit-any": "error",
        "@ts/no-extra-non-null-assertion": "error",
        "@ts/no-extraneous-class": "error",
        "@ts/no-floating-promises": "error",
        "@ts/no-for-in-array": "error",
        "@ts/no-implied-eval": "error",
        "@ts/no-inferrable-types": "error",
        "@ts/no-invalid-void-type": "error",
        "@ts/no-meaningless-void-operator": "error",
        "@ts/no-misused-new": "error",
        "@ts/no-misused-promises": "error",
        "@ts/no-mixed-enums": "error",
        "@ts/no-namespace": "error",
        "@ts/no-non-null-asserted-nullish-coalescing": "error",
        "@ts/no-non-null-asserted-optional-chain": "error",
        "@ts/no-non-null-assertion": "error",
        "@ts/no-redundant-type-constituents": "error",
        "@ts/no-require-imports": "error",
        "@ts/no-this-alias": "error",
        "@ts/no-unnecessary-boolean-literal-compare": "error",
        "@ts/no-unnecessary-condition": "error",
        "@ts/no-unnecessary-template-expression": "error",
        "@ts/no-unnecessary-type-arguments": "error",
        "@ts/no-unnecessary-type-assertion": "error",
        "@ts/no-unnecessary-type-constraint": "error",
        "@ts/no-unnecessary-type-parameters": "error",
        "@ts/no-unsafe-argument": "error",
        "@ts/no-unsafe-assignment": "error",
        "@ts/no-unsafe-call": "error",
        "@ts/no-unsafe-declaration-merging": "error",
        "@ts/no-unsafe-enum-comparison": "error",
        "@ts/no-unsafe-function-type": "error",
        "@ts/no-unsafe-member-access": "error",
        "@ts/no-unsafe-return": "error",
        "@ts/no-unsafe-unary-minus": "error",
        "@ts/no-unused-expressions": "error",
        "@ts/no-unused-vars": "error",
        "@ts/no-useless-constructor": "error",
        "@ts/no-wrapper-object-types": "error",
        "@ts/non-nullable-type-assertion-style": "error",
        "@ts/only-throw-error": "error",
        "@ts/prefer-as-const": "error",
        "@ts/prefer-find": "error",
        "@ts/prefer-for-of": "error",
        "@ts/prefer-function-type": "error",
        "@ts/prefer-includes": "error",
        "@ts/prefer-literal-enum-member": "error",
        "@ts/prefer-namespace-keyword": "error",
        "@ts/prefer-nullish-coalescing": "error",
        "@ts/prefer-optional-chain": "error",
        "@ts/prefer-promise-reject-errors": "error",
        "@ts/prefer-reduce-type-parameter": "error",
        "@ts/prefer-regexp-exec": "error",
        "@ts/prefer-return-this-type": "error",
        "@ts/prefer-string-starts-ends-with": "error",
        "@ts/promise-function-async": "error",
        "@ts/require-await": "error",
        "@ts/restrict-plus-operands": "error",
        "@ts/restrict-template-expressions": "error",
        "@ts/return-await": [
          "error",
          "error-handling-correctness-only"
        ],
        "@ts/strict-boolean-expressions": [
          "error",
          {
            "allowNullableBoolean": true,
            "allowNullableObject": true
          }
        ],
        "@ts/switch-exhaustiveness-check": "error",
        "@ts/unbound-method": "error",
        "@ts/unified-signatures": "error",
        "@ts/use-unknown-in-catch-callback-variable": "error"
      },
      "index": 28
    },
    {
      "name": "@demonicattack/@react/setup",
      "plugins": {
        "@eslint-react": {},
        "@jsx-a11y": {},
        "@react": {},
        "@react-dom": {},
        "@react-hooks": {},
        "@react-hooks-extra": {},
        "@react-naming-convention": {},
        "@react-refresh": {},
        "@react-web-api": {},
        "@react-x": {}
      },
      "index": 29
    },
    {
      "name": "@demonicattack/@react/rules",
      "files": [
        "**/*.?([cm])js?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "languageOptions": {
        "parser": "typescript-eslint/parser",
        "parserOptions": {
          "ecmaFeatures": {
            "jsx": true
          },
          "project": [
            "tsconfig.json"
          ]
        },
        "sourceType": "module"
      },
      "rules": {
        "@jsx-a11y/alt-text": [
          "error",
          {
            "elements": [
              "img",
              "object",
              "area",
              "input[type=\"image\"]"
            ],
            "img": [],
            "object": [],
            "area": [],
            "input[type=\"image\"]": []
          }
        ],
        "@jsx-a11y/anchor-ambiguous-text": "off",
        "@jsx-a11y/anchor-has-content": [
          "error",
          {
            "components": []
          }
        ],
        "@jsx-a11y/anchor-is-valid": [
          "error",
          {
            "components": [
              "Link"
            ],
            "specialLink": [
              "to"
            ],
            "aspects": [
              "noHref",
              "invalidHref",
              "preferButton"
            ]
          }
        ],
        "@jsx-a11y/aria-activedescendant-has-tabindex": "error",
        "@jsx-a11y/aria-props": "error",
        "@jsx-a11y/aria-proptypes": "error",
        "@jsx-a11y/aria-role": [
          "error",
          {
            "ignoreNonDOM": false
          }
        ],
        "@jsx-a11y/aria-unsupported-elements": "error",
        "@jsx-a11y/autocomplete-valid": [
          "off",
          {
            "inputComponents": []
          }
        ],
        "@jsx-a11y/click-events-have-key-events": "error",
        "@jsx-a11y/control-has-associated-label": [
          "error",
          {
            "labelAttributes": [
              "label"
            ],
            "controlComponents": [],
            "ignoreElements": [
              "audio",
              "canvas",
              "embed",
              "input",
              "textarea",
              "tr",
              "video"
            ],
            "ignoreRoles": [
              "grid",
              "listbox",
              "menu",
              "menubar",
              "radiogroup",
              "row",
              "tablist",
              "toolbar",
              "tree",
              "treegrid"
            ],
            "depth": 5
          }
        ],
        "@jsx-a11y/heading-has-content": [
          "error",
          {
            "components": [
              ""
            ]
          }
        ],
        "@jsx-a11y/html-has-lang": "error",
        "@jsx-a11y/iframe-has-title": "error",
        "@jsx-a11y/img-redundant-alt": "error",
        "@jsx-a11y/interactive-supports-focus": "error",
        "@jsx-a11y/label-has-associated-control": [
          "error",
          {
            "labelComponents": [],
            "labelAttributes": [],
            "controlComponents": [],
            "assert": "both",
            "depth": 25
          }
        ],
        "@jsx-a11y/label-has-for": [
          "off",
          {
            "components": [],
            "required": {
              "every": [
                "nesting",
                "id"
              ]
            },
            "allowChildren": false
          }
        ],
        "@jsx-a11y/media-has-caption": [
          "error",
          {
            "audio": [],
            "video": [],
            "track": []
          }
        ],
        "@jsx-a11y/mouse-events-have-key-events": "error",
        "@jsx-a11y/no-access-key": "error",
        "@jsx-a11y/no-autofocus": [
          "error",
          {
            "ignoreNonDOM": true
          }
        ],
        "@jsx-a11y/no-distracting-elements": [
          "error",
          {
            "elements": [
              "marquee",
              "blink"
            ]
          }
        ],
        "@jsx-a11y/no-interactive-element-to-noninteractive-role": [
          "error",
          {
            "tr": [
              "none",
              "presentation"
            ]
          }
        ],
        "@jsx-a11y/no-noninteractive-element-interactions": [
          "error",
          {
            "handlers": [
              "onClick",
              "onMouseDown",
              "onMouseUp",
              "onKeyPress",
              "onKeyDown",
              "onKeyUp"
            ]
          }
        ],
        "@jsx-a11y/no-noninteractive-element-to-interactive-role": [
          "error",
          {
            "ul": [
              "listbox",
              "menu",
              "menubar",
              "radiogroup",
              "tablist",
              "tree",
              "treegrid"
            ],
            "ol": [
              "listbox",
              "menu",
              "menubar",
              "radiogroup",
              "tablist",
              "tree",
              "treegrid"
            ],
            "li": [
              "menuitem",
              "option",
              "row",
              "tab",
              "treeitem"
            ],
            "table": [
              "grid"
            ],
            "td": [
              "gridcell"
            ]
          }
        ],
        "@jsx-a11y/no-noninteractive-tabindex": [
          "error",
          {
            "tags": [],
            "roles": [
              "tabpanel"
            ]
          }
        ],
        "@jsx-a11y/no-redundant-roles": "error",
        "@jsx-a11y/no-static-element-interactions": [
          "error",
          {
            "handlers": [
              "onClick",
              "onMouseDown",
              "onMouseUp",
              "onKeyPress",
              "onKeyDown",
              "onKeyUp"
            ]
          }
        ],
        "@jsx-a11y/role-has-required-aria-props": "error",
        "@jsx-a11y/role-supports-aria-props": "error",
        "@jsx-a11y/scope": "error",
        "@jsx-a11y/tabindex-no-positive": "error",
        "@jsx-a11y/accessible-emoji": "off",
        "@jsx-a11y/lang": "error",
        "@jsx-a11y/no-onchange": "off",
        "no-underscore-dangle": [
          "error",
          {
            "allow": [
              "__REDUX_DEVTOOLS_EXTENSION_COMPOSE__"
            ],
            "allowAfterThis": false,
            "allowAfterSuper": false,
            "enforceInMethodNames": true
          }
        ],
        "jsx-quotes": [
          "error",
          "prefer-double"
        ],
        "class-methods-use-this": [
          "error",
          {
            "exceptMethods": [
              "render",
              "getInitialState",
              "getDefaultProps",
              "getChildContext",
              "componentWillMount",
              "UNSAFE_componentWillMount",
              "componentDidMount",
              "componentWillReceiveProps",
              "UNSAFE_componentWillReceiveProps",
              "shouldComponentUpdate",
              "componentWillUpdate",
              "UNSAFE_componentWillUpdate",
              "componentDidUpdate",
              "componentWillUnmount",
              "componentDidCatch",
              "getSnapshotBeforeUpdate"
            ]
          }
        ],
        "@react/display-name": "error",
        "@react/forbid-prop-types": [
          "error",
          {
            "forbid": [
              "any",
              "array",
              "object"
            ],
            "checkContextTypes": true,
            "checkChildContextTypes": true
          }
        ],
        "@react/forbid-dom-props": [
          "off",
          {
            "forbid": []
          }
        ],
        "@react/jsx-boolean-value": [
          "error",
          "never",
          {
            "always": []
          }
        ],
        "@react/jsx-closing-bracket-location": [
          "error",
          "line-aligned"
        ],
        "@react/jsx-closing-tag-location": "error",
        "@react/jsx-curly-spacing": [
          "error",
          "never",
          {
            "allowMultiline": true
          }
        ],
        "@react/jsx-handler-names": [
          "off",
          {
            "eventHandlerPrefix": "handle",
            "eventHandlerPropPrefix": "on"
          }
        ],
        "@react/jsx-indent-props": [
          "error",
          2
        ],
        "@react/jsx-key": "error",
        "@react/jsx-max-props-per-line": [
          "error",
          {
            "maximum": 1,
            "when": "multiline"
          }
        ],
        "@react/jsx-no-bind": [
          "error",
          {
            "ignoreRefs": true,
            "allowArrowFunctions": true,
            "allowFunctions": false,
            "allowBind": false,
            "ignoreDOMComponents": true
          }
        ],
        "@react/jsx-no-duplicate-props": "error",
        "@react/jsx-no-literals": [
          "off",
          {
            "noStrings": true
          }
        ],
        "@react/jsx-no-undef": "error",
        "@react/jsx-pascal-case": [
          "error",
          {
            "allowAllCaps": true,
            "ignore": []
          }
        ],
        "@react/sort-prop-types": [
          "off",
          {
            "ignoreCase": true,
            "callbacksLast": false,
            "requiredFirst": false,
            "sortShapeProp": true
          }
        ],
        "@react/jsx-sort-prop-types": "off",
        "@react/jsx-sort-props": [
          "off",
          {
            "ignoreCase": true,
            "callbacksLast": false,
            "shorthandFirst": false,
            "shorthandLast": false,
            "noSortAlphabetically": false,
            "reservedFirst": true
          }
        ],
        "@react/jsx-sort-default-props": [
          "off",
          {
            "ignoreCase": true
          }
        ],
        "@react/jsx-uses-react": "error",
        "@react/jsx-uses-vars": "error",
        "@react/no-danger": "warn",
        "@react/no-deprecated": "error",
        "@react/no-did-mount-set-state": "off",
        "@react/no-did-update-set-state": "error",
        "@react/no-will-update-set-state": "error",
        "@react/no-direct-mutation-state": "off",
        "@react/no-is-mounted": "error",
        "@react/no-multi-comp": "off",
        "@react/no-set-state": "off",
        "@react/no-string-refs": "error",
        "@react/no-unknown-property": "error",
        "@react/prefer-es6-class": [
          "error",
          "always"
        ],
        "@react/prefer-stateless-function": [
          "error",
          {
            "ignorePureComponents": true
          }
        ],
        "@react/prop-types": "error",
        "@react/react-in-jsx-scope": "error",
        "@react/require-render-return": "error",
        "@react/self-closing-comp": "error",
        "@react/sort-comp": [
          "error",
          {
            "order": [
              "static-variables",
              "static-methods",
              "instance-variables",
              "lifecycle",
              "/^handle.+$/",
              "/^on.+$/",
              "getters",
              "setters",
              "/^(get|set)(?!(InitialState$|DefaultProps$|ChildContext$)).+$/",
              "instance-methods",
              "everything-else",
              "rendering"
            ],
            "groups": {
              "lifecycle": [
                "displayName",
                "propTypes",
                "contextTypes",
                "childContextTypes",
                "mixins",
                "statics",
                "defaultProps",
                "constructor",
                "getDefaultProps",
                "getInitialState",
                "state",
                "getChildContext",
                "getDerivedStateFromProps",
                "componentWillMount",
                "UNSAFE_componentWillMount",
                "componentDidMount",
                "componentWillReceiveProps",
                "UNSAFE_componentWillReceiveProps",
                "shouldComponentUpdate",
                "componentWillUpdate",
                "UNSAFE_componentWillUpdate",
                "getSnapshotBeforeUpdate",
                "componentDidUpdate",
                "componentDidCatch",
                "componentWillUnmount"
              ],
              "rendering": [
                "/^render.+$/",
                "render"
              ]
            }
          }
        ],
        "@react/jsx-wrap-multilines": [
          "error",
          {
            "declaration": "parens-new-line",
            "assignment": "parens-new-line",
            "return": "parens-new-line",
            "arrow": "parens-new-line",
            "condition": "parens-new-line",
            "logical": "parens-new-line",
            "prop": "parens-new-line"
          }
        ],
        "@react/jsx-first-prop-new-line": [
          "error",
          "multiline-multiprop"
        ],
        "@react/jsx-equals-spacing": [
          "error",
          "never"
        ],
        "@react/jsx-indent": [
          "error",
          2
        ],
        "@react/jsx-no-target-blank": "error",
        "@react/jsx-filename-extension": [
          "error",
          {
            "extensions": [
              ".jsx"
            ]
          }
        ],
        "@react/jsx-no-comment-textnodes": "error",
        "@react/no-render-return-value": "error",
        "@react/require-optimization": [
          "off",
          {
            "allowDecorators": []
          }
        ],
        "@react/no-find-dom-node": "error",
        "@react/forbid-component-props": [
          "off",
          {
            "forbid": []
          }
        ],
        "@react/forbid-elements": [
          "off",
          {
            "forbid": []
          }
        ],
        "@react/no-danger-with-children": "error",
        "@react/no-unused-prop-types": [
          "error",
          {
            "customValidators": [],
            "skipShapeProps": true
          }
        ],
        "@react/style-prop-object": "error",
        "@react/no-unescaped-entities": "error",
        "@react/no-children-prop": "error",
        "@react/jsx-tag-spacing": [
          "error",
          {
            "closingSlash": "never",
            "beforeSelfClosing": "always",
            "afterOpening": "never",
            "beforeClosing": "never"
          }
        ],
        "@react/jsx-space-before-closing": [
          "off",
          "always"
        ],
        "@react/no-array-index-key": "error",
        "@react/require-default-props": [
          "error",
          {
            "forbidDefaultForRequired": true
          }
        ],
        "@react/forbid-foreign-prop-types": [
          "warn",
          {
            "allowInPropTypes": true
          }
        ],
        "@react/void-dom-elements-no-children": "error",
        "@react/default-props-match-prop-types": [
          "error",
          {
            "allowRequiredDefaults": false
          }
        ],
        "@react/no-redundant-should-component-update": "error",
        "@react/no-unused-state": "error",
        "@react/boolean-prop-naming": [
          "off",
          {
            "propTypeNames": [
              "bool",
              "mutuallyExclusiveTrueProps"
            ],
            "rule": "^(is|has)[A-Z]([A-Za-z0-9]?)+",
            "message": ""
          }
        ],
        "@react/no-typos": "error",
        "@react/jsx-curly-brace-presence": [
          "error",
          {
            "props": "never",
            "children": "never"
          }
        ],
        "@react/jsx-one-expression-per-line": [
          "error",
          {
            "allow": "single-child"
          }
        ],
        "@react/destructuring-assignment": [
          "error",
          "always"
        ],
        "@react/no-access-state-in-setstate": "error",
        "@react/button-has-type": "error",
        "@react/jsx-child-element-spacing": "off",
        "@react/no-this-in-sfc": "error",
        "@react/jsx-max-depth": "off",
        "@react/jsx-props-no-multi-spaces": "error",
        "@react/no-unsafe": "off",
        "@react/jsx-fragments": [
          "error",
          "syntax"
        ],
        "@react/jsx-curly-newline": [
          "error",
          {
            "multiline": "consistent",
            "singleline": "consistent"
          }
        ],
        "@react/state-in-constructor": [
          "error",
          "always"
        ],
        "@react/static-property-placement": [
          "error",
          "property assignment"
        ],
        "@react/jsx-props-no-spreading": [
          "error",
          {
            "html": "enforce",
            "custom": "enforce",
            "explicitSpread": "ignore",
            "exceptions": []
          }
        ],
        "@react/prefer-read-only-props": "off",
        "@react/jsx-no-script-url": [
          "error",
          [
            {
              "name": "Link",
              "props": [
                "to"
              ]
            }
          ]
        ],
        "@react/jsx-no-useless-fragment": "error",
        "@react/no-adjacent-inline-elements": "off",
        "@react/function-component-definition": [
          "error",
          {
            "namedComponents": "arrow-function",
            "unnamedComponents": "arrow-function"
          }
        ],
        "@react/jsx-newline": "off",
        "@react/jsx-no-constructed-context-values": "error",
        "@react/no-unstable-nested-components": "error",
        "@react/no-namespace": "error",
        "@react/prefer-exact-props": "error",
        "@react/no-arrow-function-lifecycle": "error",
        "@react/no-invalid-html-attribute": "error",
        "@react/no-unused-class-component-methods": "error",
        "@react-hooks/rules-of-hooks": "error",
        "@react-hooks/exhaustive-deps": "error",
        "@eslint-react/no-useless-fragment": "warn",
        "@eslint-react/prefer-destructuring-assignment": "warn",
        "@eslint-react/prefer-shorthand-boolean": "warn",
        "@eslint-react/prefer-shorthand-fragment": "warn",
        "@react-dom/no-children-in-void-dom-elements": "warn",
        "@react-dom/no-dangerously-set-innerhtml": "warn",
        "@react-dom/no-dangerously-set-innerhtml-with-children": "error",
        "@react-dom/no-find-dom-node": "error",
        "@react-dom/no-missing-button-type": "warn",
        "@react-dom/no-missing-iframe-sandbox": "warn",
        "@react-dom/no-namespace": "error",
        "@react-dom/no-render-return-value": "error",
        "@react-dom/no-script-url": "warn",
        "@react-dom/no-unsafe-iframe-sandbox": "warn",
        "@react-dom/no-unsafe-target-blank": "warn",
        "@react-hooks-extra/ensure-custom-hooks-using-other-hooks": "warn",
        "@react-hooks-extra/no-direct-set-state-in-use-effect": "warn",
        "@react-hooks-extra/no-redundant-custom-hook": "warn",
        "@react-hooks-extra/prefer-use-state-lazy-initialization": "warn",
        "@react-naming-convention/filename-extension": [
          "warn",
          "as-needed"
        ],
        "@react-naming-convention/use-state": "warn",
        "@react-refresh/only-export-components": [
          "warn",
          {
            "allowConstantExport": true,
            "allowExportNames": []
          }
        ],
        "@react-web-api/no-leaked-event-listener": "error",
        "@react-web-api/no-leaked-interval": "error",
        "@react-web-api/no-leaked-resize-observer": "error",
        "@react-web-api/no-leaked-timeout": "error",
        "@react-x/ensure-forward-ref-using-ref": "warn",
        "@react-x/no-access-state-in-setstate": "error",
        "@react-x/no-array-index-key": "warn",
        "@react-x/no-children-count": "warn",
        "@react-x/no-children-for-each": "warn",
        "@react-x/no-children-map": "warn",
        "@react-x/no-children-only": "warn",
        "@react-x/no-children-to-array": "warn",
        "@react-x/no-clone-element": "warn",
        "@react-x/no-comment-textnodes": "warn",
        "@react-x/no-component-will-mount": "error",
        "@react-x/no-component-will-receive-props": "error",
        "@react-x/no-component-will-update": "error",
        "@react-x/no-create-ref": "error",
        "@react-x/no-default-props": "error",
        "@react-x/no-direct-mutation-state": "error",
        "@react-x/no-duplicate-key": "error",
        "@react-x/no-implicit-key": "warn",
        "@react-x/no-missing-key": "error",
        "@react-x/no-nested-components": "warn",
        "@react-x/no-prop-types": "error",
        "@react-x/no-redundant-should-component-update": "error",
        "@react-x/no-set-state-in-component-did-mount": "warn",
        "@react-x/no-set-state-in-component-did-update": "warn",
        "@react-x/no-set-state-in-component-will-update": "warn",
        "@react-x/no-string-refs": "error",
        "@react-x/no-unsafe-component-will-mount": "warn",
        "@react-x/no-unsafe-component-will-receive-props": "warn",
        "@react-x/no-unsafe-component-will-update": "warn",
        "@react-x/no-unstable-context-value": "error",
        "@react-x/no-unstable-default-props": "error",
        "@react-x/no-unused-class-component-members": "warn",
        "@react-x/no-unused-state": "warn",
        "@eslint-react/no-leaked-conditional-rendering": "warn"
      },
      "settings": {
        "react": {
          "version": "detect"
        }
      },
      "index": 30
    },
    {
      "name": "@demonicattack/@prettier/rules",
      "plugins": {
        "@prettier": {}
      },
      "rules": {
        "@prettier/prettier": [
          "error",
          {
            "arrowParens": "avoid",
            "bracketSameLine": false,
            "bracketSpacing": true,
            "endOfLine": "lf",
            "experimentalTernaries": true,
            "jsxSingleQuote": true,
            "printWidth": 120,
            "proseWrap": "always",
            "quoteProps": "as-needed",
            "semi": true,
            "singleQuote": true,
            "tabWidth": 4,
            "trailingComma": "all",
            "useTabs": false
          },
          {
            "usePrettierrc": false
          }
        ],
        "curly": 0,
        "no-unexpected-multiline": 0,
        "@ts/lines-around-comment": 0,
        "@ts/quotes": 0,
        "@unicorn/template-indent": 0,
        "@ts/block-spacing": "off",
        "@ts/brace-style": "off",
        "@ts/comma-dangle": "off",
        "@ts/comma-spacing": "off",
        "@ts/func-call-spacing": "off",
        "@ts/indent": "off",
        "@ts/key-spacing": "off",
        "@ts/keyword-spacing": "off",
        "@ts/member-delimiter-style": "off",
        "@ts/no-extra-parens": "off",
        "@ts/no-extra-semi": "off",
        "@ts/object-curly-spacing": "off",
        "@ts/semi": "off",
        "@ts/space-before-blocks": "off",
        "@ts/space-before-function-paren": "off",
        "@ts/space-infix-ops": "off",
        "@ts/type-annotation-spacing": "off",
        "@react/jsx-child-element-spacing": "off",
        "@react/jsx-closing-bracket-location": "off",
        "@react/jsx-closing-tag-location": "off",
        "@react/jsx-curly-newline": "off",
        "@react/jsx-curly-spacing": "off",
        "@react/jsx-equals-spacing": "off",
        "@react/jsx-first-prop-new-line": "off",
        "@react/jsx-indent": "off",
        "@react/jsx-indent-props": "off",
        "@react/jsx-max-props-per-line": "off",
        "@react/jsx-newline": "off",
        "@react/jsx-one-expression-per-line": "off",
        "@react/jsx-props-no-multi-spaces": "off",
        "@react/jsx-tag-spacing": "off",
        "@react/jsx-wrap-multilines": "off",
        "@unicorn/empty-brace-spaces": "off",
        "@unicorn/no-nested-ternary": "off",
        "@unicorn/number-literal-case": "off",
        "space-unary-word-ops": "off",
        "generator-star": "off",
        "no-comma-dangle": "off",
        "no-reserved-keys": "off",
        "no-space-before-semi": "off",
        "no-wrap-func": "off",
        "space-after-function-name": "off",
        "space-before-function-parentheses": "off",
        "space-in-brackets": "off",
        "no-arrow-condition": "off",
        "space-after-keywords": "off",
        "space-before-keywords": "off",
        "space-return-throw-case": "off",
        "no-spaced-func": "off",
        "indent-legacy": "off",
        "array-bracket-newline": "off",
        "array-bracket-spacing": "off",
        "array-element-newline": "off",
        "arrow-parens": "off",
        "arrow-spacing": "off",
        "block-spacing": "off",
        "brace-style": "off",
        "comma-dangle": "off",
        "comma-spacing": "off",
        "comma-style": "off",
        "computed-property-spacing": "off",
        "dot-location": "off",
        "eol-last": "off",
        "func-call-spacing": "off",
        "function-call-argument-newline": "off",
        "function-paren-newline": "off",
        "generator-star-spacing": "off",
        "implicit-arrow-linebreak": "off",
        "indent": "off",
        "jsx-quotes": "off",
        "key-spacing": "off",
        "keyword-spacing": "off",
        "linebreak-style": "off",
        "lines-around-comment": 0,
        "max-len": 0,
        "max-statements-per-line": "off",
        "multiline-ternary": "off",
        "new-parens": "off",
        "newline-per-chained-call": "off",
        "no-confusing-arrow": 0,
        "no-extra-parens": "off",
        "no-extra-semi": "off",
        "no-floating-decimal": "off",
        "no-mixed-operators": 0,
        "no-mixed-spaces-and-tabs": "off",
        "no-multi-spaces": "off",
        "no-multiple-empty-lines": "off",
        "no-tabs": 0,
        "no-trailing-spaces": "off",
        "no-whitespace-before-property": "off",
        "nonblock-statement-body-position": "off",
        "object-curly-newline": "off",
        "object-curly-spacing": "off",
        "object-property-newline": "off",
        "one-var-declaration-per-line": "off",
        "operator-linebreak": "off",
        "padded-blocks": "off",
        "quote-props": "off",
        "quotes": 0,
        "rest-spread-spacing": "off",
        "semi": "off",
        "semi-spacing": "off",
        "semi-style": "off",
        "space-before-blocks": "off",
        "space-before-function-paren": "off",
        "space-in-parens": "off",
        "space-infix-ops": "off",
        "space-unary-ops": "off",
        "switch-colon-spacing": "off",
        "template-curly-spacing": "off",
        "template-tag-spacing": "off",
        "wrap-iife": "off",
        "wrap-regex": "off",
        "yield-star-spacing": "off",
        "@react/jsx-space-before-closing": "off"
      },
      "index": 31
    },
    {
      "name": "@demonicattack/@disables/allow-default-export",
      "files": [
        "**/*config*.?([cm])[jt]s?(x)",
        "**/{views,pages,routes,middleware,plugins,api,modules}/**/*.?([cm])[jt]s?(x)",
        "**/{index,vite,esbuild,rollup,rolldown,webpack,rspack}.?([cm])[jt]s?(x)",
        "**/*.d.ts",
        "**/*.md/**",
        "**/.prettierrc*"
      ],
      "rules": {
        "@arca/no-default-export": "off",
        "@import/no-default-export": "off"
      },
      "index": 32
    },
    {
      "name": "@demonicattack/@disables/js",
      "files": [
        "**/*.?([cm])js?(x)"
      ],
      "rules": {
        "@ts/explicit-function-return-type": "off"
      },
      "index": 33
    },
    {
      "name": "@demonicattack/@disables/config-files",
      "files": [
        "**/*.config.?([cm])js?(x)",
        "**/*.config.?([m])ts?(x)"
      ],
      "rules": {
        "@arca/no-default-export": "off",
        "@import/no-default-export": "off",
        "@import/no-extraneous-dependencies": "off",
        "@ts/explicit-function-return-type": "off",
        "no-console": "off"
      },
      "index": 34
    },
    {
      "name": "@demonicattack/@disables/nextjs",
      "files": [
        "src/app/**/{page,layout,not-found,error,loading}.tsx",
        "src/app/{sitemap,robots}.ts",
        "app/**/{page,layout,not-found,error,loading}.tsx",
        "app/{sitemap,robots}.ts",
        "middleware.ts"
      ],
      "rules": {
        "@arca/jsx-import-react": "off",
        "@arca/no-default-export": "off",
        "@react/react-in-jsx-scope": "off"
      },
      "index": 35
    }
  ],
  "rules": {
    "accessor-pairs": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "enforceForClassMembers": true,
          "getWithoutSet": false,
          "setWithoutGet": true
        }
      ],
      "docs": {
        "description": "Enforce getter and setter pairs in objects and classes",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/accessor-pairs"
      },
      "name": "accessor-pairs",
      "plugin": "eslint"
    },
    "array-bracket-newline": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce linebreaks after opening and before closing array brackets",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/array-bracket-newline"
      },
      "fixable": "whitespace",
      "name": "array-bracket-newline",
      "plugin": "eslint"
    },
    "array-bracket-spacing": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing inside array brackets",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/array-bracket-spacing"
      },
      "fixable": "whitespace",
      "name": "array-bracket-spacing",
      "plugin": "eslint"
    },
    "array-callback-return": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowImplicit": false,
          "checkForEach": false,
          "allowVoid": false
        }
      ],
      "docs": {
        "description": "Enforce `return` statements in callbacks of array methods",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/array-callback-return"
      },
      "hasSuggestions": true,
      "name": "array-callback-return",
      "plugin": "eslint"
    },
    "array-element-newline": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce line breaks after each array element",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/array-element-newline"
      },
      "fixable": "whitespace",
      "name": "array-element-newline",
      "plugin": "eslint"
    },
    "arrow-body-style": {
      "type": "suggestion",
      "defaultOptions": [
        "as-needed"
      ],
      "docs": {
        "description": "Require braces around arrow function bodies",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/arrow-body-style"
      },
      "fixable": "code",
      "name": "arrow-body-style",
      "plugin": "eslint"
    },
    "arrow-parens": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Require parentheses around arrow function arguments",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/arrow-parens"
      },
      "fixable": "code",
      "name": "arrow-parens",
      "plugin": "eslint"
    },
    "arrow-spacing": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before and after the arrow in arrow functions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/arrow-spacing"
      },
      "fixable": "whitespace",
      "name": "arrow-spacing",
      "plugin": "eslint"
    },
    "block-scoped-var": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of variables within the scope they are defined",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/block-scoped-var"
      },
      "name": "block-scoped-var",
      "plugin": "eslint"
    },
    "block-spacing": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Disallow or enforce spaces inside of blocks after opening block and before closing block",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/block-spacing"
      },
      "fixable": "whitespace",
      "name": "block-spacing",
      "plugin": "eslint"
    },
    "brace-style": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent brace style for blocks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/brace-style"
      },
      "fixable": "whitespace",
      "name": "brace-style",
      "plugin": "eslint"
    },
    "callback-return": {
      "deprecated": true,
      "replacedBy": [],
      "type": "suggestion",
      "docs": {
        "description": "Require `return` statements after callbacks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/callback-return"
      },
      "name": "callback-return",
      "plugin": "eslint"
    },
    "camelcase": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allow": [],
          "ignoreDestructuring": false,
          "ignoreGlobals": false,
          "ignoreImports": false,
          "properties": "always"
        }
      ],
      "docs": {
        "description": "Enforce camelcase naming convention",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/camelcase"
      },
      "name": "camelcase",
      "plugin": "eslint"
    },
    "capitalized-comments": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce or disallow capitalization of the first letter of a comment",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/capitalized-comments"
      },
      "fixable": "code",
      "name": "capitalized-comments",
      "plugin": "eslint"
    },
    "class-methods-use-this": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "enforceForClassFields": true,
          "exceptMethods": []
        }
      ],
      "docs": {
        "description": "Enforce that class methods utilize `this`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/class-methods-use-this"
      },
      "name": "class-methods-use-this",
      "plugin": "eslint"
    },
    "comma-dangle": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Require or disallow trailing commas",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/comma-dangle"
      },
      "fixable": "code",
      "name": "comma-dangle",
      "plugin": "eslint"
    },
    "comma-spacing": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before and after commas",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/comma-spacing"
      },
      "fixable": "whitespace",
      "name": "comma-spacing",
      "plugin": "eslint"
    },
    "comma-style": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent comma style",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/comma-style"
      },
      "fixable": "code",
      "name": "comma-style",
      "plugin": "eslint"
    },
    "complexity": {
      "type": "suggestion",
      "defaultOptions": [
        20
      ],
      "docs": {
        "description": "Enforce a maximum cyclomatic complexity allowed in a program",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/complexity"
      },
      "name": "complexity",
      "plugin": "eslint"
    },
    "computed-property-spacing": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing inside computed property brackets",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/computed-property-spacing"
      },
      "fixable": "whitespace",
      "name": "computed-property-spacing",
      "plugin": "eslint"
    },
    "consistent-return": {
      "type": "suggestion",
      "docs": {
        "description": "Require `return` statements to either always or never specify values",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/consistent-return"
      },
      "defaultOptions": [
        {
          "treatUndefinedAsUnspecified": false
        }
      ],
      "name": "consistent-return",
      "plugin": "eslint"
    },
    "consistent-this": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent naming when capturing the current execution context",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/consistent-this"
      },
      "defaultOptions": [
        "that"
      ],
      "name": "consistent-this",
      "plugin": "eslint"
    },
    "constructor-super": {
      "type": "problem",
      "docs": {
        "description": "Require `super()` calls in constructors",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/constructor-super"
      },
      "name": "constructor-super",
      "plugin": "eslint"
    },
    "curly": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent brace style for all control statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/curly"
      },
      "defaultOptions": [
        "all"
      ],
      "fixable": "code",
      "name": "curly",
      "plugin": "eslint"
    },
    "default-case": {
      "type": "suggestion",
      "defaultOptions": [
        {}
      ],
      "docs": {
        "description": "Require `default` cases in `switch` statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/default-case"
      },
      "name": "default-case",
      "plugin": "eslint"
    },
    "default-case-last": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce `default` clauses in switch statements to be last",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/default-case-last"
      },
      "name": "default-case-last",
      "plugin": "eslint"
    },
    "default-param-last": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce default parameters to be last",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/default-param-last"
      },
      "name": "default-param-last",
      "plugin": "eslint"
    },
    "dot-location": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent newlines before and after dots",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/dot-location"
      },
      "fixable": "code",
      "name": "dot-location",
      "plugin": "eslint"
    },
    "dot-notation": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowKeywords": true,
          "allowPattern": ""
        }
      ],
      "docs": {
        "description": "Enforce dot notation whenever possible",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/dot-notation"
      },
      "fixable": "code",
      "name": "dot-notation",
      "plugin": "eslint"
    },
    "eol-last": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Require or disallow newline at the end of files",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/eol-last"
      },
      "fixable": "whitespace",
      "name": "eol-last",
      "plugin": "eslint"
    },
    "eqeqeq": {
      "type": "suggestion",
      "docs": {
        "description": "Require the use of `===` and `!==`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/eqeqeq"
      },
      "fixable": "code",
      "name": "eqeqeq",
      "plugin": "eslint"
    },
    "for-direction": {
      "type": "problem",
      "docs": {
        "description": "Enforce `for` loop update clause moving the counter in the right direction",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/for-direction"
      },
      "fixable": null,
      "name": "for-direction",
      "plugin": "eslint"
    },
    "func-call-spacing": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Require or disallow spacing between function identifiers and their invocations",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/func-call-spacing"
      },
      "fixable": "whitespace",
      "name": "func-call-spacing",
      "plugin": "eslint"
    },
    "func-name-matching": {
      "type": "suggestion",
      "docs": {
        "description": "Require function names to match the name of the variable or property to which they are assigned",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/func-name-matching"
      },
      "name": "func-name-matching",
      "plugin": "eslint"
    },
    "func-names": {
      "type": "suggestion",
      "defaultOptions": [
        "always",
        {}
      ],
      "docs": {
        "description": "Require or disallow named `function` expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/func-names"
      },
      "name": "func-names",
      "plugin": "eslint"
    },
    "func-style": {
      "type": "suggestion",
      "defaultOptions": [
        "expression",
        {
          "allowArrowFunctions": false,
          "overrides": {}
        }
      ],
      "docs": {
        "description": "Enforce the consistent use of either `function` declarations or expressions assigned to variables",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/func-style"
      },
      "name": "func-style",
      "plugin": "eslint"
    },
    "function-call-argument-newline": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce line breaks between arguments of a function call",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/function-call-argument-newline"
      },
      "fixable": "whitespace",
      "name": "function-call-argument-newline",
      "plugin": "eslint"
    },
    "function-paren-newline": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent line breaks inside function parentheses",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/function-paren-newline"
      },
      "fixable": "whitespace",
      "name": "function-paren-newline",
      "plugin": "eslint"
    },
    "generator-star-spacing": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing around `*` operators in generator functions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/generator-star-spacing"
      },
      "fixable": "whitespace",
      "name": "generator-star-spacing",
      "plugin": "eslint"
    },
    "getter-return": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowImplicit": false
        }
      ],
      "docs": {
        "description": "Enforce `return` statements in getters",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/getter-return"
      },
      "fixable": null,
      "name": "getter-return",
      "plugin": "eslint"
    },
    "global-require": {
      "deprecated": true,
      "replacedBy": [],
      "type": "suggestion",
      "docs": {
        "description": "Require `require()` calls to be placed at top-level module scope",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/global-require"
      },
      "name": "global-require",
      "plugin": "eslint"
    },
    "grouped-accessor-pairs": {
      "type": "suggestion",
      "defaultOptions": [
        "anyOrder"
      ],
      "docs": {
        "description": "Require grouped accessor pairs in object literals and classes",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/grouped-accessor-pairs"
      },
      "name": "grouped-accessor-pairs",
      "plugin": "eslint"
    },
    "guard-for-in": {
      "type": "suggestion",
      "docs": {
        "description": "Require `for-in` loops to include an `if` statement",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/guard-for-in"
      },
      "name": "guard-for-in",
      "plugin": "eslint"
    },
    "handle-callback-err": {
      "deprecated": true,
      "replacedBy": [],
      "type": "suggestion",
      "docs": {
        "description": "Require error handling in callbacks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/handle-callback-err"
      },
      "name": "handle-callback-err",
      "plugin": "eslint"
    },
    "id-blacklist": {
      "deprecated": true,
      "replacedBy": [
        "id-denylist"
      ],
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified identifiers",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/id-blacklist"
      },
      "name": "id-blacklist",
      "plugin": "eslint"
    },
    "id-denylist": {
      "type": "suggestion",
      "defaultOptions": [],
      "docs": {
        "description": "Disallow specified identifiers",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/id-denylist"
      },
      "name": "id-denylist",
      "plugin": "eslint"
    },
    "id-length": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "exceptionPatterns": [],
          "exceptions": [],
          "min": 2,
          "properties": "always"
        }
      ],
      "docs": {
        "description": "Enforce minimum and maximum identifier lengths",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/id-length"
      },
      "name": "id-length",
      "plugin": "eslint"
    },
    "id-match": {
      "type": "suggestion",
      "defaultOptions": [
        "^.+$",
        {
          "classFields": false,
          "ignoreDestructuring": false,
          "onlyDeclarations": false,
          "properties": false
        }
      ],
      "docs": {
        "description": "Require identifiers to match a specified regular expression",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/id-match"
      },
      "name": "id-match",
      "plugin": "eslint"
    },
    "implicit-arrow-linebreak": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce the location of arrow function bodies",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/implicit-arrow-linebreak"
      },
      "fixable": "whitespace",
      "name": "implicit-arrow-linebreak",
      "plugin": "eslint"
    },
    "indent": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent indentation",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/indent"
      },
      "fixable": "whitespace",
      "name": "indent",
      "plugin": "eslint"
    },
    "indent-legacy": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent indentation",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/indent-legacy"
      },
      "deprecated": true,
      "replacedBy": [
        "indent"
      ],
      "fixable": "whitespace",
      "name": "indent-legacy",
      "plugin": "eslint"
    },
    "init-declarations": {
      "type": "suggestion",
      "docs": {
        "description": "Require or disallow initialization in variable declarations",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/init-declarations"
      },
      "name": "init-declarations",
      "plugin": "eslint"
    },
    "jsx-quotes": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce the consistent use of either double or single quotes in JSX attributes",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/jsx-quotes"
      },
      "fixable": "whitespace",
      "name": "jsx-quotes",
      "plugin": "eslint"
    },
    "key-spacing": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing between keys and values in object literal properties",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/key-spacing"
      },
      "fixable": "whitespace",
      "name": "key-spacing",
      "plugin": "eslint"
    },
    "keyword-spacing": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before and after keywords",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/keyword-spacing"
      },
      "fixable": "whitespace",
      "name": "keyword-spacing",
      "plugin": "eslint"
    },
    "line-comment-position": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce position of line comments",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/line-comment-position"
      },
      "name": "line-comment-position",
      "plugin": "eslint"
    },
    "linebreak-style": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent linebreak style",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/linebreak-style"
      },
      "fixable": "whitespace",
      "name": "linebreak-style",
      "plugin": "eslint"
    },
    "lines-around-comment": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Require empty lines around comments",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/lines-around-comment"
      },
      "fixable": "whitespace",
      "name": "lines-around-comment",
      "plugin": "eslint"
    },
    "lines-around-directive": {
      "type": "layout",
      "docs": {
        "description": "Require or disallow newlines around directives",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/lines-around-directive"
      },
      "fixable": "whitespace",
      "deprecated": true,
      "replacedBy": [
        "padding-line-between-statements"
      ],
      "name": "lines-around-directive",
      "plugin": "eslint"
    },
    "lines-between-class-members": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Require or disallow an empty line between class members",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/lines-between-class-members"
      },
      "fixable": "whitespace",
      "name": "lines-between-class-members",
      "plugin": "eslint"
    },
    "logical-assignment-operators": {
      "type": "suggestion",
      "docs": {
        "description": "Require or disallow logical assignment operator shorthand",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/logical-assignment-operators"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "logical-assignment-operators",
      "plugin": "eslint"
    },
    "max-classes-per-file": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum number of classes per file",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-classes-per-file"
      },
      "name": "max-classes-per-file",
      "plugin": "eslint"
    },
    "max-depth": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum depth that blocks can be nested",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-depth"
      },
      "name": "max-depth",
      "plugin": "eslint"
    },
    "max-len": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce a maximum line length",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-len"
      },
      "name": "max-len",
      "plugin": "eslint"
    },
    "max-lines": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum number of lines per file",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-lines"
      },
      "name": "max-lines",
      "plugin": "eslint"
    },
    "max-lines-per-function": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum number of lines of code in a function",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-lines-per-function"
      },
      "name": "max-lines-per-function",
      "plugin": "eslint"
    },
    "max-nested-callbacks": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum depth that callbacks can be nested",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-nested-callbacks"
      },
      "name": "max-nested-callbacks",
      "plugin": "eslint"
    },
    "max-params": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum number of parameters in function definitions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-params"
      },
      "name": "max-params",
      "plugin": "eslint"
    },
    "max-statements": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum number of statements allowed in function blocks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-statements"
      },
      "name": "max-statements",
      "plugin": "eslint"
    },
    "max-statements-per-line": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce a maximum number of statements allowed per line",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-statements-per-line"
      },
      "name": "max-statements-per-line",
      "plugin": "eslint"
    },
    "multiline-comment-style": {
      "deprecated": true,
      "replacedBy": [],
      "type": "suggestion",
      "docs": {
        "description": "Enforce a particular style for multiline comments",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/multiline-comment-style"
      },
      "fixable": "whitespace",
      "name": "multiline-comment-style",
      "plugin": "eslint"
    },
    "multiline-ternary": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce newlines between operands of ternary expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/multiline-ternary"
      },
      "fixable": "whitespace",
      "name": "multiline-ternary",
      "plugin": "eslint"
    },
    "new-cap": {
      "type": "suggestion",
      "docs": {
        "description": "Require constructor names to begin with a capital letter",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/new-cap"
      },
      "defaultOptions": [
        {
          "capIsNew": true,
          "capIsNewExceptions": [
            "Array",
            "Boolean",
            "Date",
            "Error",
            "Function",
            "Number",
            "Object",
            "RegExp",
            "String",
            "Symbol",
            "BigInt"
          ],
          "newIsCap": true,
          "newIsCapExceptions": [],
          "properties": true
        }
      ],
      "name": "new-cap",
      "plugin": "eslint"
    },
    "new-parens": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce or disallow parentheses when invoking a constructor with no arguments",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/new-parens"
      },
      "fixable": "code",
      "name": "new-parens",
      "plugin": "eslint"
    },
    "newline-after-var": {
      "type": "layout",
      "docs": {
        "description": "Require or disallow an empty line after variable declarations",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/newline-after-var"
      },
      "fixable": "whitespace",
      "deprecated": true,
      "replacedBy": [
        "padding-line-between-statements"
      ],
      "name": "newline-after-var",
      "plugin": "eslint"
    },
    "newline-before-return": {
      "type": "layout",
      "docs": {
        "description": "Require an empty line before `return` statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/newline-before-return"
      },
      "fixable": "whitespace",
      "deprecated": true,
      "replacedBy": [
        "padding-line-between-statements"
      ],
      "name": "newline-before-return",
      "plugin": "eslint"
    },
    "newline-per-chained-call": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Require a newline after each call in a method chain",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/newline-per-chained-call"
      },
      "fixable": "whitespace",
      "name": "newline-per-chained-call",
      "plugin": "eslint"
    },
    "no-alert": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `alert`, `confirm`, and `prompt`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-alert"
      },
      "name": "no-alert",
      "plugin": "eslint"
    },
    "no-array-constructor": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `Array` constructors",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-array-constructor"
      },
      "hasSuggestions": true,
      "name": "no-array-constructor",
      "plugin": "eslint"
    },
    "no-async-promise-executor": {
      "type": "problem",
      "docs": {
        "description": "Disallow using an async function as a Promise executor",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-async-promise-executor"
      },
      "fixable": null,
      "name": "no-async-promise-executor",
      "plugin": "eslint"
    },
    "no-await-in-loop": {
      "type": "problem",
      "docs": {
        "description": "Disallow `await` inside of loops",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-await-in-loop"
      },
      "name": "no-await-in-loop",
      "plugin": "eslint"
    },
    "no-bitwise": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allow": [],
          "int32Hint": false
        }
      ],
      "docs": {
        "description": "Disallow bitwise operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-bitwise"
      },
      "name": "no-bitwise",
      "plugin": "eslint"
    },
    "no-buffer-constructor": {
      "deprecated": true,
      "replacedBy": [],
      "type": "problem",
      "docs": {
        "description": "Disallow use of the `Buffer()` constructor",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-buffer-constructor"
      },
      "name": "no-buffer-constructor",
      "plugin": "eslint"
    },
    "no-caller": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `arguments.caller` or `arguments.callee`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-caller"
      },
      "name": "no-caller",
      "plugin": "eslint"
    },
    "no-case-declarations": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow lexical declarations in case clauses",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-case-declarations"
      },
      "hasSuggestions": true,
      "name": "no-case-declarations",
      "plugin": "eslint"
    },
    "no-catch-shadow": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `catch` clause parameters from shadowing variables in the outer scope",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-catch-shadow"
      },
      "replacedBy": [
        "no-shadow"
      ],
      "deprecated": true,
      "name": "no-catch-shadow",
      "plugin": "eslint"
    },
    "no-class-assign": {
      "type": "problem",
      "docs": {
        "description": "Disallow reassigning class members",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-class-assign"
      },
      "name": "no-class-assign",
      "plugin": "eslint"
    },
    "no-compare-neg-zero": {
      "type": "problem",
      "docs": {
        "description": "Disallow comparing against `-0`",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-compare-neg-zero"
      },
      "fixable": null,
      "name": "no-compare-neg-zero",
      "plugin": "eslint"
    },
    "no-cond-assign": {
      "type": "problem",
      "defaultOptions": [
        "except-parens"
      ],
      "docs": {
        "description": "Disallow assignment operators in conditional expressions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-cond-assign"
      },
      "name": "no-cond-assign",
      "plugin": "eslint"
    },
    "no-confusing-arrow": {
      "deprecated": true,
      "replacedBy": [],
      "type": "suggestion",
      "docs": {
        "description": "Disallow arrow functions where they could be confused with comparisons",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-confusing-arrow"
      },
      "fixable": "code",
      "name": "no-confusing-arrow",
      "plugin": "eslint"
    },
    "no-console": {
      "type": "suggestion",
      "defaultOptions": [
        {}
      ],
      "docs": {
        "description": "Disallow the use of `console`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-console"
      },
      "hasSuggestions": true,
      "name": "no-console",
      "plugin": "eslint"
    },
    "no-const-assign": {
      "type": "problem",
      "docs": {
        "description": "Disallow reassigning `const` variables",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-const-assign"
      },
      "name": "no-const-assign",
      "plugin": "eslint"
    },
    "no-constant-binary-expression": {
      "type": "problem",
      "docs": {
        "description": "Disallow expressions where the operation doesn't affect the value",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-constant-binary-expression"
      },
      "name": "no-constant-binary-expression",
      "plugin": "eslint"
    },
    "no-constant-condition": {
      "type": "problem",
      "defaultOptions": [
        {
          "checkLoops": "allExceptWhileTrue"
        }
      ],
      "docs": {
        "description": "Disallow constant expressions in conditions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-constant-condition"
      },
      "name": "no-constant-condition",
      "plugin": "eslint"
    },
    "no-constructor-return": {
      "type": "problem",
      "docs": {
        "description": "Disallow returning value from constructor",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-constructor-return"
      },
      "fixable": null,
      "name": "no-constructor-return",
      "plugin": "eslint"
    },
    "no-continue": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `continue` statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-continue"
      },
      "name": "no-continue",
      "plugin": "eslint"
    },
    "no-control-regex": {
      "type": "problem",
      "docs": {
        "description": "Disallow control characters in regular expressions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-control-regex"
      },
      "name": "no-control-regex",
      "plugin": "eslint"
    },
    "no-debugger": {
      "type": "problem",
      "docs": {
        "description": "Disallow the use of `debugger`",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-debugger"
      },
      "fixable": null,
      "name": "no-debugger",
      "plugin": "eslint"
    },
    "no-delete-var": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow deleting variables",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-delete-var"
      },
      "name": "no-delete-var",
      "plugin": "eslint"
    },
    "no-div-regex": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow equal signs explicitly at the beginning of regular expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-div-regex"
      },
      "fixable": "code",
      "name": "no-div-regex",
      "plugin": "eslint"
    },
    "no-dupe-args": {
      "type": "problem",
      "docs": {
        "description": "Disallow duplicate arguments in `function` definitions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-dupe-args"
      },
      "name": "no-dupe-args",
      "plugin": "eslint"
    },
    "no-dupe-class-members": {
      "type": "problem",
      "docs": {
        "description": "Disallow duplicate class members",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-dupe-class-members"
      },
      "name": "no-dupe-class-members",
      "plugin": "eslint"
    },
    "no-dupe-else-if": {
      "type": "problem",
      "docs": {
        "description": "Disallow duplicate conditions in if-else-if chains",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-dupe-else-if"
      },
      "name": "no-dupe-else-if",
      "plugin": "eslint"
    },
    "no-dupe-keys": {
      "type": "problem",
      "docs": {
        "description": "Disallow duplicate keys in object literals",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-dupe-keys"
      },
      "name": "no-dupe-keys",
      "plugin": "eslint"
    },
    "no-duplicate-case": {
      "type": "problem",
      "docs": {
        "description": "Disallow duplicate case labels",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-duplicate-case"
      },
      "name": "no-duplicate-case",
      "plugin": "eslint"
    },
    "no-duplicate-imports": {
      "type": "problem",
      "defaultOptions": [
        {
          "includeExports": false
        }
      ],
      "docs": {
        "description": "Disallow duplicate module imports",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-duplicate-imports"
      },
      "name": "no-duplicate-imports",
      "plugin": "eslint"
    },
    "no-else-return": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowElseIf": true
        }
      ],
      "docs": {
        "description": "Disallow `else` blocks after `return` statements in `if` statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-else-return"
      },
      "fixable": "code",
      "name": "no-else-return",
      "plugin": "eslint"
    },
    "no-empty": {
      "hasSuggestions": true,
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowEmptyCatch": false
        }
      ],
      "docs": {
        "description": "Disallow empty block statements",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-empty"
      },
      "name": "no-empty",
      "plugin": "eslint"
    },
    "no-empty-character-class": {
      "type": "problem",
      "docs": {
        "description": "Disallow empty character classes in regular expressions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-empty-character-class"
      },
      "name": "no-empty-character-class",
      "plugin": "eslint"
    },
    "no-empty-function": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allow": []
        }
      ],
      "docs": {
        "description": "Disallow empty functions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-empty-function"
      },
      "name": "no-empty-function",
      "plugin": "eslint"
    },
    "no-empty-pattern": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowObjectPatternsAsParameters": false
        }
      ],
      "docs": {
        "description": "Disallow empty destructuring patterns",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-empty-pattern"
      },
      "name": "no-empty-pattern",
      "plugin": "eslint"
    },
    "no-empty-static-block": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow empty static blocks",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-empty-static-block"
      },
      "name": "no-empty-static-block",
      "plugin": "eslint"
    },
    "no-eq-null": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `null` comparisons without type-checking operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-eq-null"
      },
      "name": "no-eq-null",
      "plugin": "eslint"
    },
    "no-eval": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowIndirect": false
        }
      ],
      "docs": {
        "description": "Disallow the use of `eval()`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-eval"
      },
      "name": "no-eval",
      "plugin": "eslint"
    },
    "no-ex-assign": {
      "type": "problem",
      "docs": {
        "description": "Disallow reassigning exceptions in `catch` clauses",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-ex-assign"
      },
      "name": "no-ex-assign",
      "plugin": "eslint"
    },
    "no-extend-native": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "exceptions": []
        }
      ],
      "docs": {
        "description": "Disallow extending native types",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-extend-native"
      },
      "name": "no-extend-native",
      "plugin": "eslint"
    },
    "no-extra-bind": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary calls to `.bind()`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-extra-bind"
      },
      "fixable": "code",
      "name": "no-extra-bind",
      "plugin": "eslint"
    },
    "no-extra-boolean-cast": {
      "type": "suggestion",
      "defaultOptions": [
        {}
      ],
      "docs": {
        "description": "Disallow unnecessary boolean casts",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-extra-boolean-cast"
      },
      "fixable": "code",
      "name": "no-extra-boolean-cast",
      "plugin": "eslint"
    },
    "no-extra-label": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary labels",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-extra-label"
      },
      "fixable": "code",
      "name": "no-extra-label",
      "plugin": "eslint"
    },
    "no-extra-parens": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Disallow unnecessary parentheses",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-extra-parens"
      },
      "fixable": "code",
      "name": "no-extra-parens",
      "plugin": "eslint"
    },
    "no-extra-semi": {
      "deprecated": true,
      "replacedBy": [],
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary semicolons",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-extra-semi"
      },
      "fixable": "code",
      "name": "no-extra-semi",
      "plugin": "eslint"
    },
    "no-fallthrough": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowEmptyCase": false,
          "reportUnusedFallthroughComment": false
        }
      ],
      "docs": {
        "description": "Disallow fallthrough of `case` statements",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-fallthrough"
      },
      "name": "no-fallthrough",
      "plugin": "eslint"
    },
    "no-floating-decimal": {
      "deprecated": true,
      "replacedBy": [],
      "type": "suggestion",
      "docs": {
        "description": "Disallow leading or trailing decimal points in numeric literals",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-floating-decimal"
      },
      "fixable": "code",
      "name": "no-floating-decimal",
      "plugin": "eslint"
    },
    "no-func-assign": {
      "type": "problem",
      "docs": {
        "description": "Disallow reassigning `function` declarations",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-func-assign"
      },
      "name": "no-func-assign",
      "plugin": "eslint"
    },
    "no-global-assign": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "exceptions": []
        }
      ],
      "docs": {
        "description": "Disallow assignments to native objects or read-only global variables",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-global-assign"
      },
      "name": "no-global-assign",
      "plugin": "eslint"
    },
    "no-implicit-coercion": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Disallow shorthand type conversions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-implicit-coercion"
      },
      "fixable": "code",
      "defaultOptions": [
        {
          "allow": [],
          "boolean": true,
          "disallowTemplateShorthand": false,
          "number": true,
          "string": true
        }
      ],
      "name": "no-implicit-coercion",
      "plugin": "eslint"
    },
    "no-implicit-globals": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "lexicalBindings": false
        }
      ],
      "docs": {
        "description": "Disallow declarations in the global scope",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-implicit-globals"
      },
      "name": "no-implicit-globals",
      "plugin": "eslint"
    },
    "no-implied-eval": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `eval()`-like methods",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-implied-eval"
      },
      "name": "no-implied-eval",
      "plugin": "eslint"
    },
    "no-import-assign": {
      "type": "problem",
      "docs": {
        "description": "Disallow assigning to imported bindings",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-import-assign"
      },
      "name": "no-import-assign",
      "plugin": "eslint"
    },
    "no-inline-comments": {
      "type": "suggestion",
      "defaultOptions": [
        {}
      ],
      "docs": {
        "description": "Disallow inline comments after code",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-inline-comments"
      },
      "name": "no-inline-comments",
      "plugin": "eslint"
    },
    "no-inner-declarations": {
      "type": "problem",
      "defaultOptions": [
        "functions",
        {
          "blockScopedFunctions": "allow"
        }
      ],
      "docs": {
        "description": "Disallow variable or `function` declarations in nested blocks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-inner-declarations"
      },
      "name": "no-inner-declarations",
      "plugin": "eslint"
    },
    "no-invalid-regexp": {
      "type": "problem",
      "defaultOptions": [
        {}
      ],
      "docs": {
        "description": "Disallow invalid regular expression strings in `RegExp` constructors",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-invalid-regexp"
      },
      "name": "no-invalid-regexp",
      "plugin": "eslint"
    },
    "no-invalid-this": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "capIsConstructor": true
        }
      ],
      "docs": {
        "description": "Disallow use of `this` in contexts where the value of `this` is `undefined`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-invalid-this"
      },
      "name": "no-invalid-this",
      "plugin": "eslint"
    },
    "no-irregular-whitespace": {
      "type": "problem",
      "defaultOptions": [
        {
          "skipComments": false,
          "skipJSXText": false,
          "skipRegExps": false,
          "skipStrings": true,
          "skipTemplates": false
        }
      ],
      "docs": {
        "description": "Disallow irregular whitespace",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-irregular-whitespace"
      },
      "name": "no-irregular-whitespace",
      "plugin": "eslint"
    },
    "no-iterator": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of the `__iterator__` property",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-iterator"
      },
      "name": "no-iterator",
      "plugin": "eslint"
    },
    "no-label-var": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow labels that share a name with a variable",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-label-var"
      },
      "name": "no-label-var",
      "plugin": "eslint"
    },
    "no-labels": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowLoop": false,
          "allowSwitch": false
        }
      ],
      "docs": {
        "description": "Disallow labeled statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-labels"
      },
      "name": "no-labels",
      "plugin": "eslint"
    },
    "no-lone-blocks": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary nested blocks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-lone-blocks"
      },
      "name": "no-lone-blocks",
      "plugin": "eslint"
    },
    "no-lonely-if": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `if` statements as the only statement in `else` blocks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-lonely-if"
      },
      "fixable": "code",
      "name": "no-lonely-if",
      "plugin": "eslint"
    },
    "no-loop-func": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow function declarations that contain unsafe references inside loop statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-loop-func"
      },
      "name": "no-loop-func",
      "plugin": "eslint"
    },
    "no-loss-of-precision": {
      "type": "problem",
      "docs": {
        "description": "Disallow literal numbers that lose precision",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-loss-of-precision"
      },
      "name": "no-loss-of-precision",
      "plugin": "eslint"
    },
    "no-magic-numbers": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow magic numbers",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-magic-numbers"
      },
      "name": "no-magic-numbers",
      "plugin": "eslint"
    },
    "no-misleading-character-class": {
      "type": "problem",
      "docs": {
        "description": "Disallow characters which are made with multiple code points in character class syntax",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-misleading-character-class"
      },
      "hasSuggestions": true,
      "name": "no-misleading-character-class",
      "plugin": "eslint"
    },
    "no-mixed-operators": {
      "deprecated": true,
      "replacedBy": [],
      "type": "suggestion",
      "docs": {
        "description": "Disallow mixed binary operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-mixed-operators"
      },
      "name": "no-mixed-operators",
      "plugin": "eslint"
    },
    "no-mixed-requires": {
      "deprecated": true,
      "replacedBy": [],
      "type": "suggestion",
      "docs": {
        "description": "Disallow `require` calls to be mixed with regular variable declarations",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-mixed-requires"
      },
      "name": "no-mixed-requires",
      "plugin": "eslint"
    },
    "no-mixed-spaces-and-tabs": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Disallow mixed spaces and tabs for indentation",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-mixed-spaces-and-tabs"
      },
      "name": "no-mixed-spaces-and-tabs",
      "plugin": "eslint"
    },
    "no-multi-assign": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "ignoreNonDeclaration": false
        }
      ],
      "docs": {
        "description": "Disallow use of chained assignment expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-multi-assign"
      },
      "name": "no-multi-assign",
      "plugin": "eslint"
    },
    "no-multi-spaces": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Disallow multiple spaces",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-multi-spaces"
      },
      "fixable": "whitespace",
      "name": "no-multi-spaces",
      "plugin": "eslint"
    },
    "no-multi-str": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow multiline strings",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-multi-str"
      },
      "name": "no-multi-str",
      "plugin": "eslint"
    },
    "no-multiple-empty-lines": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Disallow multiple empty lines",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-multiple-empty-lines"
      },
      "fixable": "whitespace",
      "name": "no-multiple-empty-lines",
      "plugin": "eslint"
    },
    "no-native-reassign": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow assignments to native objects or read-only global variables",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-native-reassign"
      },
      "deprecated": true,
      "replacedBy": [
        "no-global-assign"
      ],
      "name": "no-native-reassign",
      "plugin": "eslint"
    },
    "no-negated-condition": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow negated conditions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-negated-condition"
      },
      "name": "no-negated-condition",
      "plugin": "eslint"
    },
    "no-negated-in-lhs": {
      "type": "problem",
      "docs": {
        "description": "Disallow negating the left operand in `in` expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-negated-in-lhs"
      },
      "replacedBy": [
        "no-unsafe-negation"
      ],
      "deprecated": true,
      "name": "no-negated-in-lhs",
      "plugin": "eslint"
    },
    "no-nested-ternary": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow nested ternary expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-nested-ternary"
      },
      "name": "no-nested-ternary",
      "plugin": "eslint"
    },
    "no-new": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `new` operators outside of assignments or comparisons",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-new"
      },
      "name": "no-new",
      "plugin": "eslint"
    },
    "no-new-func": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `new` operators with the `Function` object",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-new-func"
      },
      "name": "no-new-func",
      "plugin": "eslint"
    },
    "no-new-native-nonconstructor": {
      "type": "problem",
      "docs": {
        "description": "Disallow `new` operators with global non-constructor functions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"
      },
      "name": "no-new-native-nonconstructor",
      "plugin": "eslint"
    },
    "no-new-object": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `Object` constructors",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-new-object"
      },
      "deprecated": true,
      "replacedBy": [
        "no-object-constructor"
      ],
      "name": "no-new-object",
      "plugin": "eslint"
    },
    "no-new-require": {
      "deprecated": true,
      "replacedBy": [],
      "type": "suggestion",
      "docs": {
        "description": "Disallow `new` operators with calls to `require`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-new-require"
      },
      "name": "no-new-require",
      "plugin": "eslint"
    },
    "no-new-symbol": {
      "type": "problem",
      "docs": {
        "description": "Disallow `new` operators with the `Symbol` object",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-new-symbol"
      },
      "deprecated": true,
      "replacedBy": [
        "no-new-native-nonconstructor"
      ],
      "name": "no-new-symbol",
      "plugin": "eslint"
    },
    "no-new-wrappers": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `new` operators with the `String`, `Number`, and `Boolean` objects",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-new-wrappers"
      },
      "name": "no-new-wrappers",
      "plugin": "eslint"
    },
    "no-nonoctal-decimal-escape": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `\\8` and `\\9` escape sequences in string literals",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-nonoctal-decimal-escape"
      },
      "hasSuggestions": true,
      "name": "no-nonoctal-decimal-escape",
      "plugin": "eslint"
    },
    "no-obj-calls": {
      "type": "problem",
      "docs": {
        "description": "Disallow calling global object properties as functions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-obj-calls"
      },
      "name": "no-obj-calls",
      "plugin": "eslint"
    },
    "no-object-constructor": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow calls to the `Object` constructor without an argument",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-object-constructor"
      },
      "hasSuggestions": true,
      "name": "no-object-constructor",
      "plugin": "eslint"
    },
    "no-octal": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow octal literals",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-octal"
      },
      "name": "no-octal",
      "plugin": "eslint"
    },
    "no-octal-escape": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow octal escape sequences in string literals",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-octal-escape"
      },
      "name": "no-octal-escape",
      "plugin": "eslint"
    },
    "no-param-reassign": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow reassigning function parameters",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-param-reassign"
      },
      "name": "no-param-reassign",
      "plugin": "eslint"
    },
    "no-path-concat": {
      "deprecated": true,
      "replacedBy": [],
      "type": "suggestion",
      "docs": {
        "description": "Disallow string concatenation with `__dirname` and `__filename`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-path-concat"
      },
      "name": "no-path-concat",
      "plugin": "eslint"
    },
    "no-plusplus": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowForLoopAfterthoughts": false
        }
      ],
      "docs": {
        "description": "Disallow the unary operators `++` and `--`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-plusplus"
      },
      "name": "no-plusplus",
      "plugin": "eslint"
    },
    "no-process-env": {
      "deprecated": true,
      "replacedBy": [],
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `process.env`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-process-env"
      },
      "name": "no-process-env",
      "plugin": "eslint"
    },
    "no-process-exit": {
      "deprecated": true,
      "replacedBy": [],
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `process.exit()`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-process-exit"
      },
      "name": "no-process-exit",
      "plugin": "eslint"
    },
    "no-promise-executor-return": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowVoid": false
        }
      ],
      "docs": {
        "description": "Disallow returning values from Promise executor functions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-promise-executor-return"
      },
      "hasSuggestions": true,
      "name": "no-promise-executor-return",
      "plugin": "eslint"
    },
    "no-proto": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of the `__proto__` property",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-proto"
      },
      "name": "no-proto",
      "plugin": "eslint"
    },
    "no-prototype-builtins": {
      "type": "problem",
      "docs": {
        "description": "Disallow calling some `Object.prototype` methods directly on objects",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-prototype-builtins"
      },
      "hasSuggestions": true,
      "name": "no-prototype-builtins",
      "plugin": "eslint"
    },
    "no-redeclare": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "builtinGlobals": true
        }
      ],
      "docs": {
        "description": "Disallow variable redeclaration",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-redeclare"
      },
      "name": "no-redeclare",
      "plugin": "eslint"
    },
    "no-regex-spaces": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow multiple spaces in regular expressions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-regex-spaces"
      },
      "fixable": "code",
      "name": "no-regex-spaces",
      "plugin": "eslint"
    },
    "no-restricted-exports": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified names in exports",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-restricted-exports"
      },
      "name": "no-restricted-exports",
      "plugin": "eslint"
    },
    "no-restricted-globals": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified global variables",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-restricted-globals"
      },
      "name": "no-restricted-globals",
      "plugin": "eslint"
    },
    "no-restricted-imports": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified modules when loaded by `import`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-restricted-imports"
      },
      "name": "no-restricted-imports",
      "plugin": "eslint"
    },
    "no-restricted-modules": {
      "deprecated": true,
      "replacedBy": [],
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified modules when loaded by `require`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-restricted-modules"
      },
      "name": "no-restricted-modules",
      "plugin": "eslint"
    },
    "no-restricted-properties": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow certain properties on certain objects",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-restricted-properties"
      },
      "name": "no-restricted-properties",
      "plugin": "eslint"
    },
    "no-restricted-syntax": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified syntax",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-restricted-syntax"
      },
      "name": "no-restricted-syntax",
      "plugin": "eslint"
    },
    "no-return-assign": {
      "type": "suggestion",
      "defaultOptions": [
        "except-parens"
      ],
      "docs": {
        "description": "Disallow assignment operators in `return` statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-return-assign"
      },
      "name": "no-return-assign",
      "plugin": "eslint"
    },
    "no-return-await": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary `return await`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-return-await"
      },
      "fixable": null,
      "deprecated": true,
      "replacedBy": [],
      "name": "no-return-await",
      "plugin": "eslint"
    },
    "no-script-url": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `javascript:` URLs",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-script-url"
      },
      "name": "no-script-url",
      "plugin": "eslint"
    },
    "no-self-assign": {
      "type": "problem",
      "defaultOptions": [
        {
          "props": true
        }
      ],
      "docs": {
        "description": "Disallow assignments where both sides are exactly the same",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-self-assign"
      },
      "name": "no-self-assign",
      "plugin": "eslint"
    },
    "no-self-compare": {
      "type": "problem",
      "docs": {
        "description": "Disallow comparisons where both sides are exactly the same",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-self-compare"
      },
      "name": "no-self-compare",
      "plugin": "eslint"
    },
    "no-sequences": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow comma operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-sequences"
      },
      "defaultOptions": [
        {
          "allowInParentheses": true
        }
      ],
      "name": "no-sequences",
      "plugin": "eslint"
    },
    "no-setter-return": {
      "type": "problem",
      "docs": {
        "description": "Disallow returning values from setters",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-setter-return"
      },
      "name": "no-setter-return",
      "plugin": "eslint"
    },
    "no-shadow": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allow": [],
          "builtinGlobals": false,
          "hoist": "functions",
          "ignoreOnInitialization": false
        }
      ],
      "docs": {
        "description": "Disallow variable declarations from shadowing variables declared in the outer scope",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-shadow"
      },
      "name": "no-shadow",
      "plugin": "eslint"
    },
    "no-shadow-restricted-names": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow identifiers from shadowing restricted names",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-shadow-restricted-names"
      },
      "name": "no-shadow-restricted-names",
      "plugin": "eslint"
    },
    "no-spaced-func": {
      "type": "layout",
      "docs": {
        "description": "Disallow spacing between function identifiers and their applications (deprecated)",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-spaced-func"
      },
      "deprecated": true,
      "replacedBy": [
        "func-call-spacing"
      ],
      "fixable": "whitespace",
      "name": "no-spaced-func",
      "plugin": "eslint"
    },
    "no-sparse-arrays": {
      "type": "problem",
      "docs": {
        "description": "Disallow sparse arrays",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-sparse-arrays"
      },
      "name": "no-sparse-arrays",
      "plugin": "eslint"
    },
    "no-sync": {
      "deprecated": true,
      "replacedBy": [],
      "type": "suggestion",
      "docs": {
        "description": "Disallow synchronous methods",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-sync"
      },
      "name": "no-sync",
      "plugin": "eslint"
    },
    "no-tabs": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Disallow all tabs",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-tabs"
      },
      "name": "no-tabs",
      "plugin": "eslint"
    },
    "no-template-curly-in-string": {
      "type": "problem",
      "docs": {
        "description": "Disallow template literal placeholder syntax in regular strings",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-template-curly-in-string"
      },
      "name": "no-template-curly-in-string",
      "plugin": "eslint"
    },
    "no-ternary": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow ternary operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-ternary"
      },
      "name": "no-ternary",
      "plugin": "eslint"
    },
    "no-this-before-super": {
      "type": "problem",
      "docs": {
        "description": "Disallow `this`/`super` before calling `super()` in constructors",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-this-before-super"
      },
      "name": "no-this-before-super",
      "plugin": "eslint"
    },
    "no-throw-literal": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow throwing literals as exceptions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-throw-literal"
      },
      "name": "no-throw-literal",
      "plugin": "eslint"
    },
    "no-trailing-spaces": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Disallow trailing whitespace at the end of lines",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-trailing-spaces"
      },
      "fixable": "whitespace",
      "name": "no-trailing-spaces",
      "plugin": "eslint"
    },
    "no-undef": {
      "type": "problem",
      "defaultOptions": [
        {
          "typeof": false
        }
      ],
      "docs": {
        "description": "Disallow the use of undeclared variables unless mentioned in `/*global */` comments",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-undef"
      },
      "name": "no-undef",
      "plugin": "eslint"
    },
    "no-undef-init": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow initializing variables to `undefined`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-undef-init"
      },
      "fixable": "code",
      "name": "no-undef-init",
      "plugin": "eslint"
    },
    "no-undefined": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `undefined` as an identifier",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-undefined"
      },
      "name": "no-undefined",
      "plugin": "eslint"
    },
    "no-underscore-dangle": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allow": [],
          "allowAfterSuper": false,
          "allowAfterThis": false,
          "allowAfterThisConstructor": false,
          "allowFunctionParams": true,
          "allowInArrayDestructuring": true,
          "allowInObjectDestructuring": true,
          "enforceInClassFields": false,
          "enforceInMethodNames": false
        }
      ],
      "docs": {
        "description": "Disallow dangling underscores in identifiers",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-underscore-dangle"
      },
      "name": "no-underscore-dangle",
      "plugin": "eslint"
    },
    "no-unexpected-multiline": {
      "type": "problem",
      "docs": {
        "description": "Disallow confusing multiline expressions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unexpected-multiline"
      },
      "name": "no-unexpected-multiline",
      "plugin": "eslint"
    },
    "no-unmodified-loop-condition": {
      "type": "problem",
      "docs": {
        "description": "Disallow unmodified loop conditions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-unmodified-loop-condition"
      },
      "name": "no-unmodified-loop-condition",
      "plugin": "eslint"
    },
    "no-unneeded-ternary": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "defaultAssignment": true
        }
      ],
      "docs": {
        "description": "Disallow ternary operators when simpler alternatives exist",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-unneeded-ternary"
      },
      "fixable": "code",
      "name": "no-unneeded-ternary",
      "plugin": "eslint"
    },
    "no-unreachable": {
      "type": "problem",
      "docs": {
        "description": "Disallow unreachable code after `return`, `throw`, `continue`, and `break` statements",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unreachable"
      },
      "name": "no-unreachable",
      "plugin": "eslint"
    },
    "no-unreachable-loop": {
      "type": "problem",
      "defaultOptions": [
        {
          "ignore": []
        }
      ],
      "docs": {
        "description": "Disallow loops with a body that allows only one iteration",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-unreachable-loop"
      },
      "name": "no-unreachable-loop",
      "plugin": "eslint"
    },
    "no-unsafe-finally": {
      "type": "problem",
      "docs": {
        "description": "Disallow control flow statements in `finally` blocks",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unsafe-finally"
      },
      "name": "no-unsafe-finally",
      "plugin": "eslint"
    },
    "no-unsafe-negation": {
      "type": "problem",
      "defaultOptions": [
        {
          "enforceForOrderingRelations": false
        }
      ],
      "docs": {
        "description": "Disallow negating the left operand of relational operators",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unsafe-negation"
      },
      "hasSuggestions": true,
      "fixable": null,
      "name": "no-unsafe-negation",
      "plugin": "eslint"
    },
    "no-unsafe-optional-chaining": {
      "type": "problem",
      "defaultOptions": [
        {
          "disallowArithmeticOperators": false
        }
      ],
      "docs": {
        "description": "Disallow use of optional chaining in contexts where the `undefined` value is not allowed",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unsafe-optional-chaining"
      },
      "fixable": null,
      "name": "no-unsafe-optional-chaining",
      "plugin": "eslint"
    },
    "no-unused-expressions": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unused expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-unused-expressions"
      },
      "defaultOptions": [
        {
          "allowShortCircuit": false,
          "allowTernary": false,
          "allowTaggedTemplates": false,
          "enforceForJSX": false
        }
      ],
      "name": "no-unused-expressions",
      "plugin": "eslint"
    },
    "no-unused-labels": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unused labels",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unused-labels"
      },
      "fixable": "code",
      "name": "no-unused-labels",
      "plugin": "eslint"
    },
    "no-unused-private-class-members": {
      "type": "problem",
      "docs": {
        "description": "Disallow unused private class members",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unused-private-class-members"
      },
      "name": "no-unused-private-class-members",
      "plugin": "eslint"
    },
    "no-unused-vars": {
      "type": "problem",
      "docs": {
        "description": "Disallow unused variables",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unused-vars"
      },
      "hasSuggestions": true,
      "name": "no-unused-vars",
      "plugin": "eslint"
    },
    "no-use-before-define": {
      "type": "problem",
      "docs": {
        "description": "Disallow the use of variables before they are defined",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-use-before-define"
      },
      "defaultOptions": [
        {
          "classes": true,
          "functions": true,
          "variables": true,
          "allowNamedExports": false
        }
      ],
      "name": "no-use-before-define",
      "plugin": "eslint"
    },
    "no-useless-assignment": {
      "type": "problem",
      "docs": {
        "description": "Disallow variable assignments when the value is not used",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-useless-assignment"
      },
      "name": "no-useless-assignment",
      "plugin": "eslint"
    },
    "no-useless-backreference": {
      "type": "problem",
      "docs": {
        "description": "Disallow useless backreferences in regular expressions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-useless-backreference"
      },
      "name": "no-useless-backreference",
      "plugin": "eslint"
    },
    "no-useless-call": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary calls to `.call()` and `.apply()`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-useless-call"
      },
      "name": "no-useless-call",
      "plugin": "eslint"
    },
    "no-useless-catch": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary `catch` clauses",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-useless-catch"
      },
      "name": "no-useless-catch",
      "plugin": "eslint"
    },
    "no-useless-computed-key": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "enforceForClassMembers": true
        }
      ],
      "docs": {
        "description": "Disallow unnecessary computed property keys in objects and classes",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-useless-computed-key"
      },
      "fixable": "code",
      "name": "no-useless-computed-key",
      "plugin": "eslint"
    },
    "no-useless-concat": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary concatenation of literals or template literals",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-useless-concat"
      },
      "name": "no-useless-concat",
      "plugin": "eslint"
    },
    "no-useless-constructor": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary constructors",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-useless-constructor"
      },
      "hasSuggestions": true,
      "name": "no-useless-constructor",
      "plugin": "eslint"
    },
    "no-useless-escape": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary escape characters",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-useless-escape"
      },
      "hasSuggestions": true,
      "name": "no-useless-escape",
      "plugin": "eslint"
    },
    "no-useless-rename": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "ignoreDestructuring": false,
          "ignoreImport": false,
          "ignoreExport": false
        }
      ],
      "docs": {
        "description": "Disallow renaming import, export, and destructured assignments to the same name",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-useless-rename"
      },
      "fixable": "code",
      "name": "no-useless-rename",
      "plugin": "eslint"
    },
    "no-useless-return": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow redundant return statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-useless-return"
      },
      "fixable": "code",
      "name": "no-useless-return",
      "plugin": "eslint"
    },
    "no-var": {
      "type": "suggestion",
      "docs": {
        "description": "Require `let` or `const` instead of `var`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-var"
      },
      "fixable": "code",
      "name": "no-var",
      "plugin": "eslint"
    },
    "no-void": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowAsStatement": false
        }
      ],
      "docs": {
        "description": "Disallow `void` operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-void"
      },
      "name": "no-void",
      "plugin": "eslint"
    },
    "no-warning-comments": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "location": "start",
          "terms": [
            "todo",
            "fixme",
            "xxx"
          ]
        }
      ],
      "docs": {
        "description": "Disallow specified warning terms in comments",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-warning-comments"
      },
      "name": "no-warning-comments",
      "plugin": "eslint"
    },
    "no-whitespace-before-property": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Disallow whitespace before properties",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-whitespace-before-property"
      },
      "fixable": "whitespace",
      "name": "no-whitespace-before-property",
      "plugin": "eslint"
    },
    "no-with": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `with` statements",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-with"
      },
      "name": "no-with",
      "plugin": "eslint"
    },
    "nonblock-statement-body-position": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce the location of single-line statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/nonblock-statement-body-position"
      },
      "fixable": "whitespace",
      "name": "nonblock-statement-body-position",
      "plugin": "eslint"
    },
    "object-curly-newline": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent line breaks after opening and before closing braces",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/object-curly-newline"
      },
      "fixable": "whitespace",
      "name": "object-curly-newline",
      "plugin": "eslint"
    },
    "object-curly-spacing": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing inside braces",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/object-curly-spacing"
      },
      "fixable": "whitespace",
      "name": "object-curly-spacing",
      "plugin": "eslint"
    },
    "object-property-newline": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce placing object properties on separate lines",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/object-property-newline"
      },
      "fixable": "whitespace",
      "name": "object-property-newline",
      "plugin": "eslint"
    },
    "object-shorthand": {
      "type": "suggestion",
      "docs": {
        "description": "Require or disallow method and property shorthand syntax for object literals",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/object-shorthand"
      },
      "fixable": "code",
      "name": "object-shorthand",
      "plugin": "eslint"
    },
    "one-var": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce variables to be declared either together or separately in functions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/one-var"
      },
      "fixable": "code",
      "name": "one-var",
      "plugin": "eslint"
    },
    "one-var-declaration-per-line": {
      "deprecated": true,
      "replacedBy": [],
      "type": "suggestion",
      "docs": {
        "description": "Require or disallow newlines around variable declarations",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/one-var-declaration-per-line"
      },
      "fixable": "whitespace",
      "name": "one-var-declaration-per-line",
      "plugin": "eslint"
    },
    "operator-assignment": {
      "type": "suggestion",
      "defaultOptions": [
        "always"
      ],
      "docs": {
        "description": "Require or disallow assignment operator shorthand where possible",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/operator-assignment"
      },
      "fixable": "code",
      "name": "operator-assignment",
      "plugin": "eslint"
    },
    "operator-linebreak": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent linebreak style for operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/operator-linebreak"
      },
      "fixable": "code",
      "name": "operator-linebreak",
      "plugin": "eslint"
    },
    "padded-blocks": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Require or disallow padding within blocks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/padded-blocks"
      },
      "fixable": "whitespace",
      "name": "padded-blocks",
      "plugin": "eslint"
    },
    "padding-line-between-statements": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Require or disallow padding lines between statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/padding-line-between-statements"
      },
      "fixable": "whitespace",
      "name": "padding-line-between-statements",
      "plugin": "eslint"
    },
    "prefer-arrow-callback": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowNamedFunctions": false,
          "allowUnboundThis": true
        }
      ],
      "docs": {
        "description": "Require using arrow functions for callbacks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-arrow-callback"
      },
      "fixable": "code",
      "name": "prefer-arrow-callback",
      "plugin": "eslint"
    },
    "prefer-const": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "destructuring": "any",
          "ignoreReadBeforeAssign": false
        }
      ],
      "docs": {
        "description": "Require `const` declarations for variables that are never reassigned after declared",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-const"
      },
      "fixable": "code",
      "name": "prefer-const",
      "plugin": "eslint"
    },
    "prefer-destructuring": {
      "type": "suggestion",
      "docs": {
        "description": "Require destructuring from arrays and/or objects",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-destructuring"
      },
      "fixable": "code",
      "name": "prefer-destructuring",
      "plugin": "eslint"
    },
    "prefer-exponentiation-operator": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `Math.pow` in favor of the `**` operator",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-exponentiation-operator"
      },
      "fixable": "code",
      "name": "prefer-exponentiation-operator",
      "plugin": "eslint"
    },
    "prefer-named-capture-group": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using named capture group in regular expression",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-named-capture-group"
      },
      "hasSuggestions": true,
      "name": "prefer-named-capture-group",
      "plugin": "eslint"
    },
    "prefer-numeric-literals": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `parseInt()` and `Number.parseInt()` in favor of binary, octal, and hexadecimal literals",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-numeric-literals"
      },
      "fixable": "code",
      "name": "prefer-numeric-literals",
      "plugin": "eslint"
    },
    "prefer-object-has-own": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow use of `Object.prototype.hasOwnProperty.call()` and prefer use of `Object.hasOwn()`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-object-has-own"
      },
      "fixable": "code",
      "name": "prefer-object-has-own",
      "plugin": "eslint"
    },
    "prefer-object-spread": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-object-spread"
      },
      "fixable": "code",
      "name": "prefer-object-spread",
      "plugin": "eslint"
    },
    "prefer-promise-reject-errors": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowEmptyReject": false
        }
      ],
      "docs": {
        "description": "Require using Error objects as Promise rejection reasons",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-promise-reject-errors"
      },
      "fixable": null,
      "name": "prefer-promise-reject-errors",
      "plugin": "eslint"
    },
    "prefer-reflect": {
      "type": "suggestion",
      "docs": {
        "description": "Require `Reflect` methods where applicable",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-reflect"
      },
      "deprecated": true,
      "replacedBy": [],
      "name": "prefer-reflect",
      "plugin": "eslint"
    },
    "prefer-regex-literals": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "disallowRedundantWrapping": false
        }
      ],
      "docs": {
        "description": "Disallow use of the `RegExp` constructor in favor of regular expression literals",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-regex-literals"
      },
      "hasSuggestions": true,
      "name": "prefer-regex-literals",
      "plugin": "eslint"
    },
    "prefer-rest-params": {
      "type": "suggestion",
      "docs": {
        "description": "Require rest parameters instead of `arguments`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-rest-params"
      },
      "name": "prefer-rest-params",
      "plugin": "eslint"
    },
    "prefer-spread": {
      "type": "suggestion",
      "docs": {
        "description": "Require spread operators instead of `.apply()`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-spread"
      },
      "fixable": null,
      "name": "prefer-spread",
      "plugin": "eslint"
    },
    "prefer-template": {
      "type": "suggestion",
      "docs": {
        "description": "Require template literals instead of string concatenation",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-template"
      },
      "fixable": "code",
      "name": "prefer-template",
      "plugin": "eslint"
    },
    "quote-props": {
      "deprecated": true,
      "replacedBy": [],
      "type": "suggestion",
      "docs": {
        "description": "Require quotes around object literal property names",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/quote-props"
      },
      "fixable": "code",
      "name": "quote-props",
      "plugin": "eslint"
    },
    "quotes": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce the consistent use of either backticks, double, or single quotes",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/quotes"
      },
      "fixable": "code",
      "name": "quotes",
      "plugin": "eslint"
    },
    "radix": {
      "type": "suggestion",
      "defaultOptions": [
        "always"
      ],
      "docs": {
        "description": "Enforce the consistent use of the radix argument when using `parseInt()`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/radix"
      },
      "hasSuggestions": true,
      "name": "radix",
      "plugin": "eslint"
    },
    "require-atomic-updates": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowProperties": false
        }
      ],
      "docs": {
        "description": "Disallow assignments that can lead to race conditions due to usage of `await` or `yield`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/require-atomic-updates"
      },
      "fixable": null,
      "name": "require-atomic-updates",
      "plugin": "eslint"
    },
    "require-await": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow async functions which have no `await` expression",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/require-await"
      },
      "hasSuggestions": true,
      "name": "require-await",
      "plugin": "eslint"
    },
    "require-unicode-regexp": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of `u` or `v` flag on regular expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/require-unicode-regexp"
      },
      "hasSuggestions": true,
      "name": "require-unicode-regexp",
      "plugin": "eslint"
    },
    "require-yield": {
      "type": "suggestion",
      "docs": {
        "description": "Require generator functions to contain `yield`",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/require-yield"
      },
      "name": "require-yield",
      "plugin": "eslint"
    },
    "rest-spread-spacing": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce spacing between rest and spread operators and their expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/rest-spread-spacing"
      },
      "fixable": "whitespace",
      "name": "rest-spread-spacing",
      "plugin": "eslint"
    },
    "semi": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Require or disallow semicolons instead of ASI",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/semi"
      },
      "fixable": "code",
      "name": "semi",
      "plugin": "eslint"
    },
    "semi-spacing": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before and after semicolons",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/semi-spacing"
      },
      "fixable": "whitespace",
      "name": "semi-spacing",
      "plugin": "eslint"
    },
    "semi-style": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce location of semicolons",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/semi-style"
      },
      "fixable": "whitespace",
      "name": "semi-style",
      "plugin": "eslint"
    },
    "sort-imports": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowSeparatedGroups": false,
          "ignoreCase": false,
          "ignoreDeclarationSort": false,
          "ignoreMemberSort": false,
          "memberSyntaxSortOrder": [
            "none",
            "all",
            "multiple",
            "single"
          ]
        }
      ],
      "docs": {
        "description": "Enforce sorted import declarations within modules",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/sort-imports"
      },
      "fixable": "code",
      "name": "sort-imports",
      "plugin": "eslint"
    },
    "sort-keys": {
      "type": "suggestion",
      "defaultOptions": [
        "asc",
        {
          "allowLineSeparatedGroups": false,
          "caseSensitive": true,
          "ignoreComputedKeys": false,
          "minKeys": 2,
          "natural": false
        }
      ],
      "docs": {
        "description": "Require object keys to be sorted",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/sort-keys"
      },
      "name": "sort-keys",
      "plugin": "eslint"
    },
    "sort-vars": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "ignoreCase": false
        }
      ],
      "docs": {
        "description": "Require variables within the same declaration block to be sorted",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/sort-vars"
      },
      "fixable": "code",
      "name": "sort-vars",
      "plugin": "eslint"
    },
    "space-before-blocks": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before blocks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/space-before-blocks"
      },
      "fixable": "whitespace",
      "name": "space-before-blocks",
      "plugin": "eslint"
    },
    "space-before-function-paren": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before `function` definition opening parenthesis",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/space-before-function-paren"
      },
      "fixable": "whitespace",
      "name": "space-before-function-paren",
      "plugin": "eslint"
    },
    "space-in-parens": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing inside parentheses",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/space-in-parens"
      },
      "fixable": "whitespace",
      "name": "space-in-parens",
      "plugin": "eslint"
    },
    "space-infix-ops": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Require spacing around infix operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/space-infix-ops"
      },
      "fixable": "whitespace",
      "name": "space-infix-ops",
      "plugin": "eslint"
    },
    "space-unary-ops": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before or after unary operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/space-unary-ops"
      },
      "fixable": "whitespace",
      "name": "space-unary-ops",
      "plugin": "eslint"
    },
    "spaced-comment": {
      "deprecated": true,
      "replacedBy": [],
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent spacing after the `//` or `/*` in a comment",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/spaced-comment"
      },
      "fixable": "whitespace",
      "name": "spaced-comment",
      "plugin": "eslint"
    },
    "strict": {
      "type": "suggestion",
      "defaultOptions": [
        "safe"
      ],
      "docs": {
        "description": "Require or disallow strict mode directives",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/strict"
      },
      "fixable": "code",
      "name": "strict",
      "plugin": "eslint"
    },
    "switch-colon-spacing": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Enforce spacing around colons of switch statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/switch-colon-spacing"
      },
      "fixable": "whitespace",
      "name": "switch-colon-spacing",
      "plugin": "eslint"
    },
    "symbol-description": {
      "type": "suggestion",
      "docs": {
        "description": "Require symbol descriptions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/symbol-description"
      },
      "fixable": null,
      "name": "symbol-description",
      "plugin": "eslint"
    },
    "template-curly-spacing": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Require or disallow spacing around embedded expressions of template strings",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/template-curly-spacing"
      },
      "fixable": "whitespace",
      "name": "template-curly-spacing",
      "plugin": "eslint"
    },
    "template-tag-spacing": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Require or disallow spacing between template tags and their literals",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/template-tag-spacing"
      },
      "fixable": "whitespace",
      "name": "template-tag-spacing",
      "plugin": "eslint"
    },
    "unicode-bom": {
      "type": "layout",
      "defaultOptions": [
        "never"
      ],
      "docs": {
        "description": "Require or disallow Unicode byte order mark (BOM)",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/unicode-bom"
      },
      "fixable": "whitespace",
      "name": "unicode-bom",
      "plugin": "eslint"
    },
    "use-isnan": {
      "hasSuggestions": true,
      "type": "problem",
      "docs": {
        "description": "Require calls to `isNaN()` when checking for `NaN`",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/use-isnan"
      },
      "defaultOptions": [
        {
          "enforceForIndexOf": false,
          "enforceForSwitchCase": true
        }
      ],
      "name": "use-isnan",
      "plugin": "eslint"
    },
    "valid-typeof": {
      "type": "problem",
      "defaultOptions": [
        {
          "requireStringLiterals": false
        }
      ],
      "docs": {
        "description": "Enforce comparing `typeof` expressions against valid strings",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/valid-typeof"
      },
      "hasSuggestions": true,
      "name": "valid-typeof",
      "plugin": "eslint"
    },
    "vars-on-top": {
      "type": "suggestion",
      "docs": {
        "description": "Require `var` declarations be placed at the top of their containing scope",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/vars-on-top"
      },
      "name": "vars-on-top",
      "plugin": "eslint"
    },
    "wrap-iife": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Require parentheses around immediate `function` invocations",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/wrap-iife"
      },
      "fixable": "code",
      "name": "wrap-iife",
      "plugin": "eslint"
    },
    "wrap-regex": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Require parenthesis around regex literals",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/wrap-regex"
      },
      "fixable": "code",
      "name": "wrap-regex",
      "plugin": "eslint"
    },
    "yield-star-spacing": {
      "deprecated": true,
      "replacedBy": [],
      "type": "layout",
      "docs": {
        "description": "Require or disallow spacing around the `*` in `yield*` expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/yield-star-spacing"
      },
      "fixable": "whitespace",
      "name": "yield-star-spacing",
      "plugin": "eslint"
    },
    "yoda": {
      "type": "suggestion",
      "defaultOptions": [
        "never",
        {
          "exceptRange": false,
          "onlyEquality": false
        }
      ],
      "docs": {
        "description": "Require or disallow \"Yoda\" conditions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/yoda"
      },
      "fixable": "code",
      "name": "yoda",
      "plugin": "eslint"
    },
    "@node/callback-return": {
      "type": "suggestion",
      "docs": {
        "description": "require `return` statements after callbacks",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/callback-return.md"
      },
      "fixable": null,
      "name": "@node/callback-return",
      "plugin": "@node"
    },
    "@node/exports-style": {
      "docs": {
        "description": "enforce either `module.exports` or `exports`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/exports-style.md"
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@node/exports-style",
      "plugin": "@node"
    },
    "@node/file-extension-in-import": {
      "docs": {
        "description": "enforce the style of file extensions in `import` declarations",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/file-extension-in-import.md"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@node/file-extension-in-import",
      "plugin": "@node"
    },
    "@node/global-require": {
      "type": "suggestion",
      "docs": {
        "description": "require `require()` calls to be placed at top-level module scope",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/global-require.md"
      },
      "fixable": null,
      "name": "@node/global-require",
      "plugin": "@node"
    },
    "@node/handle-callback-err": {
      "type": "suggestion",
      "docs": {
        "description": "require error handling in callbacks",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/handle-callback-err.md"
      },
      "fixable": null,
      "name": "@node/handle-callback-err",
      "plugin": "@node"
    },
    "@node/no-callback-literal": {
      "docs": {
        "description": "enforce Node.js-style error-first callback pattern is followed",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-callback-literal.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "@node/no-callback-literal",
      "plugin": "@node"
    },
    "@node/no-deprecated-api": {
      "docs": {
        "description": "disallow deprecated APIs",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-deprecated-api.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "@node/no-deprecated-api",
      "plugin": "@node"
    },
    "@node/no-exports-assign": {
      "docs": {
        "description": "disallow the assignment to `exports`",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-exports-assign.md"
      },
      "fixable": null,
      "type": "problem",
      "name": "@node/no-exports-assign",
      "plugin": "@node"
    },
    "@node/no-extraneous-import": {
      "docs": {
        "description": "disallow `import` declarations which import extraneous modules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-extraneous-import.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "@node/no-extraneous-import",
      "plugin": "@node"
    },
    "@node/no-extraneous-require": {
      "docs": {
        "description": "disallow `require()` expressions which import extraneous modules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-extraneous-require.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "@node/no-extraneous-require",
      "plugin": "@node"
    },
    "@node/no-missing-import": {
      "docs": {
        "description": "disallow `import` declarations which import non-existence modules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-missing-import.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "@node/no-missing-import",
      "plugin": "@node"
    },
    "@node/no-missing-require": {
      "docs": {
        "description": "disallow `require()` expressions which import non-existence modules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-missing-require.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "@node/no-missing-require",
      "plugin": "@node"
    },
    "@node/no-mixed-requires": {
      "type": "suggestion",
      "docs": {
        "description": "disallow `require` calls to be mixed with regular variable declarations",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-mixed-requires.md"
      },
      "fixable": null,
      "name": "@node/no-mixed-requires",
      "plugin": "@node"
    },
    "@node/no-new-require": {
      "type": "suggestion",
      "docs": {
        "description": "disallow `new` operators with calls to `require`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-new-require.md"
      },
      "fixable": null,
      "name": "@node/no-new-require",
      "plugin": "@node"
    },
    "@node/no-path-concat": {
      "type": "suggestion",
      "docs": {
        "description": "disallow string concatenation with `__dirname` and `__filename`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-path-concat.md"
      },
      "fixable": null,
      "name": "@node/no-path-concat",
      "plugin": "@node"
    },
    "@node/no-process-env": {
      "type": "suggestion",
      "docs": {
        "description": "disallow the use of `process.env`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-process-env.md"
      },
      "fixable": null,
      "name": "@node/no-process-env",
      "plugin": "@node"
    },
    "@node/no-process-exit": {
      "type": "suggestion",
      "docs": {
        "description": "disallow the use of `process.exit()`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-process-exit.md"
      },
      "fixable": null,
      "name": "@node/no-process-exit",
      "plugin": "@node"
    },
    "@node/no-restricted-import": {
      "type": "suggestion",
      "docs": {
        "description": "disallow specified modules when loaded by `import` declarations",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-restricted-import.md"
      },
      "fixable": null,
      "name": "@node/no-restricted-import",
      "plugin": "@node"
    },
    "@node/no-restricted-require": {
      "type": "suggestion",
      "docs": {
        "description": "disallow specified modules when loaded by `require`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-restricted-require.md"
      },
      "fixable": null,
      "name": "@node/no-restricted-require",
      "plugin": "@node"
    },
    "@node/no-sync": {
      "type": "suggestion",
      "docs": {
        "description": "disallow synchronous methods",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-sync.md"
      },
      "fixable": null,
      "name": "@node/no-sync",
      "plugin": "@node"
    },
    "@node/no-unpublished-bin": {
      "docs": {
        "description": "disallow `bin` files that npm ignores",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unpublished-bin.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "@node/no-unpublished-bin",
      "plugin": "@node"
    },
    "@node/no-unpublished-import": {
      "docs": {
        "description": "disallow `import` declarations which import private modules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unpublished-import.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "@node/no-unpublished-import",
      "plugin": "@node"
    },
    "@node/no-unpublished-require": {
      "docs": {
        "description": "disallow `require()` expressions which import private modules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unpublished-require.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "@node/no-unpublished-require",
      "plugin": "@node"
    },
    "@node/no-unsupported-features/es-builtins": {
      "docs": {
        "description": "disallow unsupported ECMAScript built-ins on the specified version",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unsupported-features/es-builtins.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "@node/no-unsupported-features/es-builtins",
      "plugin": "@node"
    },
    "@node/no-unsupported-features/es-syntax": {
      "docs": {
        "description": "disallow unsupported ECMAScript syntax on the specified version",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unsupported-features/es-syntax.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "@node/no-unsupported-features/es-syntax",
      "plugin": "@node"
    },
    "@node/no-unsupported-features/node-builtins": {
      "docs": {
        "description": "disallow unsupported Node.js built-in APIs on the specified version",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unsupported-features/node-builtins.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "@node/no-unsupported-features/node-builtins",
      "plugin": "@node"
    },
    "@node/prefer-global/buffer": {
      "docs": {
        "description": "enforce either `Buffer` or `require(\"buffer\").Buffer`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/buffer.md"
      },
      "type": "suggestion",
      "fixable": null,
      "name": "@node/prefer-global/buffer",
      "plugin": "@node"
    },
    "@node/prefer-global/console": {
      "docs": {
        "description": "enforce either `console` or `require(\"console\")`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/console.md"
      },
      "type": "suggestion",
      "fixable": null,
      "name": "@node/prefer-global/console",
      "plugin": "@node"
    },
    "@node/prefer-global/process": {
      "docs": {
        "description": "enforce either `process` or `require(\"process\")`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/process.md"
      },
      "type": "suggestion",
      "fixable": null,
      "name": "@node/prefer-global/process",
      "plugin": "@node"
    },
    "@node/prefer-global/text-decoder": {
      "docs": {
        "description": "enforce either `TextDecoder` or `require(\"util\").TextDecoder`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/text-decoder.md"
      },
      "type": "suggestion",
      "fixable": null,
      "name": "@node/prefer-global/text-decoder",
      "plugin": "@node"
    },
    "@node/prefer-global/text-encoder": {
      "docs": {
        "description": "enforce either `TextEncoder` or `require(\"util\").TextEncoder`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/text-encoder.md"
      },
      "type": "suggestion",
      "fixable": null,
      "name": "@node/prefer-global/text-encoder",
      "plugin": "@node"
    },
    "@node/prefer-global/url-search-params": {
      "docs": {
        "description": "enforce either `URLSearchParams` or `require(\"url\").URLSearchParams`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/url-search-params.md"
      },
      "type": "suggestion",
      "fixable": null,
      "name": "@node/prefer-global/url-search-params",
      "plugin": "@node"
    },
    "@node/prefer-global/url": {
      "docs": {
        "description": "enforce either `URL` or `require(\"url\").URL`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/url.md"
      },
      "type": "suggestion",
      "fixable": null,
      "name": "@node/prefer-global/url",
      "plugin": "@node"
    },
    "@node/prefer-node-protocol": {
      "docs": {
        "description": "enforce using the `node:` protocol when importing Node.js builtin modules.",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-node-protocol.md"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@node/prefer-node-protocol",
      "plugin": "@node"
    },
    "@node/prefer-promises/dns": {
      "docs": {
        "description": "enforce `require(\"dns\").promises`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-promises/dns.md"
      },
      "fixable": null,
      "type": "suggestion",
      "name": "@node/prefer-promises/dns",
      "plugin": "@node"
    },
    "@node/prefer-promises/fs": {
      "docs": {
        "description": "enforce `require(\"fs\").promises`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-promises/fs.md"
      },
      "fixable": null,
      "type": "suggestion",
      "name": "@node/prefer-promises/fs",
      "plugin": "@node"
    },
    "@node/process-exit-as-throw": {
      "docs": {
        "description": "require that `process.exit()` expressions use the same code path as `throw`",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/process-exit-as-throw.md"
      },
      "type": "problem",
      "fixable": null,
      "supported": false,
      "name": "@node/process-exit-as-throw",
      "plugin": "@node"
    },
    "@node/hashbang": {
      "docs": {
        "description": "require correct usage of hashbang",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/hashbang.md"
      },
      "type": "problem",
      "fixable": "code",
      "name": "@node/hashbang",
      "plugin": "@node"
    },
    "@node/no-hide-core-modules": {
      "docs": {
        "description": "disallow third-party modules which are hiding core modules",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-hide-core-modules.md"
      },
      "type": "problem",
      "deprecated": true,
      "fixable": null,
      "name": "@node/no-hide-core-modules",
      "plugin": "@node"
    },
    "@node/shebang": {
      "docs": {
        "description": "require correct usage of hashbang",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/hashbang.md"
      },
      "type": "problem",
      "fixable": "code",
      "deprecated": true,
      "replacedBy": [
        "n/hashbang"
      ],
      "name": "@node/shebang",
      "plugin": "@node"
    },
    "@arca/curly": {
      "fixable": "code",
      "name": "@arca/curly",
      "plugin": "@arca"
    },
    "@arca/import-absolutes": {
      "fixable": "code",
      "name": "@arca/import-absolutes",
      "plugin": "@arca"
    },
    "@arca/import-align": {
      "fixable": "whitespace",
      "name": "@arca/import-align",
      "plugin": "@arca"
    },
    "@arca/import-ordering": {
      "fixable": "code",
      "name": "@arca/import-ordering",
      "plugin": "@arca"
    },
    "@arca/import-quotes": {
      "fixable": "code",
      "name": "@arca/import-quotes",
      "plugin": "@arca"
    },
    "@arca/jsx-import-react": {
      "fixable": "code",
      "name": "@arca/jsx-import-react",
      "plugin": "@arca"
    },
    "@arca/jsx-longhand-props": {
      "fixable": "code",
      "name": "@arca/jsx-longhand-props",
      "plugin": "@arca"
    },
    "@arca/jsx-no-html-attrs": {
      "fixable": "code",
      "name": "@arca/jsx-no-html-attrs",
      "plugin": "@arca"
    },
    "@arca/jsx-no-string-styles": {
      "fixable": "code",
      "name": "@arca/jsx-no-string-styles",
      "plugin": "@arca"
    },
    "@arca/melted-constructs": {
      "fixable": "code",
      "name": "@arca/melted-constructs",
      "plugin": "@arca"
    },
    "@arca/newline-after-import-section": {
      "fixable": "whitespace",
      "name": "@arca/newline-after-import-section",
      "plugin": "@arca"
    },
    "@arca/no-default-export": {
      "name": "@arca/no-default-export",
      "plugin": "@arca"
    },
    "@comments/disable-enable-pair": {
      "docs": {
        "description": "require a `eslint-enable` comment for every `eslint-disable` comment",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://eslint-community.github.io/eslint-plugin-eslint-comments/rules/disable-enable-pair.html"
      },
      "fixable": null,
      "type": "suggestion",
      "name": "@comments/disable-enable-pair",
      "plugin": "@comments"
    },
    "@comments/no-aggregating-enable": {
      "docs": {
        "description": "disallow a `eslint-enable` comment for multiple `eslint-disable` comments",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://eslint-community.github.io/eslint-plugin-eslint-comments/rules/no-aggregating-enable.html"
      },
      "fixable": null,
      "type": "suggestion",
      "name": "@comments/no-aggregating-enable",
      "plugin": "@comments"
    },
    "@comments/no-duplicate-disable": {
      "docs": {
        "description": "disallow duplicate `eslint-disable` comments",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://eslint-community.github.io/eslint-plugin-eslint-comments/rules/no-duplicate-disable.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@comments/no-duplicate-disable",
      "plugin": "@comments"
    },
    "@comments/no-restricted-disable": {
      "docs": {
        "description": "disallow `eslint-disable` comments about specific rules",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://eslint-community.github.io/eslint-plugin-eslint-comments/rules/no-restricted-disable.html"
      },
      "fixable": null,
      "type": "suggestion",
      "name": "@comments/no-restricted-disable",
      "plugin": "@comments"
    },
    "@comments/no-unlimited-disable": {
      "docs": {
        "description": "disallow `eslint-disable` comments without rule names",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://eslint-community.github.io/eslint-plugin-eslint-comments/rules/no-unlimited-disable.html"
      },
      "fixable": null,
      "type": "suggestion",
      "name": "@comments/no-unlimited-disable",
      "plugin": "@comments"
    },
    "@comments/no-unused-disable": {
      "docs": {
        "description": "disallow unused `eslint-disable` comments",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://eslint-community.github.io/eslint-plugin-eslint-comments/rules/no-unused-disable.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@comments/no-unused-disable",
      "plugin": "@comments"
    },
    "@comments/no-unused-enable": {
      "docs": {
        "description": "disallow unused `eslint-enable` comments",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://eslint-community.github.io/eslint-plugin-eslint-comments/rules/no-unused-enable.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@comments/no-unused-enable",
      "plugin": "@comments"
    },
    "@comments/no-use": {
      "docs": {
        "description": "disallow ESLint directive-comments",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://eslint-community.github.io/eslint-plugin-eslint-comments/rules/no-use.html"
      },
      "fixable": null,
      "type": "suggestion",
      "name": "@comments/no-use",
      "plugin": "@comments"
    },
    "@comments/require-description": {
      "docs": {
        "description": "require include descriptions in ESLint directive-comments",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://eslint-community.github.io/eslint-plugin-eslint-comments/rules/require-description.html"
      },
      "fixable": null,
      "type": "suggestion",
      "name": "@comments/require-description",
      "plugin": "@comments"
    },
    "@es-x/no-accessor-properties": {
      "docs": {
        "description": "disallow accessor properties.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-accessor-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-accessor-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-arbitrary-module-namespace-names": {
      "docs": {
        "description": "disallow arbitrary module namespace names.",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-arbitrary-module-namespace-names.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-arbitrary-module-namespace-names",
      "plugin": "@es-x"
    },
    "@es-x/no-array-from": {
      "docs": {
        "description": "disallow the `Array.from` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-from.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-from",
      "plugin": "@es-x"
    },
    "@es-x/no-array-isarray": {
      "docs": {
        "description": "disallow the `Array.isArray` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-isarray.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-isarray",
      "plugin": "@es-x"
    },
    "@es-x/no-array-of": {
      "docs": {
        "description": "disallow the `Array.of` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-of.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-of",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-at": {
      "docs": {
        "description": "disallow the `Array.prototype.at()` methods.",
        "category": "ES2022",
        "proposal": "relative-indexing-method",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-at.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-at",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-copywithin": {
      "docs": {
        "description": "disallow the `Array.prototype.copyWithin` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-copywithin.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-copywithin",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-entries": {
      "docs": {
        "description": "disallow the `Array.prototype.entries` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-entries.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-entries",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-every": {
      "docs": {
        "description": "disallow the `Array.prototype.every` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-every.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-every",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-fill": {
      "docs": {
        "description": "disallow the `Array.prototype.fill` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-fill.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-fill",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-filter": {
      "docs": {
        "description": "disallow the `Array.prototype.filter` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-filter.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-filter",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-find": {
      "docs": {
        "description": "disallow the `Array.prototype.find` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-find.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-find",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-findindex": {
      "docs": {
        "description": "disallow the `Array.prototype.findIndex` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-findindex.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-findindex",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-findlast-findlastindex": {
      "docs": {
        "description": "disallow the `Array.prototype.{findLast,findLastIndex}` methods.",
        "category": "ES2023",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-findlast-findlastindex.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-findlast-findlastindex",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-flat": {
      "docs": {
        "description": "disallow the `Array.prototype.{flat,flatMap}` method.",
        "category": "ES2019",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-flat.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-flat",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-foreach": {
      "docs": {
        "description": "disallow the `Array.prototype.forEach` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-foreach.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-foreach",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-includes": {
      "docs": {
        "description": "disallow the `Array.prototype.includes` method.",
        "category": "ES2016",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-includes.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-includes",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-indexof": {
      "docs": {
        "description": "disallow the `Array.prototype.indexOf` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-indexof.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-indexof",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-keys": {
      "docs": {
        "description": "disallow the `Array.prototype.keys` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-keys.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-keys",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-lastindexof": {
      "docs": {
        "description": "disallow the `Array.prototype.lastIndexOf` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-lastindexof.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-lastindexof",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-map": {
      "docs": {
        "description": "disallow the `Array.prototype.map` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-map.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-map",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-reduce": {
      "docs": {
        "description": "disallow the `Array.prototype.reduce` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-reduce.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-reduce",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-reduceright": {
      "docs": {
        "description": "disallow the `Array.prototype.reduceRight` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-reduceright.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-reduceright",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-some": {
      "docs": {
        "description": "disallow the `Array.prototype.some` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-some.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-some",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-toreversed": {
      "docs": {
        "description": "disallow the `Array.prototype.toReversed` method.",
        "category": "ES2023",
        "proposal": "change-array-by-copy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-toreversed.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-toreversed",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-tosorted": {
      "docs": {
        "description": "disallow the `Array.prototype.toSorted` method.",
        "category": "ES2023",
        "proposal": "change-array-by-copy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-tosorted.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-tosorted",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-tospliced": {
      "docs": {
        "description": "disallow the `Array.prototype.toSpliced` method.",
        "category": "ES2023",
        "proposal": "change-array-by-copy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-tospliced.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-tospliced",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-values": {
      "docs": {
        "description": "disallow the `Array.prototype.values` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-values.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-values",
      "plugin": "@es-x"
    },
    "@es-x/no-array-prototype-with": {
      "docs": {
        "description": "disallow the `Array.prototype.with` method.",
        "category": "ES2023",
        "proposal": "change-array-by-copy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-with.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-array-prototype-with",
      "plugin": "@es-x"
    },
    "@es-x/no-array-string-prototype-at": {
      "deprecated": true,
      "docs": {
        "description": "disallow the `{Array,String}.prototype.at()` methods.",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-string-prototype-at.html"
      },
      "fixable": null,
      "replacedBy": [
        "no-array-prototype-at",
        "no-string-prototype-at"
      ],
      "type": "problem",
      "name": "@es-x/no-array-string-prototype-at",
      "plugin": "@es-x"
    },
    "@es-x/no-arraybuffer-prototype-transfer": {
      "docs": {
        "description": "disallow the `ArrayBuffer.prototype.transfer` method.",
        "category": "ES2024",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-arraybuffer-prototype-transfer.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-arraybuffer-prototype-transfer",
      "plugin": "@es-x"
    },
    "@es-x/no-arrow-functions": {
      "docs": {
        "description": "disallow arrow function expressions.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-arrow-functions.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "@es-x/no-arrow-functions",
      "plugin": "@es-x"
    },
    "@es-x/no-async-functions": {
      "docs": {
        "description": "disallow async function declarations.",
        "category": "ES2017",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-async-functions.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-async-functions",
      "plugin": "@es-x"
    },
    "@es-x/no-async-iteration": {
      "docs": {
        "description": "disallow async iteration.",
        "category": "ES2018",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-async-iteration.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-async-iteration",
      "plugin": "@es-x"
    },
    "@es-x/no-atomics": {
      "docs": {
        "description": "disallow the `Atomics` class.",
        "category": "ES2017",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-atomics.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-atomics",
      "plugin": "@es-x"
    },
    "@es-x/no-atomics-waitasync": {
      "docs": {
        "description": "disallow the `Atomics.waitAsync` method.",
        "category": "ES2024",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-atomics-waitasync.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-atomics-waitasync",
      "plugin": "@es-x"
    },
    "@es-x/no-bigint": {
      "docs": {
        "description": "disallow `bigint` syntax and built-ins",
        "category": "ES2020",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-bigint.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-bigint",
      "plugin": "@es-x"
    },
    "@es-x/no-binary-numeric-literals": {
      "docs": {
        "description": "disallow binary numeric literals.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-binary-numeric-literals.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-binary-numeric-literals",
      "plugin": "@es-x"
    },
    "@es-x/no-block-scoped-functions": {
      "docs": {
        "description": "disallow block-scoped function declarations.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-block-scoped-functions.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-block-scoped-functions",
      "plugin": "@es-x"
    },
    "@es-x/no-block-scoped-variables": {
      "docs": {
        "description": "disallow block-scoped variable declarations.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-block-scoped-variables.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-block-scoped-variables",
      "plugin": "@es-x"
    },
    "@es-x/no-class-fields": {
      "deprecated": true,
      "docs": {
        "description": "disallow class fields.",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-class-fields.html"
      },
      "fixable": null,
      "replacedBy": [
        "no-class-instance-fields",
        "no-class-private-fields",
        "no-class-private-methods",
        "no-class-static-fields"
      ],
      "type": "problem",
      "name": "@es-x/no-class-fields",
      "plugin": "@es-x"
    },
    "@es-x/no-class-instance-fields": {
      "docs": {
        "description": "disallow instance class fields.",
        "category": "ES2022",
        "proposal": "class-fields",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-class-instance-fields.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-class-instance-fields",
      "plugin": "@es-x"
    },
    "@es-x/no-class-private-fields": {
      "docs": {
        "description": "disallow private class fields.",
        "category": "ES2022",
        "proposal": "class-fields",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-class-private-fields.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-class-private-fields",
      "plugin": "@es-x"
    },
    "@es-x/no-class-private-methods": {
      "docs": {
        "description": "disallow private class methods.",
        "category": "ES2022",
        "proposal": "class-fields",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-class-private-methods.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-class-private-methods",
      "plugin": "@es-x"
    },
    "@es-x/no-class-static-block": {
      "docs": {
        "description": "disallow class static block.",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-class-static-block.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-class-static-block",
      "plugin": "@es-x"
    },
    "@es-x/no-class-static-fields": {
      "docs": {
        "description": "disallow static class fields.",
        "category": "ES2022",
        "proposal": "class-fields",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-class-static-fields.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-class-static-fields",
      "plugin": "@es-x"
    },
    "@es-x/no-classes": {
      "docs": {
        "description": "disallow class declarations.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-classes.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-classes",
      "plugin": "@es-x"
    },
    "@es-x/no-computed-properties": {
      "docs": {
        "description": "disallow computed properties.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-computed-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-computed-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-date-now": {
      "docs": {
        "description": "disallow the `Date.now` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-date-now.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-date-now",
      "plugin": "@es-x"
    },
    "@es-x/no-date-prototype-getyear-setyear": {
      "docs": {
        "description": "disallow the `Date.prototype.{getYear,setYear}` methods.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-date-prototype-getyear-setyear.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-date-prototype-getyear-setyear",
      "plugin": "@es-x"
    },
    "@es-x/no-date-prototype-togmtstring": {
      "docs": {
        "description": "disallow the `Date.prototype.toGMTString` method.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-date-prototype-togmtstring.html"
      },
      "fixable": "code",
      "type": "problem",
      "hasSuggestions": true,
      "name": "@es-x/no-date-prototype-togmtstring",
      "plugin": "@es-x"
    },
    "@es-x/no-default-parameters": {
      "docs": {
        "description": "disallow default parameters.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-default-parameters.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-default-parameters",
      "plugin": "@es-x"
    },
    "@es-x/no-destructuring": {
      "docs": {
        "description": "disallow destructuring.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-destructuring.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-destructuring",
      "plugin": "@es-x"
    },
    "@es-x/no-dynamic-import": {
      "docs": {
        "description": "disallow `import()` syntax",
        "category": "ES2020",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-dynamic-import.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-dynamic-import",
      "plugin": "@es-x"
    },
    "@es-x/no-dynamic-import-options": {
      "docs": {
        "description": "disallow the second parameter to `import()`",
        "category": "ES2025",
        "proposal": "import-attributes",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-dynamic-import-options.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-dynamic-import-options",
      "plugin": "@es-x"
    },
    "@es-x/no-error-cause": {
      "docs": {
        "description": "disallow Error Cause.",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-error-cause.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-error-cause",
      "plugin": "@es-x"
    },
    "@es-x/no-escape-unescape": {
      "docs": {
        "description": "disallow `escape` and `unescape`",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-escape-unescape.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-escape-unescape",
      "plugin": "@es-x"
    },
    "@es-x/no-exponential-operators": {
      "docs": {
        "description": "disallow exponential operators.",
        "category": "ES2016",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-exponential-operators.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-exponential-operators",
      "plugin": "@es-x"
    },
    "@es-x/no-export-ns-from": {
      "docs": {
        "description": "disallow `export * as ns`.",
        "category": "ES2020",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-export-ns-from.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-export-ns-from",
      "plugin": "@es-x"
    },
    "@es-x/no-for-of-loops": {
      "docs": {
        "description": "disallow `for-of` statements.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-for-of-loops.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-for-of-loops",
      "plugin": "@es-x"
    },
    "@es-x/no-function-declarations-in-if-statement-clauses-without-block": {
      "docs": {
        "description": "disallow function declarations in if statement clauses without using blocks.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-function-declarations-in-if-statement-clauses-without-block.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "@es-x/no-function-declarations-in-if-statement-clauses-without-block",
      "plugin": "@es-x"
    },
    "@es-x/no-function-prototype-bind": {
      "docs": {
        "description": "disallow the `Function.prototype.bind` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-function-prototype-bind.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-function-prototype-bind",
      "plugin": "@es-x"
    },
    "@es-x/no-generators": {
      "docs": {
        "description": "disallow generator function declarations.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-generators.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-generators",
      "plugin": "@es-x"
    },
    "@es-x/no-global-this": {
      "docs": {
        "description": "disallow the `globalThis` variable",
        "category": "ES2020",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-global-this.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-global-this",
      "plugin": "@es-x"
    },
    "@es-x/no-hashbang": {
      "docs": {
        "description": "disallow Hashbang comments.",
        "category": "ES2023",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-hashbang.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-hashbang",
      "plugin": "@es-x"
    },
    "@es-x/no-import-attributes": {
      "docs": {
        "description": "disallow Import Attributes.",
        "category": "ES2025",
        "recommended": false,
        "proposal": "import-attributes",
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-import-attributes.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-import-attributes",
      "plugin": "@es-x"
    },
    "@es-x/no-import-meta": {
      "docs": {
        "description": "disallow `import.meta` meta property.",
        "category": "ES2020",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-import-meta.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-import-meta",
      "plugin": "@es-x"
    },
    "@es-x/no-initializers-in-for-in": {
      "docs": {
        "description": "disallow initializers in for-in heads.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-initializers-in-for-in.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-initializers-in-for-in",
      "plugin": "@es-x"
    },
    "@es-x/no-intl-datetimeformat-prototype-formatrange": {
      "docs": {
        "description": "disallow the `Intl.DateTimeFormat.prototype.formatRange` method.",
        "category": "ES2021-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-datetimeformat-prototype-formatrange.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-intl-datetimeformat-prototype-formatrange",
      "plugin": "@es-x"
    },
    "@es-x/no-intl-datetimeformat-prototype-formattoparts": {
      "docs": {
        "description": "disallow the `DateTimeFormat.prototype.formatToParts` method.",
        "category": "ES2017-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-datetimeformat-prototype-formattoparts.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-intl-datetimeformat-prototype-formattoparts",
      "plugin": "@es-x"
    },
    "@es-x/no-intl-displaynames": {
      "docs": {
        "description": "disallow the `Intl.DisplayNames` object.",
        "category": "ES2021-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-displaynames.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-intl-displaynames",
      "plugin": "@es-x"
    },
    "@es-x/no-intl-getcanonicallocales": {
      "docs": {
        "description": "disallow the `Intl.getCanonicalLocales` method.",
        "category": "ES2016-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-getcanonicallocales.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-intl-getcanonicallocales",
      "plugin": "@es-x"
    },
    "@es-x/no-intl-listformat": {
      "docs": {
        "description": "disallow the `Intl.ListFormat` object.",
        "category": "ES2021-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-listformat.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-intl-listformat",
      "plugin": "@es-x"
    },
    "@es-x/no-intl-locale": {
      "docs": {
        "description": "disallow the `Intl.Locale` object.",
        "category": "ES2020-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-locale.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-intl-locale",
      "plugin": "@es-x"
    },
    "@es-x/no-intl-numberformat-prototype-formatrange": {
      "docs": {
        "description": "disallow the `NumberFormat.prototype.formatRange` method.",
        "category": "ES2023-Intl-API",
        "proposal": "intl-numberformat-v3",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-numberformat-prototype-formatrange.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-intl-numberformat-prototype-formatrange",
      "plugin": "@es-x"
    },
    "@es-x/no-intl-numberformat-prototype-formatrangetoparts": {
      "docs": {
        "description": "disallow the `NumberFormat.prototype.formatRangeToParts` method.",
        "category": "ES2023-Intl-API",
        "proposal": "intl-numberformat-v3",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-numberformat-prototype-formatrangetoparts.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-intl-numberformat-prototype-formatrangetoparts",
      "plugin": "@es-x"
    },
    "@es-x/no-intl-numberformat-prototype-formattoparts": {
      "docs": {
        "description": "disallow the `NumberFormat.prototype.formatToParts` method.",
        "category": "ES2018-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-numberformat-prototype-formattoparts.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-intl-numberformat-prototype-formattoparts",
      "plugin": "@es-x"
    },
    "@es-x/no-intl-pluralrules": {
      "docs": {
        "description": "disallow the `Intl.PluralRules` object.",
        "category": "ES2018-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-pluralrules.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-intl-pluralrules",
      "plugin": "@es-x"
    },
    "@es-x/no-intl-pluralrules-prototype-selectrange": {
      "docs": {
        "description": "disallow the `PluralRules.prototype.selectRange` method.",
        "category": "ES2023-Intl-API",
        "proposal": "intl-numberformat-v3",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-pluralrules-prototype-selectrange.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-intl-pluralrules-prototype-selectrange",
      "plugin": "@es-x"
    },
    "@es-x/no-intl-relativetimeformat": {
      "docs": {
        "description": "disallow the `Intl.RelativeTimeFormat` object.",
        "category": "ES2020-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-relativetimeformat.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-intl-relativetimeformat",
      "plugin": "@es-x"
    },
    "@es-x/no-intl-segmenter": {
      "docs": {
        "description": "disallow the `Intl.Segmenter` object.",
        "category": "ES2022-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-segmenter.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-intl-segmenter",
      "plugin": "@es-x"
    },
    "@es-x/no-intl-supportedvaluesof": {
      "docs": {
        "description": "disallow the `Intl.supportedValuesOf` method.",
        "category": "ES2022-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-supportedvaluesof.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-intl-supportedvaluesof",
      "plugin": "@es-x"
    },
    "@es-x/no-iterator": {
      "docs": {
        "description": "disallow the `Iterator` class.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-iterator",
      "plugin": "@es-x"
    },
    "@es-x/no-iterator-prototype-drop": {
      "docs": {
        "description": "disallow the `Iterator.prototype.drop` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-drop.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-iterator-prototype-drop",
      "plugin": "@es-x"
    },
    "@es-x/no-iterator-prototype-every": {
      "docs": {
        "description": "disallow the `Iterator.prototype.every` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-every.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-iterator-prototype-every",
      "plugin": "@es-x"
    },
    "@es-x/no-iterator-prototype-filter": {
      "docs": {
        "description": "disallow the `Iterator.prototype.filter` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-filter.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-iterator-prototype-filter",
      "plugin": "@es-x"
    },
    "@es-x/no-iterator-prototype-find": {
      "docs": {
        "description": "disallow the `Iterator.prototype.find` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-find.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-iterator-prototype-find",
      "plugin": "@es-x"
    },
    "@es-x/no-iterator-prototype-flatmap": {
      "docs": {
        "description": "disallow the `Iterator.prototype.flatMap` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-flatmap.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-iterator-prototype-flatmap",
      "plugin": "@es-x"
    },
    "@es-x/no-iterator-prototype-foreach": {
      "docs": {
        "description": "disallow the `Iterator.prototype.forEach` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-foreach.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-iterator-prototype-foreach",
      "plugin": "@es-x"
    },
    "@es-x/no-iterator-prototype-map": {
      "docs": {
        "description": "disallow the `Iterator.prototype.map` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-map.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-iterator-prototype-map",
      "plugin": "@es-x"
    },
    "@es-x/no-iterator-prototype-reduce": {
      "docs": {
        "description": "disallow the `Iterator.prototype.reduce` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-reduce.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-iterator-prototype-reduce",
      "plugin": "@es-x"
    },
    "@es-x/no-iterator-prototype-some": {
      "docs": {
        "description": "disallow the `Iterator.prototype.some` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-some.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-iterator-prototype-some",
      "plugin": "@es-x"
    },
    "@es-x/no-iterator-prototype-take": {
      "docs": {
        "description": "disallow the `Iterator.prototype.take` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-take.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-iterator-prototype-take",
      "plugin": "@es-x"
    },
    "@es-x/no-iterator-prototype-toarray": {
      "docs": {
        "description": "disallow the `Iterator.prototype.toArray` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-toarray.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-iterator-prototype-toarray",
      "plugin": "@es-x"
    },
    "@es-x/no-json": {
      "docs": {
        "description": "disallow the `JSON` class.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-json.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-json",
      "plugin": "@es-x"
    },
    "@es-x/no-json-modules": {
      "docs": {
        "description": "disallow JSON Modules.",
        "category": "ES2025",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-json-modules.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-json-modules",
      "plugin": "@es-x"
    },
    "@es-x/no-json-superset": {
      "docs": {
        "description": "disallow `\\u2028` and `\\u2029` in string literals.",
        "category": "ES2019",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-json-superset.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "@es-x/no-json-superset",
      "plugin": "@es-x"
    },
    "@es-x/no-keyword-properties": {
      "docs": {
        "description": "disallow reserved words as property names.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-keyword-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-keyword-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-labelled-function-declarations": {
      "docs": {
        "description": "disallow labelled function declarations.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-labelled-function-declarations.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-labelled-function-declarations",
      "plugin": "@es-x"
    },
    "@es-x/no-legacy-object-prototype-accessor-methods": {
      "docs": {
        "description": "disallow legacy `Object.prototype` accessor methods.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-legacy-object-prototype-accessor-methods.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-legacy-object-prototype-accessor-methods",
      "plugin": "@es-x"
    },
    "@es-x/no-logical-assignment-operators": {
      "docs": {
        "description": "disallow logical assignment operators.",
        "category": "ES2021",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-logical-assignment-operators.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "@es-x/no-logical-assignment-operators",
      "plugin": "@es-x"
    },
    "@es-x/no-malformed-template-literals": {
      "docs": {
        "description": "disallow template literals with invalid escape sequences.",
        "category": "ES2018",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-malformed-template-literals.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-malformed-template-literals",
      "plugin": "@es-x"
    },
    "@es-x/no-map": {
      "docs": {
        "description": "disallow the `Map` class.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-map.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-map",
      "plugin": "@es-x"
    },
    "@es-x/no-map-groupby": {
      "docs": {
        "description": "disallow the `Map.groupBy()` method.",
        "category": "ES2024",
        "proposal": "array-grouping",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-map-groupby.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-map-groupby",
      "plugin": "@es-x"
    },
    "@es-x/no-math-acosh": {
      "docs": {
        "description": "disallow the `Math.acosh` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-acosh.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-math-acosh",
      "plugin": "@es-x"
    },
    "@es-x/no-math-asinh": {
      "docs": {
        "description": "disallow the `Math.asinh` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-asinh.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-math-asinh",
      "plugin": "@es-x"
    },
    "@es-x/no-math-atanh": {
      "docs": {
        "description": "disallow the `Math.atanh` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-atanh.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-math-atanh",
      "plugin": "@es-x"
    },
    "@es-x/no-math-cbrt": {
      "docs": {
        "description": "disallow the `Math.cbrt` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-cbrt.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-math-cbrt",
      "plugin": "@es-x"
    },
    "@es-x/no-math-clz32": {
      "docs": {
        "description": "disallow the `Math.clz32` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-clz32.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-math-clz32",
      "plugin": "@es-x"
    },
    "@es-x/no-math-cosh": {
      "docs": {
        "description": "disallow the `Math.cosh` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-cosh.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-math-cosh",
      "plugin": "@es-x"
    },
    "@es-x/no-math-expm1": {
      "docs": {
        "description": "disallow the `Math.expm1` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-expm1.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-math-expm1",
      "plugin": "@es-x"
    },
    "@es-x/no-math-fround": {
      "docs": {
        "description": "disallow the `Math.fround` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-fround.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-math-fround",
      "plugin": "@es-x"
    },
    "@es-x/no-math-hypot": {
      "docs": {
        "description": "disallow the `Math.hypot` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-hypot.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-math-hypot",
      "plugin": "@es-x"
    },
    "@es-x/no-math-imul": {
      "docs": {
        "description": "disallow the `Math.imul` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-imul.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-math-imul",
      "plugin": "@es-x"
    },
    "@es-x/no-math-log1p": {
      "docs": {
        "description": "disallow the `Math.log1p` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-log1p.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-math-log1p",
      "plugin": "@es-x"
    },
    "@es-x/no-math-log2": {
      "docs": {
        "description": "disallow the `Math.log2` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-log2.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-math-log2",
      "plugin": "@es-x"
    },
    "@es-x/no-math-log10": {
      "docs": {
        "description": "disallow the `Math.log10` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-log10.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-math-log10",
      "plugin": "@es-x"
    },
    "@es-x/no-math-sign": {
      "docs": {
        "description": "disallow the `Math.sign` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-sign.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-math-sign",
      "plugin": "@es-x"
    },
    "@es-x/no-math-sinh": {
      "docs": {
        "description": "disallow the `Math.sinh` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-sinh.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-math-sinh",
      "plugin": "@es-x"
    },
    "@es-x/no-math-tanh": {
      "docs": {
        "description": "disallow the `Math.tanh` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-tanh.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-math-tanh",
      "plugin": "@es-x"
    },
    "@es-x/no-math-trunc": {
      "docs": {
        "description": "disallow the `Math.trunc` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-trunc.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-math-trunc",
      "plugin": "@es-x"
    },
    "@es-x/no-modules": {
      "docs": {
        "description": "disallow modules.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-modules.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-modules",
      "plugin": "@es-x"
    },
    "@es-x/no-new-target": {
      "docs": {
        "description": "disallow `new.target` meta property.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-new-target.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-new-target",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-array-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Array` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-array-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-array-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-array-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Array instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-array-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-array-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-arraybuffer-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `ArrayBuffer` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-arraybuffer-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-arraybuffer-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-arraybuffer-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on ArrayBuffer instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-arraybuffer-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-arraybuffer-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-atomics-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Atomics`",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-atomics-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-atomics-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-bigint-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `BigInt` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-bigint-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-bigint-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-bigint-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on BigInt instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-bigint-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-bigint-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-boolean-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Boolean` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-boolean-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-boolean-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-boolean-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Boolean instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-boolean-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-boolean-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-dataview-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `DataView` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-dataview-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-dataview-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-dataview-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on DataView instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-dataview-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-dataview-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-date-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Date` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-date-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-date-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-date-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Date instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-date-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-date-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-finalizationregistry-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `FinalizationRegistry` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-finalizationregistry-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-finalizationregistry-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-finalizationregistry-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on FinalizationRegistry instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-finalizationregistry-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-finalizationregistry-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-function-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Function` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-function-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-function-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-intl-collator-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl.Collator` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-collator-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-intl-collator-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-intl-collator-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Intl.Collator instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-collator-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-intl-collator-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-intl-datetimeformat-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl.DateTimeFormat` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-datetimeformat-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-intl-datetimeformat-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-intl-datetimeformat-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Intl.DateTimeFormat instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-datetimeformat-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-intl-datetimeformat-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-intl-displaynames-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl.DisplayNames` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-displaynames-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-intl-displaynames-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-intl-displaynames-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Intl.DisplayNames instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-displaynames-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-intl-displaynames-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-intl-listformat-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl.ListFormat` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-listformat-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-intl-listformat-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-intl-listformat-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Intl.ListFormat instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-listformat-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-intl-listformat-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-intl-locale-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl.Locale` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-locale-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-intl-locale-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-intl-locale-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Intl.Locale instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-locale-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-intl-locale-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-intl-numberformat-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl.NumberFormat` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-numberformat-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-intl-numberformat-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-intl-numberformat-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Intl.NumberFormat instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-numberformat-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-intl-numberformat-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-intl-pluralrules-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl.PluralRules` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-pluralrules-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-intl-pluralrules-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-intl-pluralrules-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Intl.PluralRules instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-pluralrules-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-intl-pluralrules-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-intl-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl`",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-intl-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-intl-relativetimeformat-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl.RelativeTimeFormat` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-relativetimeformat-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-intl-relativetimeformat-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-intl-relativetimeformat-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Intl.RelativeTimeFormat instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-relativetimeformat-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-intl-relativetimeformat-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-intl-segmenter-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl.Segmenter` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-segmenter-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-intl-segmenter-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-intl-segmenter-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Intl.Segmenter instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-segmenter-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-intl-segmenter-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-iterator-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Iterator` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-iterator-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-iterator-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-iterator-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Iterator instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-iterator-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-iterator-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-json-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `JSON`",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-json-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-json-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-map-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Map` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-map-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-map-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-map-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Map instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-map-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-map-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-math-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Math`",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-math-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-math-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-number-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Number` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-number-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-number-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-number-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Number instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-number-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-number-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-object-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Object` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-object-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-object-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-promise-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Promise` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-promise-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-promise-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-promise-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Promise instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-promise-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-promise-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-proxy-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Proxy` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-proxy-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-proxy-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-reflect-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Reflect`",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-reflect-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-reflect-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-regexp-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `RegExp` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-regexp-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-regexp-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-regexp-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on RegExp instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-regexp-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-regexp-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-set-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Set` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-set-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-set-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-set-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Set instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-set-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-set-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-sharedarraybuffer-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `SharedArrayBuffer` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-sharedarraybuffer-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-sharedarraybuffer-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-sharedarraybuffer-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on SharedArrayBuffer instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-sharedarraybuffer-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-sharedarraybuffer-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-string-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `String` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-string-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-string-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-string-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on String instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-string-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-string-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-symbol-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Symbol` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-symbol-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-symbol-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-symbol-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Symbol instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-symbol-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-symbol-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-typed-array-properties": {
      "docs": {
        "description": "disallow non-standard static properties on typed array class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-typed-array-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-typed-array-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-typed-array-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on typed array instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-typed-array-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-typed-array-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-weakmap-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `WeakMap` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-weakmap-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-weakmap-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-weakmap-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on WeakMap instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-weakmap-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-weakmap-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-weakref-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `WeakRef` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-weakref-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-weakref-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-weakref-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on WeakRef instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-weakref-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-weakref-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-weakset-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `WeakSet` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-weakset-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-weakset-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nonstandard-weakset-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on WeakSet instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-weakset-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nonstandard-weakset-prototype-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-nullish-coalescing-operators": {
      "docs": {
        "description": "disallow nullish coalescing operators.",
        "category": "ES2020",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nullish-coalescing-operators.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-nullish-coalescing-operators",
      "plugin": "@es-x"
    },
    "@es-x/no-number-epsilon": {
      "docs": {
        "description": "disallow the `Number.EPSILON` property.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-number-epsilon.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-number-epsilon",
      "plugin": "@es-x"
    },
    "@es-x/no-number-isfinite": {
      "docs": {
        "description": "disallow the `Number.isFinite` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-number-isfinite.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-number-isfinite",
      "plugin": "@es-x"
    },
    "@es-x/no-number-isinteger": {
      "docs": {
        "description": "disallow the `Number.isInteger` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-number-isinteger.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-number-isinteger",
      "plugin": "@es-x"
    },
    "@es-x/no-number-isnan": {
      "docs": {
        "description": "disallow the `Number.isNaN` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-number-isnan.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-number-isnan",
      "plugin": "@es-x"
    },
    "@es-x/no-number-issafeinteger": {
      "docs": {
        "description": "disallow the `Number.isSafeInteger` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-number-issafeinteger.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-number-issafeinteger",
      "plugin": "@es-x"
    },
    "@es-x/no-number-maxsafeinteger": {
      "docs": {
        "description": "disallow the `Number.MAX_SAFE_INTEGER` property.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-number-maxsafeinteger.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-number-maxsafeinteger",
      "plugin": "@es-x"
    },
    "@es-x/no-number-minsafeinteger": {
      "docs": {
        "description": "disallow the `Number.MIN_SAFE_INTEGER` property.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-number-minsafeinteger.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-number-minsafeinteger",
      "plugin": "@es-x"
    },
    "@es-x/no-number-parsefloat": {
      "docs": {
        "description": "disallow the `Number.parseFloat` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-number-parsefloat.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-number-parsefloat",
      "plugin": "@es-x"
    },
    "@es-x/no-number-parseint": {
      "docs": {
        "description": "disallow the `Number.parseInt` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-number-parseint.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-number-parseint",
      "plugin": "@es-x"
    },
    "@es-x/no-numeric-separators": {
      "docs": {
        "description": "disallow numeric separators.",
        "category": "ES2021",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-numeric-separators.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "@es-x/no-numeric-separators",
      "plugin": "@es-x"
    },
    "@es-x/no-object-assign": {
      "docs": {
        "description": "disallow the `Object.assign` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-assign.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-assign",
      "plugin": "@es-x"
    },
    "@es-x/no-object-create": {
      "docs": {
        "description": "disallow the `Object.create` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-create.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-create",
      "plugin": "@es-x"
    },
    "@es-x/no-object-defineproperties": {
      "docs": {
        "description": "disallow the `Object.defineProperties` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-defineproperties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-defineproperties",
      "plugin": "@es-x"
    },
    "@es-x/no-object-defineproperty": {
      "docs": {
        "description": "disallow the `Object.defineProperty` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-defineproperty.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-defineproperty",
      "plugin": "@es-x"
    },
    "@es-x/no-object-entries": {
      "docs": {
        "description": "disallow the `Object.entries` method.",
        "category": "ES2017",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-entries.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-entries",
      "plugin": "@es-x"
    },
    "@es-x/no-object-freeze": {
      "docs": {
        "description": "disallow the `Object.freeze` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-freeze.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-freeze",
      "plugin": "@es-x"
    },
    "@es-x/no-object-fromentries": {
      "docs": {
        "description": "disallow the `Object.fromEntries` method.",
        "category": "ES2019",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-fromentries.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-fromentries",
      "plugin": "@es-x"
    },
    "@es-x/no-object-getownpropertydescriptor": {
      "docs": {
        "description": "disallow the `Object.getOwnPropertyDescriptor` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-getownpropertydescriptor.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-getownpropertydescriptor",
      "plugin": "@es-x"
    },
    "@es-x/no-object-getownpropertydescriptors": {
      "docs": {
        "description": "disallow the `Object.getOwnPropertyDescriptors` method.",
        "category": "ES2017",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-getownpropertydescriptors.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-getownpropertydescriptors",
      "plugin": "@es-x"
    },
    "@es-x/no-object-getownpropertynames": {
      "docs": {
        "description": "disallow the `Object.getOwnPropertyNames` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-getownpropertynames.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-getownpropertynames",
      "plugin": "@es-x"
    },
    "@es-x/no-object-getownpropertysymbols": {
      "docs": {
        "description": "disallow the `Object.getOwnPropertySymbols` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-getownpropertysymbols.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-getownpropertysymbols",
      "plugin": "@es-x"
    },
    "@es-x/no-object-getprototypeof": {
      "docs": {
        "description": "disallow the `Object.getPrototypeOf` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-getprototypeof.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-getprototypeof",
      "plugin": "@es-x"
    },
    "@es-x/no-object-groupby": {
      "docs": {
        "description": "disallow the `Object.groupBy()` method.",
        "category": "ES2024",
        "proposal": "array-grouping",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-groupby.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-groupby",
      "plugin": "@es-x"
    },
    "@es-x/no-object-hasown": {
      "docs": {
        "description": "disallow the `Object.hasOwn` method.",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-hasown.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-hasown",
      "plugin": "@es-x"
    },
    "@es-x/no-object-is": {
      "docs": {
        "description": "disallow the `Object.is` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-is.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-is",
      "plugin": "@es-x"
    },
    "@es-x/no-object-isextensible": {
      "docs": {
        "description": "disallow the `Object.isExtensible` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-isextensible.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-isextensible",
      "plugin": "@es-x"
    },
    "@es-x/no-object-isfrozen": {
      "docs": {
        "description": "disallow the `Object.isFrozen` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-isfrozen.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-isfrozen",
      "plugin": "@es-x"
    },
    "@es-x/no-object-issealed": {
      "docs": {
        "description": "disallow the `Object.isSealed` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-issealed.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-issealed",
      "plugin": "@es-x"
    },
    "@es-x/no-object-keys": {
      "docs": {
        "description": "disallow the `Object.keys` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-keys.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-keys",
      "plugin": "@es-x"
    },
    "@es-x/no-object-map-groupby": {
      "deprecated": true,
      "docs": {
        "description": "disallow the `{Object,Map}.groupBy()` function (array grouping).",
        "category": "ES2024",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-map-groupby.html"
      },
      "fixable": null,
      "replacedBy": [
        "no-object-groupby",
        "no-map-groupby"
      ],
      "type": "problem",
      "name": "@es-x/no-object-map-groupby",
      "plugin": "@es-x"
    },
    "@es-x/no-object-preventextensions": {
      "docs": {
        "description": "disallow the `Object.preventExtensions` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-preventextensions.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-preventextensions",
      "plugin": "@es-x"
    },
    "@es-x/no-object-seal": {
      "docs": {
        "description": "disallow the `Object.seal` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-seal.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-seal",
      "plugin": "@es-x"
    },
    "@es-x/no-object-setprototypeof": {
      "docs": {
        "description": "disallow the `Object.setPrototypeOf` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-setprototypeof.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-setprototypeof",
      "plugin": "@es-x"
    },
    "@es-x/no-object-super-properties": {
      "docs": {
        "description": "disallow `super` property accesses in object literals.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-super-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-super-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-object-values": {
      "docs": {
        "description": "disallow the `Object.values` method.",
        "category": "ES2017",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-values.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-object-values",
      "plugin": "@es-x"
    },
    "@es-x/no-octal-numeric-literals": {
      "docs": {
        "description": "disallow octal numeric literals.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-octal-numeric-literals.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-octal-numeric-literals",
      "plugin": "@es-x"
    },
    "@es-x/no-optional-catch-binding": {
      "docs": {
        "description": "disallow optional `catch` binding.",
        "category": "ES2019",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-optional-catch-binding.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-optional-catch-binding",
      "plugin": "@es-x"
    },
    "@es-x/no-optional-chaining": {
      "docs": {
        "description": "disallow optional chaining.",
        "category": "ES2020",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-optional-chaining.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-optional-chaining",
      "plugin": "@es-x"
    },
    "@es-x/no-private-in": {
      "docs": {
        "description": "disallow `#x in obj`.",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-private-in.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-private-in",
      "plugin": "@es-x"
    },
    "@es-x/no-promise": {
      "docs": {
        "description": "disallow the `Promise` class.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-promise.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-promise",
      "plugin": "@es-x"
    },
    "@es-x/no-promise-all-settled": {
      "docs": {
        "description": "disallow `Promise.allSettled` function",
        "category": "ES2020",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-promise-all-settled.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-promise-all-settled",
      "plugin": "@es-x"
    },
    "@es-x/no-promise-any": {
      "docs": {
        "description": "disallow `Promise.any` function and `AggregateError` class",
        "category": "ES2021",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-promise-any.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-promise-any",
      "plugin": "@es-x"
    },
    "@es-x/no-promise-prototype-finally": {
      "docs": {
        "description": "disallow the `Promise.prototype.finally` method.",
        "category": "ES2018",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-promise-prototype-finally.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-promise-prototype-finally",
      "plugin": "@es-x"
    },
    "@es-x/no-promise-try": {
      "docs": {
        "description": "disallow `Promise.try` function",
        "category": "ES2025",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-promise-try.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-promise-try",
      "plugin": "@es-x"
    },
    "@es-x/no-promise-withresolvers": {
      "docs": {
        "description": "disallow the `Promise.withResolvers()` method.",
        "category": "ES2024",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-promise-withresolvers.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-promise-withresolvers",
      "plugin": "@es-x"
    },
    "@es-x/no-property-shorthands": {
      "docs": {
        "description": "disallow property shorthands.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-property-shorthands.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "@es-x/no-property-shorthands",
      "plugin": "@es-x"
    },
    "@es-x/no-proxy": {
      "docs": {
        "description": "disallow the `Proxy` class.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-proxy.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-proxy",
      "plugin": "@es-x"
    },
    "@es-x/no-reflect": {
      "docs": {
        "description": "disallow the `Reflect` class.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-reflect.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-reflect",
      "plugin": "@es-x"
    },
    "@es-x/no-regexp-d-flag": {
      "docs": {
        "description": "disallow RegExp `d` flag.",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-d-flag.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-regexp-d-flag",
      "plugin": "@es-x"
    },
    "@es-x/no-regexp-duplicate-named-capturing-groups": {
      "docs": {
        "description": "disallow RegExp duplicate named capturing groups.",
        "category": "ES2025",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-duplicate-named-capturing-groups.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-regexp-duplicate-named-capturing-groups",
      "plugin": "@es-x"
    },
    "@es-x/no-regexp-lookbehind-assertions": {
      "docs": {
        "description": "disallow RegExp lookbehind assertions.",
        "category": "ES2018",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-lookbehind-assertions.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-regexp-lookbehind-assertions",
      "plugin": "@es-x"
    },
    "@es-x/no-regexp-modifiers": {
      "docs": {
        "description": "disallow RegExp Modifiers.",
        "category": "ES2025",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-modifiers.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-regexp-modifiers",
      "plugin": "@es-x"
    },
    "@es-x/no-regexp-named-capture-groups": {
      "docs": {
        "description": "disallow RegExp named capture groups.",
        "category": "ES2018",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-named-capture-groups.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-regexp-named-capture-groups",
      "plugin": "@es-x"
    },
    "@es-x/no-regexp-prototype-compile": {
      "docs": {
        "description": "disallow the `RegExp.prototype.compile` method.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-prototype-compile.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-regexp-prototype-compile",
      "plugin": "@es-x"
    },
    "@es-x/no-regexp-prototype-flags": {
      "docs": {
        "description": "disallow the `RegExp.prototype.flags` property.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-prototype-flags.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-regexp-prototype-flags",
      "plugin": "@es-x"
    },
    "@es-x/no-regexp-s-flag": {
      "docs": {
        "description": "disallow RegExp `s` flag.",
        "category": "ES2018",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-s-flag.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-regexp-s-flag",
      "plugin": "@es-x"
    },
    "@es-x/no-regexp-u-flag": {
      "docs": {
        "description": "disallow RegExp `u` flag.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-u-flag.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-regexp-u-flag",
      "plugin": "@es-x"
    },
    "@es-x/no-regexp-unicode-property-escapes": {
      "docs": {
        "description": "disallow RegExp Unicode property escape sequences.",
        "category": "ES2018",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-unicode-property-escapes.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-regexp-unicode-property-escapes",
      "plugin": "@es-x"
    },
    "@es-x/no-regexp-unicode-property-escapes-2019": {
      "docs": {
        "description": "disallow the new values of RegExp Unicode property escape sequences in ES2019",
        "category": "ES2019",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-unicode-property-escapes-2019.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-regexp-unicode-property-escapes-2019",
      "plugin": "@es-x"
    },
    "@es-x/no-regexp-unicode-property-escapes-2020": {
      "docs": {
        "description": "disallow the new values of RegExp Unicode property escape sequences in ES2020",
        "category": "ES2020",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-unicode-property-escapes-2020.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-regexp-unicode-property-escapes-2020",
      "plugin": "@es-x"
    },
    "@es-x/no-regexp-unicode-property-escapes-2021": {
      "docs": {
        "description": "disallow the new values of RegExp Unicode property escape sequences in ES2021",
        "category": "ES2021",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-unicode-property-escapes-2021.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-regexp-unicode-property-escapes-2021",
      "plugin": "@es-x"
    },
    "@es-x/no-regexp-unicode-property-escapes-2022": {
      "docs": {
        "description": "disallow the new values of RegExp Unicode property escape sequences in ES2022",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-unicode-property-escapes-2022.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-regexp-unicode-property-escapes-2022",
      "plugin": "@es-x"
    },
    "@es-x/no-regexp-unicode-property-escapes-2023": {
      "docs": {
        "description": "disallow the new values of RegExp Unicode property escape sequences in ES2023",
        "category": "ES2023",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-unicode-property-escapes-2023.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-regexp-unicode-property-escapes-2023",
      "plugin": "@es-x"
    },
    "@es-x/no-regexp-v-flag": {
      "docs": {
        "description": "disallow RegExp `v` flag.",
        "category": "ES2024",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-v-flag.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-regexp-v-flag",
      "plugin": "@es-x"
    },
    "@es-x/no-regexp-y-flag": {
      "docs": {
        "description": "disallow RegExp `y` flag.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-y-flag.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-regexp-y-flag",
      "plugin": "@es-x"
    },
    "@es-x/no-resizable-and-growable-arraybuffers": {
      "docs": {
        "description": "disallow resizable and growable ArrayBuffers",
        "category": "ES2024",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-resizable-and-growable-arraybuffers.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-resizable-and-growable-arraybuffers",
      "plugin": "@es-x"
    },
    "@es-x/no-rest-parameters": {
      "docs": {
        "description": "disallow rest parameters.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-rest-parameters.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-rest-parameters",
      "plugin": "@es-x"
    },
    "@es-x/no-rest-spread-properties": {
      "docs": {
        "description": "disallow rest/spread properties.",
        "category": "ES2018",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-rest-spread-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-rest-spread-properties",
      "plugin": "@es-x"
    },
    "@es-x/no-set": {
      "docs": {
        "description": "disallow the `Set` class.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-set.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-set",
      "plugin": "@es-x"
    },
    "@es-x/no-set-prototype-difference": {
      "docs": {
        "description": "disallow the `Set.prototype.difference` method.",
        "category": "ES2025",
        "proposal": "set-methods",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-set-prototype-difference.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-set-prototype-difference",
      "plugin": "@es-x"
    },
    "@es-x/no-set-prototype-intersection": {
      "docs": {
        "description": "disallow the `Set.prototype.intersection` method.",
        "category": "ES2025",
        "proposal": "set-methods",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-set-prototype-intersection.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-set-prototype-intersection",
      "plugin": "@es-x"
    },
    "@es-x/no-set-prototype-isdisjointfrom": {
      "docs": {
        "description": "disallow the `Set.prototype.isDisjointFrom` method.",
        "category": "ES2025",
        "proposal": "set-methods",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-set-prototype-isdisjointfrom.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-set-prototype-isdisjointfrom",
      "plugin": "@es-x"
    },
    "@es-x/no-set-prototype-issubsetof": {
      "docs": {
        "description": "disallow the `Set.prototype.isSubsetOf` method.",
        "category": "ES2025",
        "proposal": "set-methods",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-set-prototype-issubsetof.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-set-prototype-issubsetof",
      "plugin": "@es-x"
    },
    "@es-x/no-set-prototype-issupersetof": {
      "docs": {
        "description": "disallow the `Set.prototype.isSupersetOf` method.",
        "category": "ES2025",
        "proposal": "set-methods",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-set-prototype-issupersetof.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-set-prototype-issupersetof",
      "plugin": "@es-x"
    },
    "@es-x/no-set-prototype-symmetricdifference": {
      "docs": {
        "description": "disallow the `Set.prototype.symmetricDifference` method.",
        "category": "ES2025",
        "proposal": "set-methods",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-set-prototype-symmetricdifference.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-set-prototype-symmetricdifference",
      "plugin": "@es-x"
    },
    "@es-x/no-set-prototype-union": {
      "docs": {
        "description": "disallow the `Set.prototype.union` method.",
        "category": "ES2025",
        "proposal": "set-methods",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-set-prototype-union.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-set-prototype-union",
      "plugin": "@es-x"
    },
    "@es-x/no-shadow-catch-param": {
      "docs": {
        "description": "disallow identifiers from shadowing catch parameter names.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-shadow-catch-param.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-shadow-catch-param",
      "plugin": "@es-x"
    },
    "@es-x/no-shared-array-buffer": {
      "docs": {
        "description": "disallow the `SharedArrayBuffer` class.",
        "category": "ES2017",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-shared-array-buffer.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-shared-array-buffer",
      "plugin": "@es-x"
    },
    "@es-x/no-spread-elements": {
      "docs": {
        "description": "disallow spread elements.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-spread-elements.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-spread-elements",
      "plugin": "@es-x"
    },
    "@es-x/no-string-create-html-methods": {
      "docs": {
        "description": "disallow HTML creation methods of string instances.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-create-html-methods.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-string-create-html-methods",
      "plugin": "@es-x"
    },
    "@es-x/no-string-fromcodepoint": {
      "docs": {
        "description": "disallow the `String.fromCodePoint` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-fromcodepoint.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-string-fromcodepoint",
      "plugin": "@es-x"
    },
    "@es-x/no-string-prototype-at": {
      "docs": {
        "description": "disallow the `String.prototype.at()` methods.",
        "category": "ES2022",
        "proposal": "relative-indexing-method",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-at.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-string-prototype-at",
      "plugin": "@es-x"
    },
    "@es-x/no-string-prototype-codepointat": {
      "docs": {
        "description": "disallow the `String.prototype.codePointAt` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-codepointat.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-string-prototype-codepointat",
      "plugin": "@es-x"
    },
    "@es-x/no-string-prototype-endswith": {
      "docs": {
        "description": "disallow the `String.prototype.endsWith` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-endswith.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-string-prototype-endswith",
      "plugin": "@es-x"
    },
    "@es-x/no-string-prototype-includes": {
      "docs": {
        "description": "disallow the `String.prototype.includes` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-includes.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-string-prototype-includes",
      "plugin": "@es-x"
    },
    "@es-x/no-string-prototype-iswellformed": {
      "docs": {
        "description": "disallow the `String.prototype.isWellFormed` methods.",
        "category": "ES2024",
        "recommended": false,
        "proposal": "is-usv-string",
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-iswellformed.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-string-prototype-iswellformed",
      "plugin": "@es-x"
    },
    "@es-x/no-string-prototype-iswellformed-towellformed": {
      "deprecated": true,
      "docs": {
        "description": "disallow the `String.prototype.{isWellFormed,toWellFormed}` methods.",
        "category": "ES2024",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-iswellformed-towellformed.html"
      },
      "fixable": null,
      "replacedBy": [
        "no-string-prototype-iswellformed",
        "no-string-prototype-towellformed"
      ],
      "type": "problem",
      "name": "@es-x/no-string-prototype-iswellformed-towellformed",
      "plugin": "@es-x"
    },
    "@es-x/no-string-prototype-matchall": {
      "docs": {
        "description": "disallow the `String.prototype.matchAll` method.",
        "category": "ES2020",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-matchall.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-string-prototype-matchall",
      "plugin": "@es-x"
    },
    "@es-x/no-string-prototype-normalize": {
      "docs": {
        "description": "disallow the `String.prototype.normalize` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-normalize.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-string-prototype-normalize",
      "plugin": "@es-x"
    },
    "@es-x/no-string-prototype-padstart-padend": {
      "docs": {
        "description": "disallow the `String.prototype.{padStart,padEnd}` methods.",
        "category": "ES2017",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-padstart-padend.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-string-prototype-padstart-padend",
      "plugin": "@es-x"
    },
    "@es-x/no-string-prototype-repeat": {
      "docs": {
        "description": "disallow the `String.prototype.repeat` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-repeat.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-string-prototype-repeat",
      "plugin": "@es-x"
    },
    "@es-x/no-string-prototype-replaceall": {
      "docs": {
        "description": "disallow the `String.prototype.replaceAll` method.",
        "category": "ES2021",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-replaceall.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-string-prototype-replaceall",
      "plugin": "@es-x"
    },
    "@es-x/no-string-prototype-startswith": {
      "docs": {
        "description": "disallow the `String.prototype.startsWith` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-startswith.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-string-prototype-startswith",
      "plugin": "@es-x"
    },
    "@es-x/no-string-prototype-substr": {
      "docs": {
        "description": "disallow the `String.prototype.substr` method.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-substr.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-string-prototype-substr",
      "plugin": "@es-x"
    },
    "@es-x/no-string-prototype-towellformed": {
      "docs": {
        "description": "disallow the `String.prototype.toWellFormed` methods.",
        "category": "ES2024",
        "recommended": false,
        "proposal": "is-usv-string",
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-towellformed.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-string-prototype-towellformed",
      "plugin": "@es-x"
    },
    "@es-x/no-string-prototype-trim": {
      "docs": {
        "description": "disallow the `String.prototype.trim` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-trim.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-string-prototype-trim",
      "plugin": "@es-x"
    },
    "@es-x/no-string-prototype-trimleft-trimright": {
      "docs": {
        "description": "disallow the `String.prototype.{trimLeft,trimRight}` methods.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-trimleft-trimright.html"
      },
      "fixable": "code",
      "type": "problem",
      "hasSuggestions": true,
      "name": "@es-x/no-string-prototype-trimleft-trimright",
      "plugin": "@es-x"
    },
    "@es-x/no-string-prototype-trimstart-trimend": {
      "docs": {
        "description": "disallow the `String.prototype.{trimStart,trimEnd}` methods.",
        "category": "ES2019",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-trimstart-trimend.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-string-prototype-trimstart-trimend",
      "plugin": "@es-x"
    },
    "@es-x/no-string-raw": {
      "docs": {
        "description": "disallow the `String.raw` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-raw.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-string-raw",
      "plugin": "@es-x"
    },
    "@es-x/no-subclassing-builtins": {
      "docs": {
        "description": "disallow the subclassing of the built-in classes.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-subclassing-builtins.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-subclassing-builtins",
      "plugin": "@es-x"
    },
    "@es-x/no-symbol": {
      "docs": {
        "description": "disallow the `Symbol` class.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-symbol.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-symbol",
      "plugin": "@es-x"
    },
    "@es-x/no-symbol-prototype-description": {
      "docs": {
        "description": "disallow the `Symbol.prototype.description` property.",
        "category": "ES2019",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-symbol-prototype-description.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-symbol-prototype-description",
      "plugin": "@es-x"
    },
    "@es-x/no-template-literals": {
      "docs": {
        "description": "disallow template literals.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-template-literals.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "@es-x/no-template-literals",
      "plugin": "@es-x"
    },
    "@es-x/no-top-level-await": {
      "docs": {
        "description": "disallow top-level `await`.",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-top-level-await.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-top-level-await",
      "plugin": "@es-x"
    },
    "@es-x/no-trailing-commas": {
      "docs": {
        "description": "disallow trailing commas in array/object literals.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-trailing-commas.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-trailing-commas",
      "plugin": "@es-x"
    },
    "@es-x/no-trailing-dynamic-import-commas": {
      "docs": {
        "description": "disallow trailing commas in `import()`",
        "category": "ES2025",
        "proposal": "import-attributes",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-trailing-dynamic-import-commas.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "@es-x/no-trailing-dynamic-import-commas",
      "plugin": "@es-x"
    },
    "@es-x/no-trailing-function-commas": {
      "docs": {
        "description": "disallow trailing commas in parameter/argument lists.",
        "category": "ES2017",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-trailing-function-commas.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "@es-x/no-trailing-function-commas",
      "plugin": "@es-x"
    },
    "@es-x/no-typed-arrays": {
      "docs": {
        "description": "disallow ES2015 typed arrays.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-typed-arrays.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-typed-arrays",
      "plugin": "@es-x"
    },
    "@es-x/no-unicode-codepoint-escapes": {
      "docs": {
        "description": "disallow Unicode code point escape sequences.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-unicode-codepoint-escapes.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "@es-x/no-unicode-codepoint-escapes",
      "plugin": "@es-x"
    },
    "@es-x/no-weak-map": {
      "docs": {
        "description": "disallow the `WeakMap` class.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-weak-map.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-weak-map",
      "plugin": "@es-x"
    },
    "@es-x/no-weak-set": {
      "docs": {
        "description": "disallow the `WeakSet` class.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-weak-set.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-weak-set",
      "plugin": "@es-x"
    },
    "@es-x/no-weakrefs": {
      "docs": {
        "description": "disallow the `WeakRef` and `FinalizationRegistry` class.",
        "category": "ES2021",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-weakrefs.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "@es-x/no-weakrefs",
      "plugin": "@es-x"
    },
    "@import/no-unresolved": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Ensure imports point to a file/module that can be resolved.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-unresolved.md"
      },
      "name": "@import/no-unresolved",
      "plugin": "@import"
    },
    "@import/named": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Ensure named imports correspond to a named export in the remote file.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/named.md"
      },
      "name": "@import/named",
      "plugin": "@import"
    },
    "@import/default": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Ensure a default export is present, given a default import.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/default.md"
      },
      "name": "@import/default",
      "plugin": "@import"
    },
    "@import/namespace": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Ensure imported namespaces contain dereferenced properties as they are dereferenced.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/namespace.md"
      },
      "name": "@import/namespace",
      "plugin": "@import"
    },
    "@import/no-namespace": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Forbid namespace (a.k.a. \"wildcard\" `*`) imports.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-namespace.md"
      },
      "fixable": "code",
      "name": "@import/no-namespace",
      "plugin": "@import"
    },
    "@import/export": {
      "type": "problem",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid any invalid exports, i.e. re-export of the same name.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/export.md"
      },
      "name": "@import/export",
      "plugin": "@import"
    },
    "@import/no-mutable-exports": {
      "type": "suggestion",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid the use of mutable exports with `var` or `let`.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-mutable-exports.md"
      },
      "name": "@import/no-mutable-exports",
      "plugin": "@import"
    },
    "@import/extensions": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Ensure consistent use of file extension within the import path.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/extensions.md"
      },
      "name": "@import/extensions",
      "plugin": "@import"
    },
    "@import/no-restricted-paths": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Enforce which files can be imported in a given folder.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-restricted-paths.md"
      },
      "name": "@import/no-restricted-paths",
      "plugin": "@import"
    },
    "@import/no-internal-modules": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid importing the submodules of other modules.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-internal-modules.md"
      },
      "name": "@import/no-internal-modules",
      "plugin": "@import"
    },
    "@import/group-exports": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Prefer named exports to be grouped together in a single export declaration",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/group-exports.md"
      },
      "name": "@import/group-exports",
      "plugin": "@import"
    },
    "@import/no-relative-packages": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid importing packages through relative paths.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-relative-packages.md"
      },
      "fixable": "code",
      "name": "@import/no-relative-packages",
      "plugin": "@import"
    },
    "@import/no-relative-parent-imports": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid importing modules from parent directories.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-relative-parent-imports.md"
      },
      "name": "@import/no-relative-parent-imports",
      "plugin": "@import"
    },
    "@import/consistent-type-specifier-style": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Enforce or ban the use of inline type-only markers for named imports.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/consistent-type-specifier-style.md"
      },
      "fixable": "code",
      "name": "@import/consistent-type-specifier-style",
      "plugin": "@import"
    },
    "@import/no-self-import": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid a module from importing itself.",
        "recommended": true,
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-self-import.md"
      },
      "name": "@import/no-self-import",
      "plugin": "@import"
    },
    "@import/no-cycle": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid a module from importing a module with a dependency path back to itself.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-cycle.md"
      },
      "name": "@import/no-cycle",
      "plugin": "@import"
    },
    "@import/no-named-default": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Forbid named default exports.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-named-default.md"
      },
      "name": "@import/no-named-default",
      "plugin": "@import"
    },
    "@import/no-named-as-default": {
      "type": "problem",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid use of exported name as identifier of default export.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-named-as-default.md"
      },
      "name": "@import/no-named-as-default",
      "plugin": "@import"
    },
    "@import/no-named-as-default-member": {
      "type": "suggestion",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid use of exported name as property of default export.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-named-as-default-member.md"
      },
      "name": "@import/no-named-as-default-member",
      "plugin": "@import"
    },
    "@import/no-anonymous-default-export": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Forbid anonymous values as default exports.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-anonymous-default-export.md"
      },
      "name": "@import/no-anonymous-default-export",
      "plugin": "@import"
    },
    "@import/no-unused-modules": {
      "type": "suggestion",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid modules without exports, or exports without matching import in another module.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-unused-modules.md"
      },
      "name": "@import/no-unused-modules",
      "plugin": "@import"
    },
    "@import/no-commonjs": {
      "type": "suggestion",
      "docs": {
        "category": "Module systems",
        "description": "Forbid CommonJS `require` calls and `module.exports` or `exports.*`.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-commonjs.md"
      },
      "name": "@import/no-commonjs",
      "plugin": "@import"
    },
    "@import/no-amd": {
      "type": "suggestion",
      "docs": {
        "category": "Module systems",
        "description": "Forbid AMD `require` and `define` calls.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-amd.md"
      },
      "name": "@import/no-amd",
      "plugin": "@import"
    },
    "@import/no-duplicates": {
      "type": "problem",
      "docs": {
        "category": "Style guide",
        "description": "Forbid repeated import of the same module in multiple places.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-duplicates.md"
      },
      "fixable": "code",
      "name": "@import/no-duplicates",
      "plugin": "@import"
    },
    "@import/first": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Ensure all imports appear before other statements.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/first.md"
      },
      "fixable": "code",
      "name": "@import/first",
      "plugin": "@import"
    },
    "@import/max-dependencies": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Enforce the maximum number of dependencies a module can have.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/max-dependencies.md"
      },
      "name": "@import/max-dependencies",
      "plugin": "@import"
    },
    "@import/no-extraneous-dependencies": {
      "type": "problem",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid the use of extraneous packages.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-extraneous-dependencies.md"
      },
      "name": "@import/no-extraneous-dependencies",
      "plugin": "@import"
    },
    "@import/no-absolute-path": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid import of modules using absolute paths.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-absolute-path.md"
      },
      "fixable": "code",
      "name": "@import/no-absolute-path",
      "plugin": "@import"
    },
    "@import/no-nodejs-modules": {
      "type": "suggestion",
      "docs": {
        "category": "Module systems",
        "description": "Forbid Node.js builtin modules.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-nodejs-modules.md"
      },
      "name": "@import/no-nodejs-modules",
      "plugin": "@import"
    },
    "@import/no-webpack-loader-syntax": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid webpack loader syntax in imports.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-webpack-loader-syntax.md"
      },
      "name": "@import/no-webpack-loader-syntax",
      "plugin": "@import"
    },
    "@import/order": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Enforce a convention in module import order.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/order.md"
      },
      "fixable": "code",
      "name": "@import/order",
      "plugin": "@import"
    },
    "@import/newline-after-import": {
      "type": "layout",
      "docs": {
        "category": "Style guide",
        "description": "Enforce a newline after import statements.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/newline-after-import.md"
      },
      "fixable": "whitespace",
      "name": "@import/newline-after-import",
      "plugin": "@import"
    },
    "@import/prefer-default-export": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Prefer a default export if module exports a single name or multiple names.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/prefer-default-export.md"
      },
      "name": "@import/prefer-default-export",
      "plugin": "@import"
    },
    "@import/no-default-export": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Forbid default exports.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-default-export.md"
      },
      "name": "@import/no-default-export",
      "plugin": "@import"
    },
    "@import/no-named-export": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Forbid named exports.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-named-export.md"
      },
      "name": "@import/no-named-export",
      "plugin": "@import"
    },
    "@import/no-dynamic-require": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid `require()` calls with expressions.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-dynamic-require.md"
      },
      "name": "@import/no-dynamic-require",
      "plugin": "@import"
    },
    "@import/unambiguous": {
      "type": "suggestion",
      "docs": {
        "category": "Module systems",
        "description": "Forbid potentially ambiguous parse goal (`script` vs. `module`).",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/unambiguous.md"
      },
      "name": "@import/unambiguous",
      "plugin": "@import"
    },
    "@import/no-unassigned-import": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Forbid unassigned imports",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-unassigned-import.md"
      },
      "name": "@import/no-unassigned-import",
      "plugin": "@import"
    },
    "@import/no-useless-path-segments": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid unnecessary path segments in import and require statements.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-useless-path-segments.md"
      },
      "fixable": "code",
      "name": "@import/no-useless-path-segments",
      "plugin": "@import"
    },
    "@import/dynamic-import-chunkname": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Enforce a leading comment with the webpackChunkName for dynamic imports.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/dynamic-import-chunkname.md"
      },
      "hasSuggestions": true,
      "name": "@import/dynamic-import-chunkname",
      "plugin": "@import"
    },
    "@import/no-import-module-exports": {
      "type": "problem",
      "docs": {
        "category": "Module systems",
        "description": "Forbid import statements with CommonJS module.exports.",
        "recommended": true
      },
      "fixable": "code",
      "name": "@import/no-import-module-exports",
      "plugin": "@import"
    },
    "@import/no-empty-named-blocks": {
      "type": "suggestion",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid empty named import blocks.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-empty-named-blocks.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@import/no-empty-named-blocks",
      "plugin": "@import"
    },
    "@import/exports-last": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Ensure all exports appear after other statements.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/exports-last.md"
      },
      "name": "@import/exports-last",
      "plugin": "@import"
    },
    "@import/no-deprecated": {
      "type": "suggestion",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid imported names marked with `@deprecated` documentation tag.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/v2.31.0/docs/rules/no-deprecated.md"
      },
      "name": "@import/no-deprecated",
      "plugin": "@import"
    },
    "@import/imports-first": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Replaced by `import/first`.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/7b25c1cb95ee18acc1531002fd343e1e6031f9ed/docs/rules/imports-first.md"
      },
      "fixable": "code",
      "deprecated": true,
      "name": "@import/imports-first",
      "plugin": "@import"
    },
    "@simple-import-sort/imports": {
      "type": "layout",
      "fixable": "code",
      "docs": {
        "url": "https://github.com/lydell/eslint-plugin-simple-import-sort#sort-order",
        "description": "Automatically sort imports."
      },
      "name": "@simple-import-sort/imports",
      "plugin": "@simple-import-sort"
    },
    "@simple-import-sort/exports": {
      "type": "layout",
      "fixable": "code",
      "docs": {
        "url": "https://github.com/lydell/eslint-plugin-simple-import-sort#sort-order",
        "description": "Automatically sort exports."
      },
      "name": "@simple-import-sort/exports",
      "plugin": "@simple-import-sort"
    },
    "@mutation/no-mutating-functions": {
      "type": "problem",
      "docs": {
        "description": "disallow unsafe mutating functions such as Object.assign",
        "recommended": "error"
      },
      "name": "@mutation/no-mutating-functions",
      "plugin": "@mutation"
    },
    "@mutation/no-mutating-methods": {
      "type": "problem",
      "docs": {
        "description": "disallow unsafe mutating methods such as sort.",
        "recommended": "error"
      },
      "name": "@mutation/no-mutating-methods",
      "plugin": "@mutation"
    },
    "@mutation/no-mutation": {
      "type": "problem",
      "docs": {
        "description": "disallow mutating operators.",
        "recommended": "error"
      },
      "name": "@mutation/no-mutation",
      "plugin": "@mutation"
    },
    "@perfectionist/sort-variable-declarations": {
      "docs": {
        "url": "https://perfectionist.dev/rules/sort-variable-declarations",
        "description": "Enforce sorted variable declarations.",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-variable-declarations",
      "plugin": "@perfectionist"
    },
    "@perfectionist/sort-intersection-types": {
      "docs": {
        "url": "https://perfectionist.dev/rules/sort-intersection-types",
        "description": "Enforce sorted intersection types.",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-intersection-types",
      "plugin": "@perfectionist"
    },
    "@perfectionist/sort-heritage-clauses": {
      "docs": {
        "url": "https://perfectionist.dev/rules/sort-heritage-clauses",
        "description": "Enforce sorted heritage clauses.",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-heritage-clauses",
      "plugin": "@perfectionist"
    },
    "@perfectionist/sort-array-includes": {
      "docs": {
        "description": "Enforce sorted arrays before include method.",
        "url": "https://perfectionist.dev/rules/sort-array-includes",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-array-includes",
      "plugin": "@perfectionist"
    },
    "@perfectionist/sort-named-imports": {
      "docs": {
        "url": "https://perfectionist.dev/rules/sort-named-imports",
        "description": "Enforce sorted named imports.",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-named-imports",
      "plugin": "@perfectionist"
    },
    "@perfectionist/sort-named-exports": {
      "docs": {
        "url": "https://perfectionist.dev/rules/sort-named-exports",
        "description": "Enforce sorted named exports.",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-named-exports",
      "plugin": "@perfectionist"
    },
    "@perfectionist/sort-object-types": {
      "docs": {
        "url": "https://perfectionist.dev/rules/sort-object-types",
        "description": "Enforce sorted object types.",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-object-types",
      "plugin": "@perfectionist"
    },
    "@perfectionist/sort-union-types": {
      "docs": {
        "url": "https://perfectionist.dev/rules/sort-union-types",
        "description": "Enforce sorted union types.",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-union-types",
      "plugin": "@perfectionist"
    },
    "@perfectionist/sort-switch-case": {
      "docs": {
        "url": "https://perfectionist.dev/rules/sort-switch-case",
        "description": "Enforce sorted switch cases.",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-switch-case",
      "plugin": "@perfectionist"
    },
    "@perfectionist/sort-decorators": {
      "docs": {
        "url": "https://perfectionist.dev/rules/sort-decorators",
        "description": "Enforce sorted decorators.",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-decorators",
      "plugin": "@perfectionist"
    },
    "@perfectionist/sort-interfaces": {
      "docs": {
        "url": "https://perfectionist.dev/rules/sort-interfaces",
        "description": "Enforce sorted interface properties.",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-interfaces",
      "plugin": "@perfectionist"
    },
    "@perfectionist/sort-jsx-props": {
      "docs": {
        "url": "https://perfectionist.dev/rules/sort-jsx-props",
        "description": "Enforce sorted JSX props.",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-jsx-props",
      "plugin": "@perfectionist"
    },
    "@perfectionist/sort-modules": {
      "docs": {
        "url": "https://perfectionist.dev/rules/sort-modules",
        "description": "Enforce sorted modules.",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-modules",
      "plugin": "@perfectionist"
    },
    "@perfectionist/sort-classes": {
      "docs": {
        "url": "https://perfectionist.dev/rules/sort-classes",
        "description": "Enforce sorted classes.",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-classes",
      "plugin": "@perfectionist"
    },
    "@perfectionist/sort-imports": {
      "docs": {
        "url": "https://perfectionist.dev/rules/sort-imports",
        "description": "Enforce sorted imports.",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-imports",
      "plugin": "@perfectionist"
    },
    "@perfectionist/sort-exports": {
      "docs": {
        "url": "https://perfectionist.dev/rules/sort-exports",
        "description": "Enforce sorted exports.",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-exports",
      "plugin": "@perfectionist"
    },
    "@perfectionist/sort-objects": {
      "docs": {
        "url": "https://perfectionist.dev/rules/sort-objects",
        "description": "Enforce sorted objects.",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-objects",
      "plugin": "@perfectionist"
    },
    "@perfectionist/sort-enums": {
      "docs": {
        "url": "https://perfectionist.dev/rules/sort-enums",
        "description": "Enforce sorted TypeScript enums.",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-enums",
      "plugin": "@perfectionist"
    },
    "@perfectionist/sort-sets": {
      "docs": {
        "url": "https://perfectionist.dev/rules/sort-sets",
        "description": "Enforce sorted sets.",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-sets",
      "plugin": "@perfectionist"
    },
    "@perfectionist/sort-maps": {
      "docs": {
        "url": "https://perfectionist.dev/rules/sort-maps",
        "description": "Enforce sorted Map elements.",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@perfectionist/sort-maps",
      "plugin": "@perfectionist"
    },
    "@promise/param-names": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent param names and ordering when creating new promises.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/param-names.md"
      },
      "name": "@promise/param-names",
      "plugin": "@promise"
    },
    "@promise/no-return-wrap": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow wrapping values in `Promise.resolve` or `Promise.reject` when not needed.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/no-return-wrap.md"
      },
      "name": "@promise/no-return-wrap",
      "plugin": "@promise"
    },
    "@promise/always-return": {
      "type": "problem",
      "docs": {
        "description": "Require returning inside each `then()` to create readable and reusable Promise chains.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/always-return.md"
      },
      "name": "@promise/always-return",
      "plugin": "@promise"
    },
    "@promise/catch-or-return": {
      "type": "problem",
      "docs": {
        "description": "Enforce the use of `catch()` on un-returned promises.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/catch-or-return.md"
      },
      "name": "@promise/catch-or-return",
      "plugin": "@promise"
    },
    "@promise/prefer-await-to-callbacks": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `async`/`await` to the callback pattern.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/prefer-await-to-callbacks.md"
      },
      "name": "@promise/prefer-await-to-callbacks",
      "plugin": "@promise"
    },
    "@promise/prefer-await-to-then": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `await` to `then()`/`catch()`/`finally()` for reading Promise values.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/prefer-await-to-then.md"
      },
      "name": "@promise/prefer-await-to-then",
      "plugin": "@promise"
    },
    "@promise/prefer-catch": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `catch` to `then(a, b)`/`then(null, b)` for handling errors.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/prefer-catch.md"
      },
      "fixable": "code",
      "name": "@promise/prefer-catch",
      "plugin": "@promise"
    },
    "@promise/no-native": {
      "type": "suggestion",
      "docs": {
        "description": "Require creating a `Promise` constructor before using it in an ES5 environment.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/no-native.md"
      },
      "name": "@promise/no-native",
      "plugin": "@promise"
    },
    "@promise/no-callback-in-promise": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow calling `cb()` inside of a `then()` (use [util.callbackify][] instead).",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/no-callback-in-promise.md"
      },
      "name": "@promise/no-callback-in-promise",
      "plugin": "@promise"
    },
    "@promise/no-promise-in-callback": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using promises inside of callbacks.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/no-promise-in-callback.md"
      },
      "name": "@promise/no-promise-in-callback",
      "plugin": "@promise"
    },
    "@promise/no-nesting": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow nested `then()` or `catch()` statements.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/no-nesting.md"
      },
      "name": "@promise/no-nesting",
      "plugin": "@promise"
    },
    "@promise/avoid-new": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow creating `new` promises outside of utility libs (use [util.promisify][] instead).",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/avoid-new.md"
      },
      "name": "@promise/avoid-new",
      "plugin": "@promise"
    },
    "@promise/no-new-statics": {
      "type": "problem",
      "docs": {
        "description": "Disallow calling `new` on a Promise static method.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/no-new-statics.md"
      },
      "fixable": "code",
      "name": "@promise/no-new-statics",
      "plugin": "@promise"
    },
    "@promise/no-return-in-finally": {
      "type": "problem",
      "docs": {
        "description": "Disallow return statements in `finally()`.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/no-return-in-finally.md"
      },
      "name": "@promise/no-return-in-finally",
      "plugin": "@promise"
    },
    "@promise/valid-params": {
      "type": "problem",
      "docs": {
        "description": "Enforces the proper number of arguments are passed to Promise functions.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/valid-params.md"
      },
      "name": "@promise/valid-params",
      "plugin": "@promise"
    },
    "@promise/no-multiple-resolved": {
      "type": "problem",
      "docs": {
        "description": "Disallow creating new promises with paths that resolve multiple times.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/no-multiple-resolved.md"
      },
      "name": "@promise/no-multiple-resolved",
      "plugin": "@promise"
    },
    "@promise/spec-only": {
      "type": "problem",
      "docs": {
        "description": "Disallow use of non-standard Promise static methods.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/spec-only.md"
      },
      "name": "@promise/spec-only",
      "plugin": "@promise"
    },
    "@regexp/confusing-quantifier": {
      "docs": {
        "description": "disallow confusing quantifiers",
        "category": "Best Practices",
        "recommended": true,
        "default": "warn",
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/confusing-quantifier.html",
        "ruleId": "regexp/confusing-quantifier",
        "ruleName": "confusing-quantifier"
      },
      "type": "problem",
      "name": "@regexp/confusing-quantifier",
      "plugin": "@regexp"
    },
    "@regexp/control-character-escape": {
      "docs": {
        "description": "enforce consistent escaping of control characters",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/control-character-escape.html",
        "ruleId": "regexp/control-character-escape",
        "ruleName": "control-character-escape"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/control-character-escape",
      "plugin": "@regexp"
    },
    "@regexp/grapheme-string-literal": {
      "docs": {
        "description": "enforce single grapheme in string literal",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/grapheme-string-literal.html",
        "ruleId": "regexp/grapheme-string-literal",
        "ruleName": "grapheme-string-literal"
      },
      "type": "suggestion",
      "name": "@regexp/grapheme-string-literal",
      "plugin": "@regexp"
    },
    "@regexp/hexadecimal-escape": {
      "docs": {
        "description": "enforce consistent usage of hexadecimal escape",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/hexadecimal-escape.html",
        "ruleId": "regexp/hexadecimal-escape",
        "ruleName": "hexadecimal-escape"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/hexadecimal-escape",
      "plugin": "@regexp"
    },
    "@regexp/letter-case": {
      "docs": {
        "description": "enforce into your favorite case",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/letter-case.html",
        "ruleId": "regexp/letter-case",
        "ruleName": "letter-case"
      },
      "fixable": "code",
      "type": "layout",
      "name": "@regexp/letter-case",
      "plugin": "@regexp"
    },
    "@regexp/match-any": {
      "docs": {
        "description": "enforce match any character style",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/match-any.html",
        "ruleId": "regexp/match-any",
        "ruleName": "match-any"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/match-any",
      "plugin": "@regexp"
    },
    "@regexp/negation": {
      "docs": {
        "description": "enforce use of escapes on negation",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/negation.html",
        "ruleId": "regexp/negation",
        "ruleName": "negation"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/negation",
      "plugin": "@regexp"
    },
    "@regexp/no-contradiction-with-assertion": {
      "docs": {
        "description": "disallow elements that contradict assertions",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-contradiction-with-assertion.html",
        "ruleId": "regexp/no-contradiction-with-assertion",
        "ruleName": "no-contradiction-with-assertion"
      },
      "hasSuggestions": true,
      "type": "problem",
      "name": "@regexp/no-contradiction-with-assertion",
      "plugin": "@regexp"
    },
    "@regexp/no-control-character": {
      "docs": {
        "description": "disallow control characters",
        "category": "Possible Errors",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-control-character.html",
        "ruleId": "regexp/no-control-character",
        "ruleName": "no-control-character"
      },
      "type": "suggestion",
      "hasSuggestions": true,
      "name": "@regexp/no-control-character",
      "plugin": "@regexp"
    },
    "@regexp/no-dupe-characters-character-class": {
      "type": "suggestion",
      "docs": {
        "description": "disallow duplicate characters in the RegExp character class",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-dupe-characters-character-class.html",
        "ruleId": "regexp/no-dupe-characters-character-class",
        "ruleName": "no-dupe-characters-character-class"
      },
      "fixable": "code",
      "name": "@regexp/no-dupe-characters-character-class",
      "plugin": "@regexp"
    },
    "@regexp/no-dupe-disjunctions": {
      "docs": {
        "description": "disallow duplicate disjunctions",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-dupe-disjunctions.html",
        "ruleId": "regexp/no-dupe-disjunctions",
        "ruleName": "no-dupe-disjunctions"
      },
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "@regexp/no-dupe-disjunctions",
      "plugin": "@regexp"
    },
    "@regexp/no-empty-alternative": {
      "docs": {
        "description": "disallow alternatives without elements",
        "category": "Possible Errors",
        "recommended": true,
        "default": "warn",
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-alternative.html",
        "ruleId": "regexp/no-empty-alternative",
        "ruleName": "no-empty-alternative"
      },
      "hasSuggestions": true,
      "type": "problem",
      "name": "@regexp/no-empty-alternative",
      "plugin": "@regexp"
    },
    "@regexp/no-empty-capturing-group": {
      "docs": {
        "description": "disallow capturing group that captures empty.",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-capturing-group.html",
        "ruleId": "regexp/no-empty-capturing-group",
        "ruleName": "no-empty-capturing-group"
      },
      "type": "suggestion",
      "name": "@regexp/no-empty-capturing-group",
      "plugin": "@regexp"
    },
    "@regexp/no-empty-character-class": {
      "docs": {
        "description": "disallow character classes that match no characters",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-character-class.html",
        "ruleId": "regexp/no-empty-character-class",
        "ruleName": "no-empty-character-class"
      },
      "type": "suggestion",
      "name": "@regexp/no-empty-character-class",
      "plugin": "@regexp"
    },
    "@regexp/no-empty-group": {
      "docs": {
        "description": "disallow empty group",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-group.html",
        "ruleId": "regexp/no-empty-group",
        "ruleName": "no-empty-group"
      },
      "type": "suggestion",
      "name": "@regexp/no-empty-group",
      "plugin": "@regexp"
    },
    "@regexp/no-empty-lookarounds-assertion": {
      "docs": {
        "description": "disallow empty lookahead assertion or empty lookbehind assertion",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-lookarounds-assertion.html",
        "ruleId": "regexp/no-empty-lookarounds-assertion",
        "ruleName": "no-empty-lookarounds-assertion"
      },
      "type": "suggestion",
      "name": "@regexp/no-empty-lookarounds-assertion",
      "plugin": "@regexp"
    },
    "@regexp/no-empty-string-literal": {
      "docs": {
        "description": "disallow empty string literals in character classes",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-string-literal.html",
        "ruleId": "regexp/no-empty-string-literal",
        "ruleName": "no-empty-string-literal"
      },
      "type": "suggestion",
      "name": "@regexp/no-empty-string-literal",
      "plugin": "@regexp"
    },
    "@regexp/no-escape-backspace": {
      "docs": {
        "description": "disallow escape backspace (`[\\b]`)",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-escape-backspace.html",
        "ruleId": "regexp/no-escape-backspace",
        "ruleName": "no-escape-backspace"
      },
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "@regexp/no-escape-backspace",
      "plugin": "@regexp"
    },
    "@regexp/no-extra-lookaround-assertions": {
      "docs": {
        "description": "disallow unnecessary nested lookaround assertions",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-extra-lookaround-assertions.html",
        "ruleId": "regexp/no-extra-lookaround-assertions",
        "ruleName": "no-extra-lookaround-assertions"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/no-extra-lookaround-assertions",
      "plugin": "@regexp"
    },
    "@regexp/no-invalid-regexp": {
      "docs": {
        "description": "disallow invalid regular expression strings in `RegExp` constructors",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-invalid-regexp.html",
        "ruleId": "regexp/no-invalid-regexp",
        "ruleName": "no-invalid-regexp"
      },
      "type": "problem",
      "name": "@regexp/no-invalid-regexp",
      "plugin": "@regexp"
    },
    "@regexp/no-invisible-character": {
      "docs": {
        "description": "disallow invisible raw character",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-invisible-character.html",
        "ruleId": "regexp/no-invisible-character",
        "ruleName": "no-invisible-character"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/no-invisible-character",
      "plugin": "@regexp"
    },
    "@regexp/no-lazy-ends": {
      "docs": {
        "description": "disallow lazy quantifiers at the end of an expression",
        "category": "Possible Errors",
        "recommended": true,
        "default": "warn",
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-lazy-ends.html",
        "ruleId": "regexp/no-lazy-ends",
        "ruleName": "no-lazy-ends"
      },
      "hasSuggestions": true,
      "type": "problem",
      "name": "@regexp/no-lazy-ends",
      "plugin": "@regexp"
    },
    "@regexp/no-legacy-features": {
      "docs": {
        "description": "disallow legacy RegExp features",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-legacy-features.html",
        "ruleId": "regexp/no-legacy-features",
        "ruleName": "no-legacy-features"
      },
      "type": "suggestion",
      "name": "@regexp/no-legacy-features",
      "plugin": "@regexp"
    },
    "@regexp/no-misleading-capturing-group": {
      "docs": {
        "description": "disallow capturing groups that do not behave as one would expect",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-misleading-capturing-group.html",
        "ruleId": "regexp/no-misleading-capturing-group",
        "ruleName": "no-misleading-capturing-group"
      },
      "hasSuggestions": true,
      "type": "problem",
      "name": "@regexp/no-misleading-capturing-group",
      "plugin": "@regexp"
    },
    "@regexp/no-misleading-unicode-character": {
      "docs": {
        "description": "disallow multi-code-point characters in character classes and quantifiers",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-misleading-unicode-character.html",
        "ruleId": "regexp/no-misleading-unicode-character",
        "ruleName": "no-misleading-unicode-character"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "problem",
      "name": "@regexp/no-misleading-unicode-character",
      "plugin": "@regexp"
    },
    "@regexp/no-missing-g-flag": {
      "docs": {
        "description": "disallow missing `g` flag in patterns used in `String#matchAll` and `String#replaceAll`",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-missing-g-flag.html",
        "ruleId": "regexp/no-missing-g-flag",
        "ruleName": "no-missing-g-flag"
      },
      "fixable": "code",
      "type": "problem",
      "name": "@regexp/no-missing-g-flag",
      "plugin": "@regexp"
    },
    "@regexp/no-non-standard-flag": {
      "docs": {
        "description": "disallow non-standard flags",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-non-standard-flag.html",
        "ruleId": "regexp/no-non-standard-flag",
        "ruleName": "no-non-standard-flag"
      },
      "type": "suggestion",
      "name": "@regexp/no-non-standard-flag",
      "plugin": "@regexp"
    },
    "@regexp/no-obscure-range": {
      "docs": {
        "description": "disallow obscure character ranges",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-obscure-range.html",
        "ruleId": "regexp/no-obscure-range",
        "ruleName": "no-obscure-range"
      },
      "type": "suggestion",
      "name": "@regexp/no-obscure-range",
      "plugin": "@regexp"
    },
    "@regexp/no-octal": {
      "docs": {
        "description": "disallow octal escape sequence",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-octal.html",
        "ruleId": "regexp/no-octal",
        "ruleName": "no-octal"
      },
      "type": "suggestion",
      "hasSuggestions": true,
      "name": "@regexp/no-octal",
      "plugin": "@regexp"
    },
    "@regexp/no-optional-assertion": {
      "docs": {
        "description": "disallow optional assertions",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-optional-assertion.html",
        "ruleId": "regexp/no-optional-assertion",
        "ruleName": "no-optional-assertion"
      },
      "type": "problem",
      "name": "@regexp/no-optional-assertion",
      "plugin": "@regexp"
    },
    "@regexp/no-potentially-useless-backreference": {
      "docs": {
        "description": "disallow backreferences that reference a group that might not be matched",
        "category": "Possible Errors",
        "recommended": true,
        "default": "warn",
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-potentially-useless-backreference.html",
        "ruleId": "regexp/no-potentially-useless-backreference",
        "ruleName": "no-potentially-useless-backreference"
      },
      "type": "problem",
      "name": "@regexp/no-potentially-useless-backreference",
      "plugin": "@regexp"
    },
    "@regexp/no-standalone-backslash": {
      "docs": {
        "description": "disallow standalone backslashes (`\\`)",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-standalone-backslash.html",
        "ruleId": "regexp/no-standalone-backslash",
        "ruleName": "no-standalone-backslash"
      },
      "type": "suggestion",
      "name": "@regexp/no-standalone-backslash",
      "plugin": "@regexp"
    },
    "@regexp/no-super-linear-backtracking": {
      "docs": {
        "description": "disallow exponential and polynomial backtracking",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-super-linear-backtracking.html",
        "ruleId": "regexp/no-super-linear-backtracking",
        "ruleName": "no-super-linear-backtracking"
      },
      "fixable": "code",
      "type": "problem",
      "name": "@regexp/no-super-linear-backtracking",
      "plugin": "@regexp"
    },
    "@regexp/no-super-linear-move": {
      "docs": {
        "description": "disallow quantifiers that cause quadratic moves",
        "category": "Possible Errors",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-super-linear-move.html",
        "ruleId": "regexp/no-super-linear-move",
        "ruleName": "no-super-linear-move"
      },
      "type": "problem",
      "name": "@regexp/no-super-linear-move",
      "plugin": "@regexp"
    },
    "@regexp/no-trivially-nested-assertion": {
      "docs": {
        "description": "disallow trivially nested assertions",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-trivially-nested-assertion.html",
        "ruleId": "regexp/no-trivially-nested-assertion",
        "ruleName": "no-trivially-nested-assertion"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/no-trivially-nested-assertion",
      "plugin": "@regexp"
    },
    "@regexp/no-trivially-nested-quantifier": {
      "docs": {
        "description": "disallow nested quantifiers that can be rewritten as one quantifier",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-trivially-nested-quantifier.html",
        "ruleId": "regexp/no-trivially-nested-quantifier",
        "ruleName": "no-trivially-nested-quantifier"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/no-trivially-nested-quantifier",
      "plugin": "@regexp"
    },
    "@regexp/no-unused-capturing-group": {
      "docs": {
        "description": "disallow unused capturing group",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-unused-capturing-group.html",
        "ruleId": "regexp/no-unused-capturing-group",
        "ruleName": "no-unused-capturing-group"
      },
      "fixable": "code",
      "type": "suggestion",
      "hasSuggestions": true,
      "name": "@regexp/no-unused-capturing-group",
      "plugin": "@regexp"
    },
    "@regexp/no-useless-assertions": {
      "docs": {
        "description": "disallow assertions that are known to always accept (or reject)",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-assertions.html",
        "ruleId": "regexp/no-useless-assertions",
        "ruleName": "no-useless-assertions"
      },
      "hasSuggestions": true,
      "type": "problem",
      "name": "@regexp/no-useless-assertions",
      "plugin": "@regexp"
    },
    "@regexp/no-useless-backreference": {
      "docs": {
        "description": "disallow useless backreferences in regular expressions",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-backreference.html",
        "ruleId": "regexp/no-useless-backreference",
        "ruleName": "no-useless-backreference"
      },
      "type": "suggestion",
      "name": "@regexp/no-useless-backreference",
      "plugin": "@regexp"
    },
    "@regexp/no-useless-character-class": {
      "docs": {
        "description": "disallow character class with one character",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-character-class.html",
        "ruleId": "regexp/no-useless-character-class",
        "ruleName": "no-useless-character-class"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/no-useless-character-class",
      "plugin": "@regexp"
    },
    "@regexp/no-useless-dollar-replacements": {
      "docs": {
        "description": "disallow useless `$` replacements in replacement string",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-dollar-replacements.html",
        "ruleId": "regexp/no-useless-dollar-replacements",
        "ruleName": "no-useless-dollar-replacements"
      },
      "type": "suggestion",
      "name": "@regexp/no-useless-dollar-replacements",
      "plugin": "@regexp"
    },
    "@regexp/no-useless-escape": {
      "docs": {
        "description": "disallow unnecessary escape characters in RegExp",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-escape.html",
        "ruleId": "regexp/no-useless-escape",
        "ruleName": "no-useless-escape"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/no-useless-escape",
      "plugin": "@regexp"
    },
    "@regexp/no-useless-flag": {
      "docs": {
        "description": "disallow unnecessary regex flags",
        "category": "Best Practices",
        "recommended": true,
        "default": "warn",
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-flag.html",
        "ruleId": "regexp/no-useless-flag",
        "ruleName": "no-useless-flag"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/no-useless-flag",
      "plugin": "@regexp"
    },
    "@regexp/no-useless-lazy": {
      "docs": {
        "description": "disallow unnecessarily non-greedy quantifiers",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-lazy.html",
        "ruleId": "regexp/no-useless-lazy",
        "ruleName": "no-useless-lazy"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/no-useless-lazy",
      "plugin": "@regexp"
    },
    "@regexp/no-useless-non-capturing-group": {
      "docs": {
        "description": "disallow unnecessary non-capturing group",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-non-capturing-group.html",
        "ruleId": "regexp/no-useless-non-capturing-group",
        "ruleName": "no-useless-non-capturing-group"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/no-useless-non-capturing-group",
      "plugin": "@regexp"
    },
    "@regexp/no-useless-quantifier": {
      "docs": {
        "description": "disallow quantifiers that can be removed",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-quantifier.html",
        "ruleId": "regexp/no-useless-quantifier",
        "ruleName": "no-useless-quantifier"
      },
      "fixable": "code",
      "type": "suggestion",
      "hasSuggestions": true,
      "name": "@regexp/no-useless-quantifier",
      "plugin": "@regexp"
    },
    "@regexp/no-useless-range": {
      "docs": {
        "description": "disallow unnecessary character ranges",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-range.html",
        "ruleId": "regexp/no-useless-range",
        "ruleName": "no-useless-range"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/no-useless-range",
      "plugin": "@regexp"
    },
    "@regexp/no-useless-set-operand": {
      "docs": {
        "description": "disallow unnecessary elements in expression character classes",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-set-operand.html",
        "ruleId": "regexp/no-useless-set-operand",
        "ruleName": "no-useless-set-operand"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/no-useless-set-operand",
      "plugin": "@regexp"
    },
    "@regexp/no-useless-string-literal": {
      "docs": {
        "description": "disallow string disjunction of single characters in `\\q{...}`",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-string-literal.html",
        "ruleId": "regexp/no-useless-string-literal",
        "ruleName": "no-useless-string-literal"
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@regexp/no-useless-string-literal",
      "plugin": "@regexp"
    },
    "@regexp/no-useless-two-nums-quantifier": {
      "docs": {
        "description": "disallow unnecessary `{n,m}` quantifier",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-two-nums-quantifier.html",
        "ruleId": "regexp/no-useless-two-nums-quantifier",
        "ruleName": "no-useless-two-nums-quantifier"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/no-useless-two-nums-quantifier",
      "plugin": "@regexp"
    },
    "@regexp/no-zero-quantifier": {
      "docs": {
        "description": "disallow quantifiers with a maximum of zero",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-zero-quantifier.html",
        "ruleId": "regexp/no-zero-quantifier",
        "ruleName": "no-zero-quantifier"
      },
      "type": "suggestion",
      "hasSuggestions": true,
      "name": "@regexp/no-zero-quantifier",
      "plugin": "@regexp"
    },
    "@regexp/optimal-lookaround-quantifier": {
      "docs": {
        "description": "disallow the alternatives of lookarounds that end with a non-constant quantifier",
        "category": "Best Practices",
        "recommended": true,
        "default": "warn",
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/optimal-lookaround-quantifier.html",
        "ruleId": "regexp/optimal-lookaround-quantifier",
        "ruleName": "optimal-lookaround-quantifier"
      },
      "hasSuggestions": true,
      "type": "problem",
      "name": "@regexp/optimal-lookaround-quantifier",
      "plugin": "@regexp"
    },
    "@regexp/optimal-quantifier-concatenation": {
      "docs": {
        "description": "require optimal quantifiers for concatenated quantifiers",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/optimal-quantifier-concatenation.html",
        "ruleId": "regexp/optimal-quantifier-concatenation",
        "ruleName": "optimal-quantifier-concatenation"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/optimal-quantifier-concatenation",
      "plugin": "@regexp"
    },
    "@regexp/prefer-character-class": {
      "docs": {
        "description": "enforce using character class",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-character-class.html",
        "ruleId": "regexp/prefer-character-class",
        "ruleName": "prefer-character-class"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/prefer-character-class",
      "plugin": "@regexp"
    },
    "@regexp/prefer-d": {
      "docs": {
        "description": "enforce using `\\d`",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-d.html",
        "ruleId": "regexp/prefer-d",
        "ruleName": "prefer-d"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/prefer-d",
      "plugin": "@regexp"
    },
    "@regexp/prefer-escape-replacement-dollar-char": {
      "docs": {
        "description": "enforces escape of replacement `$` character (`$$`).",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-escape-replacement-dollar-char.html",
        "ruleId": "regexp/prefer-escape-replacement-dollar-char",
        "ruleName": "prefer-escape-replacement-dollar-char"
      },
      "type": "suggestion",
      "name": "@regexp/prefer-escape-replacement-dollar-char",
      "plugin": "@regexp"
    },
    "@regexp/prefer-lookaround": {
      "docs": {
        "description": "prefer lookarounds over capturing group that do not replace",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-lookaround.html",
        "ruleId": "regexp/prefer-lookaround",
        "ruleName": "prefer-lookaround"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/prefer-lookaround",
      "plugin": "@regexp"
    },
    "@regexp/prefer-named-backreference": {
      "docs": {
        "description": "enforce using named backreferences",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-named-backreference.html",
        "ruleId": "regexp/prefer-named-backreference",
        "ruleName": "prefer-named-backreference"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/prefer-named-backreference",
      "plugin": "@regexp"
    },
    "@regexp/prefer-named-capture-group": {
      "docs": {
        "description": "enforce using named capture groups",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-named-capture-group.html",
        "ruleId": "regexp/prefer-named-capture-group",
        "ruleName": "prefer-named-capture-group"
      },
      "type": "suggestion",
      "name": "@regexp/prefer-named-capture-group",
      "plugin": "@regexp"
    },
    "@regexp/prefer-named-replacement": {
      "docs": {
        "description": "enforce using named replacement",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-named-replacement.html",
        "ruleId": "regexp/prefer-named-replacement",
        "ruleName": "prefer-named-replacement"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/prefer-named-replacement",
      "plugin": "@regexp"
    },
    "@regexp/prefer-plus-quantifier": {
      "docs": {
        "description": "enforce using `+` quantifier",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-plus-quantifier.html",
        "ruleId": "regexp/prefer-plus-quantifier",
        "ruleName": "prefer-plus-quantifier"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/prefer-plus-quantifier",
      "plugin": "@regexp"
    },
    "@regexp/prefer-predefined-assertion": {
      "docs": {
        "description": "prefer predefined assertion over equivalent lookarounds",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-predefined-assertion.html",
        "ruleId": "regexp/prefer-predefined-assertion",
        "ruleName": "prefer-predefined-assertion"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/prefer-predefined-assertion",
      "plugin": "@regexp"
    },
    "@regexp/prefer-quantifier": {
      "docs": {
        "description": "enforce using quantifier",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-quantifier.html",
        "ruleId": "regexp/prefer-quantifier",
        "ruleName": "prefer-quantifier"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/prefer-quantifier",
      "plugin": "@regexp"
    },
    "@regexp/prefer-question-quantifier": {
      "docs": {
        "description": "enforce using `?` quantifier",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-question-quantifier.html",
        "ruleId": "regexp/prefer-question-quantifier",
        "ruleName": "prefer-question-quantifier"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/prefer-question-quantifier",
      "plugin": "@regexp"
    },
    "@regexp/prefer-range": {
      "docs": {
        "description": "enforce using character class range",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-range.html",
        "ruleId": "regexp/prefer-range",
        "ruleName": "prefer-range"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/prefer-range",
      "plugin": "@regexp"
    },
    "@regexp/prefer-regexp-exec": {
      "docs": {
        "description": "enforce that `RegExp#exec` is used instead of `String#match` if no global flag is provided",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-regexp-exec.html",
        "ruleId": "regexp/prefer-regexp-exec",
        "ruleName": "prefer-regexp-exec"
      },
      "type": "suggestion",
      "name": "@regexp/prefer-regexp-exec",
      "plugin": "@regexp"
    },
    "@regexp/prefer-regexp-test": {
      "docs": {
        "description": "enforce that `RegExp#test` is used instead of `String#match` and `RegExp#exec`",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-regexp-test.html",
        "ruleId": "regexp/prefer-regexp-test",
        "ruleName": "prefer-regexp-test"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/prefer-regexp-test",
      "plugin": "@regexp"
    },
    "@regexp/prefer-result-array-groups": {
      "docs": {
        "description": "enforce using result array `groups`",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-result-array-groups.html",
        "ruleId": "regexp/prefer-result-array-groups",
        "ruleName": "prefer-result-array-groups"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/prefer-result-array-groups",
      "plugin": "@regexp"
    },
    "@regexp/prefer-set-operation": {
      "docs": {
        "description": "prefer character class set operations instead of lookarounds",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-set-operation.html",
        "ruleId": "regexp/prefer-set-operation",
        "ruleName": "prefer-set-operation"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/prefer-set-operation",
      "plugin": "@regexp"
    },
    "@regexp/prefer-star-quantifier": {
      "docs": {
        "description": "enforce using `*` quantifier",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-star-quantifier.html",
        "ruleId": "regexp/prefer-star-quantifier",
        "ruleName": "prefer-star-quantifier"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/prefer-star-quantifier",
      "plugin": "@regexp"
    },
    "@regexp/prefer-unicode-codepoint-escapes": {
      "docs": {
        "description": "enforce use of unicode codepoint escapes",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-unicode-codepoint-escapes.html",
        "ruleId": "regexp/prefer-unicode-codepoint-escapes",
        "ruleName": "prefer-unicode-codepoint-escapes"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/prefer-unicode-codepoint-escapes",
      "plugin": "@regexp"
    },
    "@regexp/prefer-w": {
      "docs": {
        "description": "enforce using `\\w`",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-w.html",
        "ruleId": "regexp/prefer-w",
        "ruleName": "prefer-w"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/prefer-w",
      "plugin": "@regexp"
    },
    "@regexp/require-unicode-regexp": {
      "docs": {
        "description": "enforce the use of the `u` flag",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/require-unicode-regexp.html",
        "ruleId": "regexp/require-unicode-regexp",
        "ruleName": "require-unicode-regexp"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/require-unicode-regexp",
      "plugin": "@regexp"
    },
    "@regexp/require-unicode-sets-regexp": {
      "docs": {
        "description": "enforce the use of the `v` flag",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/require-unicode-sets-regexp.html",
        "ruleId": "regexp/require-unicode-sets-regexp",
        "ruleName": "require-unicode-sets-regexp"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/require-unicode-sets-regexp",
      "plugin": "@regexp"
    },
    "@regexp/simplify-set-operations": {
      "docs": {
        "description": "require simplify set operations",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/simplify-set-operations.html",
        "ruleId": "regexp/simplify-set-operations",
        "ruleName": "simplify-set-operations"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/simplify-set-operations",
      "plugin": "@regexp"
    },
    "@regexp/sort-alternatives": {
      "docs": {
        "description": "sort alternatives if order doesn't matter",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/sort-alternatives.html",
        "ruleId": "regexp/sort-alternatives",
        "ruleName": "sort-alternatives"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/sort-alternatives",
      "plugin": "@regexp"
    },
    "@regexp/sort-character-class-elements": {
      "docs": {
        "description": "enforces elements order in character class",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/sort-character-class-elements.html",
        "ruleId": "regexp/sort-character-class-elements",
        "ruleName": "sort-character-class-elements"
      },
      "fixable": "code",
      "type": "layout",
      "name": "@regexp/sort-character-class-elements",
      "plugin": "@regexp"
    },
    "@regexp/sort-flags": {
      "docs": {
        "description": "require regex flags to be sorted",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/sort-flags.html",
        "ruleId": "regexp/sort-flags",
        "ruleName": "sort-flags"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/sort-flags",
      "plugin": "@regexp"
    },
    "@regexp/strict": {
      "docs": {
        "description": "disallow not strictly valid regular expressions",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/strict.html",
        "ruleId": "regexp/strict",
        "ruleName": "strict"
      },
      "fixable": "code",
      "type": "suggestion",
      "hasSuggestions": true,
      "name": "@regexp/strict",
      "plugin": "@regexp"
    },
    "@regexp/unicode-escape": {
      "docs": {
        "description": "enforce consistent usage of unicode escape or unicode codepoint escape",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/unicode-escape.html",
        "ruleId": "regexp/unicode-escape",
        "ruleName": "unicode-escape"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/unicode-escape",
      "plugin": "@regexp"
    },
    "@regexp/unicode-property": {
      "docs": {
        "description": "enforce consistent naming of unicode properties",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/unicode-property.html",
        "ruleId": "regexp/unicode-property",
        "ruleName": "unicode-property"
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "@regexp/unicode-property",
      "plugin": "@regexp"
    },
    "@regexp/use-ignore-case": {
      "docs": {
        "description": "use the `i` flag if it simplifies the pattern",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/use-ignore-case.html",
        "ruleId": "regexp/use-ignore-case",
        "ruleName": "use-ignore-case"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "@regexp/use-ignore-case",
      "plugin": "@regexp"
    },
    "@unicorn/better-regex": {
      "type": "suggestion",
      "docs": {
        "description": "Improve regexes by making them shorter, consistent, and safer.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/better-regex.md"
      },
      "fixable": "code",
      "name": "@unicorn/better-regex",
      "plugin": "@unicorn"
    },
    "@unicorn/catch-error-name": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a specific parameter name in catch clauses.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/catch-error-name.md"
      },
      "fixable": "code",
      "name": "@unicorn/catch-error-name",
      "plugin": "@unicorn"
    },
    "@unicorn/consistent-destructuring": {
      "type": "suggestion",
      "docs": {
        "description": "Use destructured variables over properties.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/consistent-destructuring.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/consistent-destructuring",
      "plugin": "@unicorn"
    },
    "@unicorn/consistent-empty-array-spread": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer consistent types when spreading a ternary in an array literal.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/consistent-empty-array-spread.md"
      },
      "fixable": "code",
      "name": "@unicorn/consistent-empty-array-spread",
      "plugin": "@unicorn"
    },
    "@unicorn/consistent-existence-index-check": {
      "type": "problem",
      "docs": {
        "description": "Enforce consistent style for element existence checks with `indexOf()`, `lastIndexOf()`, `findIndex()`, and `findLastIndex()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/consistent-existence-index-check.md"
      },
      "fixable": "code",
      "name": "@unicorn/consistent-existence-index-check",
      "plugin": "@unicorn"
    },
    "@unicorn/consistent-function-scoping": {
      "type": "suggestion",
      "docs": {
        "description": "Move function definitions to the highest possible scope.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/consistent-function-scoping.md"
      },
      "name": "@unicorn/consistent-function-scoping",
      "plugin": "@unicorn"
    },
    "@unicorn/custom-error-definition": {
      "type": "problem",
      "docs": {
        "description": "Enforce correct `Error` subclassing.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/custom-error-definition.md"
      },
      "fixable": "code",
      "name": "@unicorn/custom-error-definition",
      "plugin": "@unicorn"
    },
    "@unicorn/empty-brace-spaces": {
      "type": "layout",
      "docs": {
        "description": "Enforce no spaces between braces.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/empty-brace-spaces.md"
      },
      "fixable": "whitespace",
      "name": "@unicorn/empty-brace-spaces",
      "plugin": "@unicorn"
    },
    "@unicorn/error-message": {
      "type": "problem",
      "docs": {
        "description": "Enforce passing a `message` value when creating a built-in error.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/error-message.md"
      },
      "name": "@unicorn/error-message",
      "plugin": "@unicorn"
    },
    "@unicorn/escape-case": {
      "type": "suggestion",
      "docs": {
        "description": "Require escape sequences to use uppercase values.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/escape-case.md"
      },
      "fixable": "code",
      "name": "@unicorn/escape-case",
      "plugin": "@unicorn"
    },
    "@unicorn/expiring-todo-comments": {
      "type": "suggestion",
      "docs": {
        "description": "Add expiration conditions to TODO comments.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/expiring-todo-comments.md"
      },
      "defaultOptions": [
        {
          "terms": [
            "todo",
            "fixme",
            "xxx"
          ],
          "ignore": [],
          "ignoreDatesOnPullRequests": true,
          "allowWarningComments": true
        }
      ],
      "name": "@unicorn/expiring-todo-comments",
      "plugin": "@unicorn"
    },
    "@unicorn/explicit-length-check": {
      "type": "problem",
      "docs": {
        "description": "Enforce explicitly comparing the `length` or `size` property of a value.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/explicit-length-check.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/explicit-length-check",
      "plugin": "@unicorn"
    },
    "@unicorn/filename-case": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a case style for filenames.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/filename-case.md"
      },
      "name": "@unicorn/filename-case",
      "plugin": "@unicorn"
    },
    "@unicorn/import-style": {
      "type": "problem",
      "docs": {
        "description": "Enforce specific import styles per module.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/import-style.md"
      },
      "name": "@unicorn/import-style",
      "plugin": "@unicorn"
    },
    "@unicorn/new-for-builtins": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of `new` for all builtins, except `String`, `Number`, `Boolean`, `Symbol` and `BigInt`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/new-for-builtins.md"
      },
      "fixable": "code",
      "name": "@unicorn/new-for-builtins",
      "plugin": "@unicorn"
    },
    "@unicorn/no-abusive-eslint-disable": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce specifying rules to disable in `eslint-disable` comments.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-abusive-eslint-disable.md"
      },
      "name": "@unicorn/no-abusive-eslint-disable",
      "plugin": "@unicorn"
    },
    "@unicorn/no-anonymous-default-export": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow anonymous functions and classes as the default export.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-anonymous-default-export.md"
      },
      "hasSuggestions": true,
      "name": "@unicorn/no-anonymous-default-export",
      "plugin": "@unicorn"
    },
    "@unicorn/no-array-callback-reference": {
      "type": "problem",
      "docs": {
        "description": "Prevent passing a function reference directly to iterator methods.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-array-callback-reference.md"
      },
      "hasSuggestions": true,
      "name": "@unicorn/no-array-callback-reference",
      "plugin": "@unicorn"
    },
    "@unicorn/no-array-for-each": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `for…of` over the `forEach` method.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-array-for-each.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/no-array-for-each",
      "plugin": "@unicorn"
    },
    "@unicorn/no-array-method-this-argument": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using the `this` argument in array methods.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-array-method-this-argument.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/no-array-method-this-argument",
      "plugin": "@unicorn"
    },
    "@unicorn/no-array-push-push": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce combining multiple `Array#push()` into one call.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-array-push-push.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/no-array-push-push",
      "plugin": "@unicorn"
    },
    "@unicorn/no-array-reduce": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `Array#reduce()` and `Array#reduceRight()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-array-reduce.md"
      },
      "name": "@unicorn/no-array-reduce",
      "plugin": "@unicorn"
    },
    "@unicorn/no-await-expression-member": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow member access from await expression.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-await-expression-member.md"
      },
      "fixable": "code",
      "name": "@unicorn/no-await-expression-member",
      "plugin": "@unicorn"
    },
    "@unicorn/no-await-in-promise-methods": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using `await` in `Promise` method parameters.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-await-in-promise-methods.md"
      },
      "hasSuggestions": true,
      "name": "@unicorn/no-await-in-promise-methods",
      "plugin": "@unicorn"
    },
    "@unicorn/no-console-spaces": {
      "type": "suggestion",
      "docs": {
        "description": "Do not use leading/trailing space between `console.log` parameters.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-console-spaces.md"
      },
      "fixable": "code",
      "name": "@unicorn/no-console-spaces",
      "plugin": "@unicorn"
    },
    "@unicorn/no-document-cookie": {
      "type": "problem",
      "docs": {
        "description": "Do not use `document.cookie` directly.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-document-cookie.md"
      },
      "name": "@unicorn/no-document-cookie",
      "plugin": "@unicorn"
    },
    "@unicorn/no-empty-file": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow empty files.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-empty-file.md"
      },
      "name": "@unicorn/no-empty-file",
      "plugin": "@unicorn"
    },
    "@unicorn/no-for-loop": {
      "type": "suggestion",
      "docs": {
        "description": "Do not use a `for` loop that can be replaced with a `for-of` loop.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-for-loop.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/no-for-loop",
      "plugin": "@unicorn"
    },
    "@unicorn/no-hex-escape": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of Unicode escapes instead of hexadecimal escapes.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-hex-escape.md"
      },
      "fixable": "code",
      "name": "@unicorn/no-hex-escape",
      "plugin": "@unicorn"
    },
    "@unicorn/no-instanceof-array": {
      "type": "suggestion",
      "docs": {
        "description": "Require `Array.isArray()` instead of `instanceof Array`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-instanceof-array.md"
      },
      "fixable": "code",
      "name": "@unicorn/no-instanceof-array",
      "plugin": "@unicorn"
    },
    "@unicorn/no-invalid-fetch-options": {
      "type": "problem",
      "docs": {
        "description": "Disallow invalid options in `fetch()` and `new Request()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-invalid-fetch-options.md"
      },
      "name": "@unicorn/no-invalid-fetch-options",
      "plugin": "@unicorn"
    },
    "@unicorn/no-invalid-remove-event-listener": {
      "type": "problem",
      "docs": {
        "description": "Prevent calling `EventTarget#removeEventListener()` with the result of an expression.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-invalid-remove-event-listener.md"
      },
      "name": "@unicorn/no-invalid-remove-event-listener",
      "plugin": "@unicorn"
    },
    "@unicorn/no-keyword-prefix": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow identifiers starting with `new` or `class`.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-keyword-prefix.md"
      },
      "name": "@unicorn/no-keyword-prefix",
      "plugin": "@unicorn"
    },
    "@unicorn/no-length-as-slice-end": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using `.length` as the `end` argument of `{Array,String,TypedArray}#slice()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-length-as-slice-end.md"
      },
      "fixable": "code",
      "name": "@unicorn/no-length-as-slice-end",
      "plugin": "@unicorn"
    },
    "@unicorn/no-lonely-if": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `if` statements as the only statement in `if` blocks without `else`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-lonely-if.md"
      },
      "fixable": "code",
      "name": "@unicorn/no-lonely-if",
      "plugin": "@unicorn"
    },
    "@unicorn/no-magic-array-flat-depth": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow a magic number as the `depth` argument in `Array#flat(…).`",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-magic-array-flat-depth.md"
      },
      "name": "@unicorn/no-magic-array-flat-depth",
      "plugin": "@unicorn"
    },
    "@unicorn/no-negated-condition": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow negated conditions.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-negated-condition.md"
      },
      "fixable": "code",
      "name": "@unicorn/no-negated-condition",
      "plugin": "@unicorn"
    },
    "@unicorn/no-negation-in-equality-check": {
      "type": "problem",
      "docs": {
        "description": "Disallow negated expression in equality check.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-negation-in-equality-check.md"
      },
      "hasSuggestions": true,
      "name": "@unicorn/no-negation-in-equality-check",
      "plugin": "@unicorn"
    },
    "@unicorn/no-nested-ternary": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow nested ternary expressions.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-nested-ternary.md"
      },
      "fixable": "code",
      "name": "@unicorn/no-nested-ternary",
      "plugin": "@unicorn"
    },
    "@unicorn/no-new-array": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `new Array()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-new-array.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/no-new-array",
      "plugin": "@unicorn"
    },
    "@unicorn/no-new-buffer": {
      "type": "problem",
      "docs": {
        "description": "Enforce the use of `Buffer.from()` and `Buffer.alloc()` instead of the deprecated `new Buffer()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-new-buffer.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/no-new-buffer",
      "plugin": "@unicorn"
    },
    "@unicorn/no-null": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of the `null` literal.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-null.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/no-null",
      "plugin": "@unicorn"
    },
    "@unicorn/no-object-as-default-parameter": {
      "type": "problem",
      "docs": {
        "description": "Disallow the use of objects as default parameters.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-object-as-default-parameter.md"
      },
      "name": "@unicorn/no-object-as-default-parameter",
      "plugin": "@unicorn"
    },
    "@unicorn/no-process-exit": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `process.exit()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-process-exit.md"
      },
      "name": "@unicorn/no-process-exit",
      "plugin": "@unicorn"
    },
    "@unicorn/no-single-promise-in-promise-methods": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow passing single-element arrays to `Promise` methods.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-single-promise-in-promise-methods.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/no-single-promise-in-promise-methods",
      "plugin": "@unicorn"
    },
    "@unicorn/no-static-only-class": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow classes that only have static members.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-static-only-class.md"
      },
      "fixable": "code",
      "name": "@unicorn/no-static-only-class",
      "plugin": "@unicorn"
    },
    "@unicorn/no-thenable": {
      "type": "problem",
      "docs": {
        "description": "Disallow `then` property.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-thenable.md"
      },
      "name": "@unicorn/no-thenable",
      "plugin": "@unicorn"
    },
    "@unicorn/no-this-assignment": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow assigning `this` to a variable.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-this-assignment.md"
      },
      "name": "@unicorn/no-this-assignment",
      "plugin": "@unicorn"
    },
    "@unicorn/no-typeof-undefined": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow comparing `undefined` using `typeof`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-typeof-undefined.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/no-typeof-undefined",
      "plugin": "@unicorn"
    },
    "@unicorn/no-unnecessary-await": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow awaiting non-promise values.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-unnecessary-await.md"
      },
      "fixable": "code",
      "name": "@unicorn/no-unnecessary-await",
      "plugin": "@unicorn"
    },
    "@unicorn/no-unnecessary-polyfills": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of built-in methods instead of unnecessary polyfills.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-unnecessary-polyfills.md"
      },
      "name": "@unicorn/no-unnecessary-polyfills",
      "plugin": "@unicorn"
    },
    "@unicorn/no-unreadable-array-destructuring": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unreadable array destructuring.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-unreadable-array-destructuring.md"
      },
      "fixable": "code",
      "name": "@unicorn/no-unreadable-array-destructuring",
      "plugin": "@unicorn"
    },
    "@unicorn/no-unreadable-iife": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unreadable IIFEs.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-unreadable-iife.md"
      },
      "hasSuggestions": false,
      "name": "@unicorn/no-unreadable-iife",
      "plugin": "@unicorn"
    },
    "@unicorn/no-unused-properties": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unused object properties.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-unused-properties.md"
      },
      "name": "@unicorn/no-unused-properties",
      "plugin": "@unicorn"
    },
    "@unicorn/no-useless-fallback-in-spread": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow useless fallback when spreading in object literals.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-useless-fallback-in-spread.md"
      },
      "fixable": "code",
      "name": "@unicorn/no-useless-fallback-in-spread",
      "plugin": "@unicorn"
    },
    "@unicorn/no-useless-length-check": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow useless array length check.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-useless-length-check.md"
      },
      "fixable": "code",
      "name": "@unicorn/no-useless-length-check",
      "plugin": "@unicorn"
    },
    "@unicorn/no-useless-promise-resolve-reject": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow returning/yielding `Promise.resolve/reject()` in async functions or promise callbacks",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-useless-promise-resolve-reject.md"
      },
      "fixable": "code",
      "name": "@unicorn/no-useless-promise-resolve-reject",
      "plugin": "@unicorn"
    },
    "@unicorn/no-useless-spread": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary spread.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-useless-spread.md"
      },
      "fixable": "code",
      "name": "@unicorn/no-useless-spread",
      "plugin": "@unicorn"
    },
    "@unicorn/no-useless-switch-case": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow useless case in switch statements.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-useless-switch-case.md"
      },
      "hasSuggestions": true,
      "name": "@unicorn/no-useless-switch-case",
      "plugin": "@unicorn"
    },
    "@unicorn/no-useless-undefined": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow useless `undefined`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-useless-undefined.md"
      },
      "fixable": "code",
      "name": "@unicorn/no-useless-undefined",
      "plugin": "@unicorn"
    },
    "@unicorn/no-zero-fractions": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow number literals with zero fractions or dangling dots.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/no-zero-fractions.md"
      },
      "fixable": "code",
      "name": "@unicorn/no-zero-fractions",
      "plugin": "@unicorn"
    },
    "@unicorn/number-literal-case": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce proper case for numeric literals.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/number-literal-case.md"
      },
      "fixable": "code",
      "name": "@unicorn/number-literal-case",
      "plugin": "@unicorn"
    },
    "@unicorn/numeric-separators-style": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the style of numeric separators by correctly grouping digits.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/numeric-separators-style.md"
      },
      "fixable": "code",
      "name": "@unicorn/numeric-separators-style",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-add-event-listener": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.addEventListener()` and `.removeEventListener()` over `on`-functions.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-add-event-listener.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-add-event-listener",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-array-find": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.find(…)` and `.findLast(…)` over the first or last element from `.filter(…)`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-array-find.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/prefer-array-find",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-array-flat-map": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.flatMap(…)` over `.map(…).flat()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-array-flat-map.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-array-flat-map",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-array-flat": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Array#flat()` over legacy techniques to flatten arrays.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-array-flat.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-array-flat",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-array-index-of": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Array#{indexOf,lastIndexOf}()` over `Array#{findIndex,findLastIndex}()` when looking for the index of an item.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-array-index-of.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/prefer-array-index-of",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-array-some": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.some(…)` over `.filter(…).length` check and `.{find,findLast,findIndex,findLastIndex}(…)`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-array-some.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/prefer-array-some",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-at": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.at()` method for index access and `String#charAt()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-at.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/prefer-at",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-blob-reading-methods": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Blob#arrayBuffer()` over `FileReader#readAsArrayBuffer(…)` and `Blob#text()` over `FileReader#readAsText(…)`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-blob-reading-methods.md"
      },
      "name": "@unicorn/prefer-blob-reading-methods",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-code-point": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `String#codePointAt(…)` over `String#charCodeAt(…)` and `String.fromCodePoint(…)` over `String.fromCharCode(…)`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-code-point.md"
      },
      "hasSuggestions": true,
      "name": "@unicorn/prefer-code-point",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-date-now": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Date.now()` to get the number of milliseconds since the Unix Epoch.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-date-now.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-date-now",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-default-parameters": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer default parameters over reassignment.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-default-parameters.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/prefer-default-parameters",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-dom-node-append": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Node#append()` over `Node#appendChild()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-dom-node-append.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-dom-node-append",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-dom-node-dataset": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using `.dataset` on DOM elements over calling attribute methods.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-dom-node-dataset.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-dom-node-dataset",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-dom-node-remove": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `childNode.remove()` over `parentNode.removeChild(childNode)`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-dom-node-remove.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/prefer-dom-node-remove",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-dom-node-text-content": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.textContent` over `.innerText`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-dom-node-text-content.md"
      },
      "hasSuggestions": true,
      "name": "@unicorn/prefer-dom-node-text-content",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-event-target": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `EventTarget` over `EventEmitter`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-event-target.md"
      },
      "name": "@unicorn/prefer-event-target",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-export-from": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `export…from` when re-exporting.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-export-from.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/prefer-export-from",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-global-this": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `globalThis` over `window`, `self`, and `global`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-global-this.md"
      },
      "fixable": "code",
      "hasSuggestions": false,
      "name": "@unicorn/prefer-global-this",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-includes": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.includes()` over `.indexOf()`, `.lastIndexOf()`, and `Array#some()` when checking for existence or non-existence.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-includes.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/prefer-includes",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-json-parse-buffer": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer reading a JSON file as a buffer.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-json-parse-buffer.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-json-parse-buffer",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-keyboard-event-key": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `KeyboardEvent#key` over `KeyboardEvent#keyCode`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-keyboard-event-key.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-keyboard-event-key",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-logical-operator-over-ternary": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using a logical operator over a ternary.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-logical-operator-over-ternary.md"
      },
      "hasSuggestions": true,
      "name": "@unicorn/prefer-logical-operator-over-ternary",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-math-min-max": {
      "type": "problem",
      "docs": {
        "description": "Prefer `Math.min()` and `Math.max()` over ternaries for simple comparisons.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-math-min-max.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-math-min-max",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-math-trunc": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of `Math.trunc` instead of bitwise operators.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-math-trunc.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/prefer-math-trunc",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-modern-dom-apis": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.before()` over `.insertBefore()`, `.replaceWith()` over `.replaceChild()`, prefer one of `.before()`, `.after()`, `.append()` or `.prepend()` over `insertAdjacentText()` and `insertAdjacentElement()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-modern-dom-apis.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-modern-dom-apis",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-modern-math-apis": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer modern `Math` APIs over legacy patterns.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-modern-math-apis.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-modern-math-apis",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-module": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer JavaScript modules (ESM) over CommonJS.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-module.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/prefer-module",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-native-coercion-functions": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using `String`, `Number`, `BigInt`, `Boolean`, and `Symbol` directly.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-native-coercion-functions.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-native-coercion-functions",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-negative-index": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer negative index over `.length - index` when possible.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-negative-index.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-negative-index",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-node-protocol": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using the `node:` protocol when importing Node.js builtin modules.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-node-protocol.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-node-protocol",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-number-properties": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Number` static properties over global ones.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-number-properties.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/prefer-number-properties",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-object-from-entries": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using `Object.fromEntries(…)` to transform a list of key-value pairs into an object.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-object-from-entries.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-object-from-entries",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-optional-catch-binding": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer omitting the `catch` binding parameter.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-optional-catch-binding.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-optional-catch-binding",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-prototype-methods": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer borrowing methods from the prototype instead of the instance.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-prototype-methods.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-prototype-methods",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-query-selector": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.querySelector()` over `.getElementById()`, `.querySelectorAll()` over `.getElementsByClassName()` and `.getElementsByTagName()` and `.getElementsByName()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-query-selector.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-query-selector",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-reflect-apply": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Reflect.apply()` over `Function#apply()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-reflect-apply.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-reflect-apply",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-regexp-test": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `RegExp#test()` over `String#match()` and `RegExp#exec()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-regexp-test.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/prefer-regexp-test",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-set-has": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Set#has()` over `Array#includes()` when checking for existence or non-existence.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-set-has.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/prefer-set-has",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-set-size": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using `Set#size` instead of `Array#length`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-set-size.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-set-size",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-spread": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer the spread operator over `Array.from(…)`, `Array#concat(…)`, `Array#{slice,toSpliced}()` and `String#split('')`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-spread.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/prefer-spread",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-string-raw": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using the `String.raw` tag to avoid escaping `\\`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-string-raw.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-string-raw",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-string-replace-all": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `String#replaceAll()` over regex searches with the global flag.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-string-replace-all.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-string-replace-all",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-string-slice": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `String#slice()` over `String#substr()` and `String#substring()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-string-slice.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-string-slice",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-string-starts-ends-with": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `String#startsWith()` & `String#endsWith()` over `RegExp#test()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-string-starts-ends-with.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/prefer-string-starts-ends-with",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-string-trim-start-end": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `String#trimStart()` / `String#trimEnd()` over `String#trimLeft()` / `String#trimRight()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-string-trim-start-end.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-string-trim-start-end",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-structured-clone": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using `structuredClone` to create a deep clone.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-structured-clone.md"
      },
      "hasSuggestions": true,
      "name": "@unicorn/prefer-structured-clone",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-switch": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `switch` over multiple `else-if`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-switch.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-switch",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-ternary": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer ternary expressions over simple `if-else` statements.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-ternary.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-ternary",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-top-level-await": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer top-level await over top-level promises and async function calls.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-top-level-await.md"
      },
      "hasSuggestions": true,
      "name": "@unicorn/prefer-top-level-await",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-type-error": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce throwing `TypeError` in type checking conditions.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prefer-type-error.md"
      },
      "fixable": "code",
      "name": "@unicorn/prefer-type-error",
      "plugin": "@unicorn"
    },
    "@unicorn/prevent-abbreviations": {
      "type": "suggestion",
      "docs": {
        "description": "Prevent abbreviations.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/prevent-abbreviations.md"
      },
      "fixable": "code",
      "name": "@unicorn/prevent-abbreviations",
      "plugin": "@unicorn"
    },
    "@unicorn/relative-url-style": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent relative URL style.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/relative-url-style.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/relative-url-style",
      "plugin": "@unicorn"
    },
    "@unicorn/require-array-join-separator": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using the separator argument with `Array#join()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/require-array-join-separator.md"
      },
      "fixable": "code",
      "name": "@unicorn/require-array-join-separator",
      "plugin": "@unicorn"
    },
    "@unicorn/require-number-to-fixed-digits-argument": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using the digits argument with `Number#toFixed()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/require-number-to-fixed-digits-argument.md"
      },
      "fixable": "code",
      "name": "@unicorn/require-number-to-fixed-digits-argument",
      "plugin": "@unicorn"
    },
    "@unicorn/require-post-message-target-origin": {
      "type": "problem",
      "docs": {
        "description": "Enforce using the `targetOrigin` argument with `window.postMessage()`.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/require-post-message-target-origin.md"
      },
      "hasSuggestions": true,
      "name": "@unicorn/require-post-message-target-origin",
      "plugin": "@unicorn"
    },
    "@unicorn/string-content": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce better string content.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/string-content.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/string-content",
      "plugin": "@unicorn"
    },
    "@unicorn/switch-case-braces": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent brace style for `case` clauses.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/switch-case-braces.md"
      },
      "fixable": "code",
      "name": "@unicorn/switch-case-braces",
      "plugin": "@unicorn"
    },
    "@unicorn/template-indent": {
      "type": "suggestion",
      "docs": {
        "description": "Fix whitespace-insensitive template indentation.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/template-indent.md"
      },
      "fixable": "code",
      "name": "@unicorn/template-indent",
      "plugin": "@unicorn"
    },
    "@unicorn/text-encoding-identifier-case": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent case for text encoding identifiers.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/text-encoding-identifier-case.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@unicorn/text-encoding-identifier-case",
      "plugin": "@unicorn"
    },
    "@unicorn/throw-new-error": {
      "type": "suggestion",
      "docs": {
        "description": "Require `new` when creating an error.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/rules/throw-new-error.md"
      },
      "fixable": "code",
      "name": "@unicorn/throw-new-error",
      "plugin": "@unicorn"
    },
    "@unicorn/import-index": {
      "docs": {
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/deprecated-rules.md#import-index"
      },
      "deprecated": true,
      "replacedBy": [],
      "name": "@unicorn/import-index",
      "plugin": "@unicorn"
    },
    "@unicorn/no-array-instanceof": {
      "docs": {
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/deprecated-rules.md#no-array-instanceof"
      },
      "deprecated": true,
      "replacedBy": [
        "unicorn/no-instanceof-array"
      ],
      "name": "@unicorn/no-array-instanceof",
      "plugin": "@unicorn"
    },
    "@unicorn/no-fn-reference-in-iterator": {
      "docs": {
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/deprecated-rules.md#no-fn-reference-in-iterator"
      },
      "deprecated": true,
      "replacedBy": [
        "unicorn/no-array-callback-reference"
      ],
      "name": "@unicorn/no-fn-reference-in-iterator",
      "plugin": "@unicorn"
    },
    "@unicorn/no-reduce": {
      "docs": {
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/deprecated-rules.md#no-reduce"
      },
      "deprecated": true,
      "replacedBy": [
        "unicorn/no-array-reduce"
      ],
      "name": "@unicorn/no-reduce",
      "plugin": "@unicorn"
    },
    "@unicorn/no-unsafe-regex": {
      "docs": {
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/deprecated-rules.md#no-unsafe-regex"
      },
      "deprecated": true,
      "replacedBy": [],
      "name": "@unicorn/no-unsafe-regex",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-dataset": {
      "docs": {
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/deprecated-rules.md#prefer-dataset"
      },
      "deprecated": true,
      "replacedBy": [
        "unicorn/prefer-dom-node-dataset"
      ],
      "name": "@unicorn/prefer-dataset",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-event-key": {
      "docs": {
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/deprecated-rules.md#prefer-event-key"
      },
      "deprecated": true,
      "replacedBy": [
        "unicorn/prefer-keyboard-event-key"
      ],
      "name": "@unicorn/prefer-event-key",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-exponentiation-operator": {
      "docs": {
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/deprecated-rules.md#prefer-exponentiation-operator"
      },
      "deprecated": true,
      "replacedBy": [
        "prefer-exponentiation-operator"
      ],
      "name": "@unicorn/prefer-exponentiation-operator",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-flat-map": {
      "docs": {
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/deprecated-rules.md#prefer-flat-map"
      },
      "deprecated": true,
      "replacedBy": [
        "unicorn/prefer-array-flat-map"
      ],
      "name": "@unicorn/prefer-flat-map",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-node-append": {
      "docs": {
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/deprecated-rules.md#prefer-node-append"
      },
      "deprecated": true,
      "replacedBy": [
        "unicorn/prefer-dom-node-append"
      ],
      "name": "@unicorn/prefer-node-append",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-node-remove": {
      "docs": {
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/deprecated-rules.md#prefer-node-remove"
      },
      "deprecated": true,
      "replacedBy": [
        "unicorn/prefer-dom-node-remove"
      ],
      "name": "@unicorn/prefer-node-remove",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-object-has-own": {
      "docs": {
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/deprecated-rules.md#prefer-object-has-own"
      },
      "deprecated": true,
      "replacedBy": [
        "prefer-object-has-own"
      ],
      "name": "@unicorn/prefer-object-has-own",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-replace-all": {
      "docs": {
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/deprecated-rules.md#prefer-replace-all"
      },
      "deprecated": true,
      "replacedBy": [
        "unicorn/prefer-string-replace-all"
      ],
      "name": "@unicorn/prefer-replace-all",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-starts-ends-with": {
      "docs": {
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/deprecated-rules.md#prefer-starts-ends-with"
      },
      "deprecated": true,
      "replacedBy": [
        "unicorn/prefer-string-starts-ends-with"
      ],
      "name": "@unicorn/prefer-starts-ends-with",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-text-content": {
      "docs": {
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/deprecated-rules.md#prefer-text-content"
      },
      "deprecated": true,
      "replacedBy": [
        "unicorn/prefer-dom-node-text-content"
      ],
      "name": "@unicorn/prefer-text-content",
      "plugin": "@unicorn"
    },
    "@unicorn/prefer-trim-start-end": {
      "docs": {
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/deprecated-rules.md#prefer-trim-start-end"
      },
      "deprecated": true,
      "replacedBy": [
        "unicorn/prefer-string-trim-start-end"
      ],
      "name": "@unicorn/prefer-trim-start-end",
      "plugin": "@unicorn"
    },
    "@unicorn/regex-shorthand": {
      "docs": {
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v56.0.1/docs/deprecated-rules.md#regex-shorthand"
      },
      "deprecated": true,
      "replacedBy": [
        "unicorn/better-regex"
      ],
      "name": "@unicorn/regex-shorthand",
      "plugin": "@unicorn"
    },
    "@eslint/consistent-output": {
      "type": "suggestion",
      "docs": {
        "description": "enforce consistent use of `output` assertions in rule tests",
        "category": "Tests",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/consistent-output.md"
      },
      "fixable": null,
      "defaultOptions": [
        "consistent"
      ],
      "name": "@eslint/consistent-output",
      "plugin": "@eslint"
    },
    "@eslint/fixer-return": {
      "type": "problem",
      "docs": {
        "description": "require fixer functions to return a fix",
        "category": "Rules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/fixer-return.md"
      },
      "fixable": null,
      "name": "@eslint/fixer-return",
      "plugin": "@eslint"
    },
    "@eslint/meta-property-ordering": {
      "type": "suggestion",
      "docs": {
        "description": "enforce the order of meta properties",
        "category": "Rules",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/meta-property-ordering.md"
      },
      "fixable": "code",
      "defaultOptions": [
        [
          "type",
          "docs",
          "fixable",
          "hasSuggestions",
          "deprecated",
          "replacedBy",
          "schema",
          "defaultOptions",
          "messages"
        ]
      ],
      "name": "@eslint/meta-property-ordering",
      "plugin": "@eslint"
    },
    "@eslint/no-deprecated-context-methods": {
      "type": "suggestion",
      "docs": {
        "description": "disallow usage of deprecated methods on rule context objects",
        "category": "Rules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/no-deprecated-context-methods.md"
      },
      "fixable": "code",
      "name": "@eslint/no-deprecated-context-methods",
      "plugin": "@eslint"
    },
    "@eslint/no-deprecated-report-api": {
      "type": "suggestion",
      "docs": {
        "description": "disallow the version of `context.report()` with multiple arguments",
        "category": "Rules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/no-deprecated-report-api.md"
      },
      "fixable": "code",
      "name": "@eslint/no-deprecated-report-api",
      "plugin": "@eslint"
    },
    "@eslint/no-identical-tests": {
      "type": "problem",
      "docs": {
        "description": "disallow identical tests",
        "category": "Tests",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/no-identical-tests.md"
      },
      "fixable": "code",
      "name": "@eslint/no-identical-tests",
      "plugin": "@eslint"
    },
    "@eslint/no-meta-schema-default": {
      "type": "suggestion",
      "docs": {
        "description": "disallow rules `meta.schema` properties to include defaults",
        "category": "Rules",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/no-meta-schema-default.md"
      },
      "name": "@eslint/no-meta-schema-default",
      "plugin": "@eslint"
    },
    "@eslint/no-missing-message-ids": {
      "type": "problem",
      "docs": {
        "description": "disallow `messageId`s that are missing from `meta.messages`",
        "category": "Rules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/no-missing-message-ids.md"
      },
      "fixable": null,
      "name": "@eslint/no-missing-message-ids",
      "plugin": "@eslint"
    },
    "@eslint/no-missing-placeholders": {
      "type": "problem",
      "docs": {
        "description": "disallow missing placeholders in rule report messages",
        "category": "Rules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/no-missing-placeholders.md"
      },
      "fixable": null,
      "name": "@eslint/no-missing-placeholders",
      "plugin": "@eslint"
    },
    "@eslint/no-only-tests": {
      "type": "problem",
      "docs": {
        "description": "disallow the test case property `only`",
        "category": "Tests",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/no-only-tests.md"
      },
      "hasSuggestions": true,
      "name": "@eslint/no-only-tests",
      "plugin": "@eslint"
    },
    "@eslint/no-property-in-node": {
      "type": "suggestion",
      "docs": {
        "description": "disallow using `in` to narrow node types instead of looking at properties",
        "category": "Rules",
        "recommended": false,
        "requiresTypeChecking": true,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/no-property-in-node.md"
      },
      "defaultOptions": [
        {
          "additionalNodeTypeFiles": []
        }
      ],
      "name": "@eslint/no-property-in-node",
      "plugin": "@eslint"
    },
    "@eslint/no-unused-message-ids": {
      "type": "problem",
      "docs": {
        "description": "disallow unused `messageId`s in `meta.messages`",
        "category": "Rules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/no-unused-message-ids.md"
      },
      "fixable": null,
      "name": "@eslint/no-unused-message-ids",
      "plugin": "@eslint"
    },
    "@eslint/no-unused-placeholders": {
      "type": "problem",
      "docs": {
        "description": "disallow unused placeholders in rule report messages",
        "category": "Rules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/no-unused-placeholders.md"
      },
      "fixable": null,
      "name": "@eslint/no-unused-placeholders",
      "plugin": "@eslint"
    },
    "@eslint/no-useless-token-range": {
      "type": "suggestion",
      "docs": {
        "description": "disallow unnecessary calls to `sourceCode.getFirstToken()` and `sourceCode.getLastToken()`",
        "category": "Rules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/no-useless-token-range.md"
      },
      "fixable": "code",
      "name": "@eslint/no-useless-token-range",
      "plugin": "@eslint"
    },
    "@eslint/prefer-message-ids": {
      "type": "problem",
      "docs": {
        "description": "require using `messageId` instead of `message` or `desc` to report rule violations",
        "category": "Rules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/prefer-message-ids.md"
      },
      "fixable": null,
      "name": "@eslint/prefer-message-ids",
      "plugin": "@eslint"
    },
    "@eslint/prefer-object-rule": {
      "type": "suggestion",
      "docs": {
        "description": "disallow function-style rules",
        "category": "Rules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/prefer-object-rule.md"
      },
      "fixable": "code",
      "name": "@eslint/prefer-object-rule",
      "plugin": "@eslint"
    },
    "@eslint/prefer-output-null": {
      "type": "suggestion",
      "docs": {
        "description": "disallow invalid RuleTester test cases where the `output` matches the `code`",
        "category": "Tests",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/prefer-output-null.md"
      },
      "fixable": "code",
      "name": "@eslint/prefer-output-null",
      "plugin": "@eslint"
    },
    "@eslint/prefer-placeholders": {
      "type": "suggestion",
      "docs": {
        "description": "require using placeholders for dynamic report messages",
        "category": "Rules",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/prefer-placeholders.md"
      },
      "fixable": null,
      "name": "@eslint/prefer-placeholders",
      "plugin": "@eslint"
    },
    "@eslint/prefer-replace-text": {
      "type": "suggestion",
      "docs": {
        "description": "require using `replaceText()` instead of `replaceTextRange()`",
        "category": "Rules",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/prefer-replace-text.md"
      },
      "fixable": null,
      "name": "@eslint/prefer-replace-text",
      "plugin": "@eslint"
    },
    "@eslint/report-message-format": {
      "type": "suggestion",
      "docs": {
        "description": "enforce a consistent format for rule report messages",
        "category": "Rules",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/report-message-format.md"
      },
      "fixable": null,
      "defaultOptions": [
        ""
      ],
      "name": "@eslint/report-message-format",
      "plugin": "@eslint"
    },
    "@eslint/require-meta-default-options": {
      "type": "suggestion",
      "docs": {
        "description": "require only rules with options to implement a `meta.defaultOptions` property",
        "category": "Rules",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/require-meta-default-options.md"
      },
      "fixable": "code",
      "name": "@eslint/require-meta-default-options",
      "plugin": "@eslint"
    },
    "@eslint/require-meta-docs-description": {
      "type": "suggestion",
      "docs": {
        "description": "require rules to implement a `meta.docs.description` property with the correct format",
        "category": "Rules",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/require-meta-docs-description.md"
      },
      "fixable": null,
      "defaultOptions": [
        {
          "pattern": "^(enforce|require|disallow)"
        }
      ],
      "name": "@eslint/require-meta-docs-description",
      "plugin": "@eslint"
    },
    "@eslint/require-meta-docs-recommended": {
      "type": "suggestion",
      "docs": {
        "description": "require rules to implement a `meta.docs.recommended` property",
        "category": "Rules",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/require-meta-docs-recommended.md"
      },
      "fixable": null,
      "hasSuggestions": true,
      "defaultOptions": [
        {
          "allowNonBoolean": false
        }
      ],
      "name": "@eslint/require-meta-docs-recommended",
      "plugin": "@eslint"
    },
    "@eslint/require-meta-docs-url": {
      "type": "suggestion",
      "docs": {
        "description": "require rules to implement a `meta.docs.url` property",
        "category": "Rules",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/require-meta-docs-url.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {}
      ],
      "name": "@eslint/require-meta-docs-url",
      "plugin": "@eslint"
    },
    "@eslint/require-meta-fixable": {
      "type": "problem",
      "docs": {
        "description": "require rules to implement a `meta.fixable` property",
        "category": "Rules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/require-meta-fixable.md"
      },
      "defaultOptions": [
        {
          "catchNoFixerButFixableProperty": false
        }
      ],
      "name": "@eslint/require-meta-fixable",
      "plugin": "@eslint"
    },
    "@eslint/require-meta-has-suggestions": {
      "type": "problem",
      "docs": {
        "description": "require suggestable rules to implement a `meta.hasSuggestions` property",
        "category": "Rules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/require-meta-has-suggestions.md"
      },
      "fixable": "code",
      "name": "@eslint/require-meta-has-suggestions",
      "plugin": "@eslint"
    },
    "@eslint/require-meta-schema-description": {
      "type": "suggestion",
      "docs": {
        "description": "require rules `meta.schema` properties to include descriptions",
        "category": "Rules",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/require-meta-schema-description.md"
      },
      "name": "@eslint/require-meta-schema-description",
      "plugin": "@eslint"
    },
    "@eslint/require-meta-schema": {
      "type": "suggestion",
      "docs": {
        "description": "require rules to implement a `meta.schema` property",
        "category": "Rules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/require-meta-schema.md"
      },
      "hasSuggestions": true,
      "defaultOptions": [
        {
          "requireSchemaPropertyWhenOptionless": true
        }
      ],
      "name": "@eslint/require-meta-schema",
      "plugin": "@eslint"
    },
    "@eslint/require-meta-type": {
      "type": "problem",
      "docs": {
        "description": "require rules to implement a `meta.type` property",
        "category": "Rules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/require-meta-type.md"
      },
      "fixable": null,
      "name": "@eslint/require-meta-type",
      "plugin": "@eslint"
    },
    "@eslint/test-case-property-ordering": {
      "type": "suggestion",
      "docs": {
        "description": "require the properties of a test case to be placed in a consistent order",
        "category": "Tests",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/test-case-property-ordering.md"
      },
      "fixable": "code",
      "defaultOptions": [
        [
          "filename",
          "code",
          "output",
          "options",
          "parser",
          "languageOptions",
          "parserOptions",
          "globals",
          "env",
          "errors"
        ]
      ],
      "name": "@eslint/test-case-property-ordering",
      "plugin": "@eslint"
    },
    "@eslint/test-case-shorthand-strings": {
      "type": "suggestion",
      "docs": {
        "description": "enforce consistent usage of shorthand strings for test cases with no options",
        "category": "Tests",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-eslint-plugin/tree/HEAD/docs/rules/test-case-shorthand-strings.md"
      },
      "fixable": "code",
      "defaultOptions": [
        "as-needed"
      ],
      "name": "@eslint/test-case-shorthand-strings",
      "plugin": "@eslint"
    },
    "@sonarjs/function-name": {
      "type": "suggestion",
      "docs": {
        "description": "Function and method names should comply with a naming convention",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S100/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/function-name",
      "plugin": "@sonarjs"
    },
    "@sonarjs/class-name": {
      "type": "suggestion",
      "docs": {
        "description": "Class names should comply with a naming convention",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S101/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/class-name",
      "plugin": "@sonarjs"
    },
    "@sonarjs/max-lines": {
      "type": "suggestion",
      "docs": {
        "description": "Files should not have too many lines of code",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S104/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/max-lines",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-tab": {
      "type": "suggestion",
      "docs": {
        "description": "Tabulation characters should not be used",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S105/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "name": "@sonarjs/no-tab",
      "plugin": "@sonarjs"
    },
    "@sonarjs/variable-name": {
      "type": "suggestion",
      "docs": {
        "description": "Variable, property and parameter names should comply with a naming convention",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S117/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/variable-name",
      "plugin": "@sonarjs"
    },
    "@sonarjs/comment-regex": {
      "type": "suggestion",
      "docs": {
        "description": "Track comments matching a regular expression",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S124/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/comment-regex",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-commented-code": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Sections of code should not be commented out",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S125/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-commented-code",
      "plugin": "@sonarjs"
    },
    "@sonarjs/elseif-without-else": {
      "type": "suggestion",
      "docs": {
        "description": "\"if ... else if\" constructs should end with \"else\" clauses",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S126/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/elseif-without-else",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-fallthrough": {
      "type": "suggestion",
      "docs": {
        "description": "Switch cases should end with an unconditional \"break\" statement",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S128/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-fallthrough",
      "plugin": "@sonarjs"
    },
    "@sonarjs/nested-control-flow": {
      "type": "suggestion",
      "docs": {
        "description": "Control flow statements \"if\", \"for\", \"while\", \"switch\" and \"try\" should not be nested too deeply",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S134/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/nested-control-flow",
      "plugin": "@sonarjs"
    },
    "@sonarjs/too-many-break-or-continue-in-loop": {
      "type": "suggestion",
      "docs": {
        "description": "Loops should not contain more than a single \"break\" or \"continue\" statement",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S135/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/too-many-break-or-continue-in-loop",
      "plugin": "@sonarjs"
    },
    "@sonarjs/max-lines-per-function": {
      "type": "suggestion",
      "docs": {
        "description": "Functions should not have too many lines of code",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S138/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/max-lines-per-function",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-nested-incdec": {
      "type": "suggestion",
      "docs": {
        "description": "Increment (++) and decrement (--) operators should not be used in a method call or mixed with other operators in an expression",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S881/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-nested-incdec",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-equals-in-for-termination": {
      "type": "suggestion",
      "docs": {
        "description": "Equality operators should not be used in \"for\" loop termination conditions",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S888/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-equals-in-for-termination",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-extra-arguments": {
      "type": "problem",
      "docs": {
        "description": "Function calls should not pass extra arguments",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S930/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-extra-arguments",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-collapsible-if": {
      "type": "suggestion",
      "docs": {
        "description": "Mergeable \"if\" statements should be combined",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1066/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-collapsible-if",
      "plugin": "@sonarjs"
    },
    "@sonarjs/expression-complexity": {
      "type": "suggestion",
      "docs": {
        "description": "Expressions should not be too complex",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1067/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/expression-complexity",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-redundant-parentheses": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Redundant pairs of parentheses should be removed",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1110/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "name": "@sonarjs/no-redundant-parentheses",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-labels": {
      "type": "suggestion",
      "docs": {
        "description": "Labels should not be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1119/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-labels",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-nested-assignment": {
      "type": "suggestion",
      "docs": {
        "description": "Assignments should not be made from within sub-expressions",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1121/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-nested-assignment",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-redundant-boolean": {
      "type": "suggestion",
      "docs": {
        "description": "Boolean literals should not be used in comparisons",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1125/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-redundant-boolean",
      "plugin": "@sonarjs"
    },
    "@sonarjs/prefer-single-boolean-return": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Return of boolean expressions should not be wrapped into an \"if-then-else\" statement",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1126/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/prefer-single-boolean-return",
      "plugin": "@sonarjs"
    },
    "@sonarjs/unused-import": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Unnecessary imports should be removed",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1128/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/unused-import",
      "plugin": "@sonarjs"
    },
    "@sonarjs/fixme-tag": {
      "type": "suggestion",
      "docs": {
        "description": "Track uses of \"FIXME\" tags",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1134/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/fixme-tag",
      "plugin": "@sonarjs"
    },
    "@sonarjs/todo-tag": {
      "type": "suggestion",
      "docs": {
        "description": "Track uses of \"TODO\" tags",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1135/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/todo-tag",
      "plugin": "@sonarjs"
    },
    "@sonarjs/useless-string-operation": {
      "type": "problem",
      "docs": {
        "description": "Results of operations on strings should not be ignored",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1154/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": true,
      "name": "@sonarjs/useless-string-operation",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-unused-function-argument": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Unused function parameters should be removed",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1172/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-unused-function-argument",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-duplicate-string": {
      "type": "suggestion",
      "docs": {
        "description": "String literals should not be duplicated",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1192/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-duplicate-string",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-case-label-in-switch": {
      "type": "suggestion",
      "docs": {
        "description": "\"switch\" statements should not contain non-case labels",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1219/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-case-label-in-switch",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-parameter-reassignment": {
      "type": "problem",
      "docs": {
        "description": "Initial values of parameters, caught exceptions, and loop variables should not be ignored",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1226/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-parameter-reassignment",
      "plugin": "@sonarjs"
    },
    "@sonarjs/prefer-while": {
      "fixable": "code",
      "type": "suggestion",
      "docs": {
        "description": "A \"while\" loop should be used instead of a \"for\" loop",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1264/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/prefer-while",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-sonar-comments": {
      "type": "suggestion",
      "docs": {
        "description": "Track uses of \"NOSONAR\" comments",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1291/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-sonar-comments",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-small-switch": {
      "type": "suggestion",
      "docs": {
        "description": "\"if\" statements should be preferred over \"switch\" when simpler",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1301/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-small-switch",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-hardcoded-ip": {
      "type": "problem",
      "docs": {
        "description": "Using hardcoded IP addresses is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1313/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-hardcoded-ip",
      "plugin": "@sonarjs"
    },
    "@sonarjs/label-position": {
      "type": "suggestion",
      "docs": {
        "description": "Only \"while\", \"do\", \"for\" and \"switch\" statements should be labelled",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1439/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/label-position",
      "plugin": "@sonarjs"
    },
    "@sonarjs/public-static-readonly": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Public \"static\" fields should be read-only",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1444/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/public-static-readonly",
      "plugin": "@sonarjs"
    },
    "@sonarjs/file-header": {
      "type": "suggestion",
      "docs": {
        "description": "Track lack of copyright and license headers",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1451/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/file-header",
      "plugin": "@sonarjs"
    },
    "@sonarjs/call-argument-line": {
      "type": "suggestion",
      "docs": {
        "description": "Function call arguments should not start on new lines",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1472/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/call-argument-line",
      "plugin": "@sonarjs"
    },
    "@sonarjs/max-switch-cases": {
      "type": "suggestion",
      "docs": {
        "description": "\"switch\" statements should not have too many \"case\" clauses",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1479/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/max-switch-cases",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-unused-vars": {
      "type": "suggestion",
      "docs": {
        "description": "Unused local variables and functions should be removed",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1481/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-unused-vars",
      "plugin": "@sonarjs"
    },
    "@sonarjs/prefer-immediate-return": {
      "fixable": "code",
      "type": "suggestion",
      "docs": {
        "description": "Local variables should not be declared and then immediately returned or thrown",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1488/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/prefer-immediate-return",
      "plugin": "@sonarjs"
    },
    "@sonarjs/function-inside-loop": {
      "type": "suggestion",
      "docs": {
        "description": "Functions should not be defined inside loops",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1515/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/function-inside-loop",
      "plugin": "@sonarjs"
    },
    "@sonarjs/code-eval": {
      "type": "problem",
      "docs": {
        "description": "Dynamically executing code is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1523/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/code-eval",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-variable-usage-before-declaration": {
      "type": "suggestion",
      "docs": {
        "description": "Variables declared with \"var\" should be declared before they are used",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1526/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-variable-usage-before-declaration",
      "plugin": "@sonarjs"
    },
    "@sonarjs/future-reserved-words": {
      "type": "suggestion",
      "docs": {
        "description": "Future reserved words should not be used as identifiers",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1527/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/future-reserved-words",
      "plugin": "@sonarjs"
    },
    "@sonarjs/array-constructor": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Array constructors should not be used",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1528/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/array-constructor",
      "plugin": "@sonarjs"
    },
    "@sonarjs/bitwise-operators": {
      "type": "problem",
      "docs": {
        "description": "Bitwise operators should not be used in boolean contexts",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1529/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/bitwise-operators",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-function-declaration-in-block": {
      "type": "problem",
      "docs": {
        "description": "Function declarations should not be made within blocks",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1530/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-function-declaration-in-block",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-primitive-wrappers": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Wrapper objects should not be used for primitive types",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1533/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-primitive-wrappers",
      "plugin": "@sonarjs"
    },
    "@sonarjs/for-in": {
      "type": "problem",
      "docs": {
        "description": "\"for...in\" loops should filter properties before acting on them",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1535/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/for-in",
      "plugin": "@sonarjs"
    },
    "@sonarjs/cyclomatic-complexity": {
      "type": "suggestion",
      "docs": {
        "description": "Cyclomatic Complexity of functions should not be too high",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1541/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/cyclomatic-complexity",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-skipped-tests": {
      "type": "suggestion",
      "docs": {
        "description": "Tests should not be skipped without providing a reason",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1607/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-skipped-tests",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-one-iteration-loop": {
      "type": "problem",
      "docs": {
        "description": "Loops with at most one iteration should be refactored",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1751/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-one-iteration-loop",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-identical-expressions": {
      "type": "problem",
      "docs": {
        "description": "Identical expressions should not be used on both sides of a binary operator",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1764/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-identical-expressions",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-nested-switch": {
      "type": "suggestion",
      "docs": {
        "description": "\"switch\" statements should not be nested",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1821/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-nested-switch",
      "plugin": "@sonarjs"
    },
    "@sonarjs/constructor-for-side-effects": {
      "type": "problem",
      "docs": {
        "description": "Objects should not be created to be dropped immediately without being used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1848/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/constructor-for-side-effects",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-dead-store": {
      "type": "suggestion",
      "docs": {
        "description": "Unused assignments should be removed",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1854/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-dead-store",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-identical-conditions": {
      "type": "problem",
      "docs": {
        "description": "\"if/else if\" chains and \"switch\" cases should not have the same condition",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1862/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-identical-conditions",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-duplicated-branches": {
      "type": "suggestion",
      "docs": {
        "description": "Two branches in a conditional structure should not have exactly the same implementation",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1871/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-duplicated-branches",
      "plugin": "@sonarjs"
    },
    "@sonarjs/deprecation": {
      "type": "suggestion",
      "docs": {
        "description": "Deprecated APIs should not be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1874/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/deprecation",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-inverted-boolean-check": {
      "hasSuggestions": true,
      "fixable": "code",
      "type": "suggestion",
      "docs": {
        "description": "Boolean checks should not be inverted",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1940/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-inverted-boolean-check",
      "plugin": "@sonarjs"
    },
    "@sonarjs/misplaced-loop-counter": {
      "type": "suggestion",
      "docs": {
        "description": "\"for\" loop increment clauses should modify the loops' counters",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S1994/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/misplaced-loop-counter",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-nested-functions": {
      "type": "suggestion",
      "docs": {
        "description": "Functions should not be nested too deeply",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2004/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-nested-functions",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-hardcoded-passwords": {
      "type": "problem",
      "docs": {
        "description": "Hard-coded passwords are security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2068/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-hardcoded-passwords",
      "plugin": "@sonarjs"
    },
    "@sonarjs/sql-queries": {
      "type": "problem",
      "docs": {
        "description": "Formatting SQL queries is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2077/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/sql-queries",
      "plugin": "@sonarjs"
    },
    "@sonarjs/insecure-cookie": {
      "type": "problem",
      "docs": {
        "description": "Creating cookies without the \"secure\" flag is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2092/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/insecure-cookie",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-useless-increment": {
      "type": "problem",
      "docs": {
        "description": "Values should not be uselessly incremented",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2123/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-useless-increment",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-globals-shadowing": {
      "type": "problem",
      "docs": {
        "description": "Special identifiers should not be bound or assigned",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2137/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-globals-shadowing",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-undefined-assignment": {
      "type": "suggestion",
      "docs": {
        "description": "\"undefined\" should not be assigned",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2138/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-undefined-assignment",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-empty-test-file": {
      "type": "suggestion",
      "docs": {
        "description": "Test files should contain at least one test case",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2187/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-empty-test-file",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-ignored-return": {
      "type": "problem",
      "docs": {
        "description": "Return values from functions without side effects should not be ignored",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2201/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-ignored-return",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-wildcard-import": {
      "type": "suggestion",
      "docs": {
        "description": "Wildcard imports should not be used",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2208/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-wildcard-import",
      "plugin": "@sonarjs"
    },
    "@sonarjs/arguments-order": {
      "type": "suggestion",
      "docs": {
        "description": "Parameters should be passed in the correct order",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2234/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/arguments-order",
      "plugin": "@sonarjs"
    },
    "@sonarjs/pseudo-random": {
      "type": "problem",
      "docs": {
        "description": "Using pseudorandom number generators (PRNGs) is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2245/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/pseudo-random",
      "plugin": "@sonarjs"
    },
    "@sonarjs/for-loop-increment-sign": {
      "type": "problem",
      "docs": {
        "description": "A \"for\" loop update clause should move the counter in the right direction",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2251/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/for-loop-increment-sign",
      "plugin": "@sonarjs"
    },
    "@sonarjs/cookies": {
      "type": "problem",
      "docs": {
        "description": "Writing cookies is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2255/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "name": "@sonarjs/cookies",
      "plugin": "@sonarjs"
    },
    "@sonarjs/null-dereference": {
      "type": "problem",
      "docs": {
        "description": "Properties of variables with \"null\" or \"undefined\" values should not be accessed",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2259/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/null-dereference",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-selector-parameter": {
      "type": "suggestion",
      "docs": {
        "description": "Methods should not contain selector parameters",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2301/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-selector-parameter",
      "plugin": "@sonarjs"
    },
    "@sonarjs/updated-loop-counter": {
      "type": "suggestion",
      "docs": {
        "description": "Loop counters should not be assigned within the loop body",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2310/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/updated-loop-counter",
      "plugin": "@sonarjs"
    },
    "@sonarjs/block-scoped-var": {
      "type": "suggestion",
      "docs": {
        "description": "Variables should be used in the blocks where they are declared",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2392/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/block-scoped-var",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-built-in-override": {
      "type": "problem",
      "docs": {
        "description": "Built-in objects should not be overridden",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2424/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-built-in-override",
      "plugin": "@sonarjs"
    },
    "@sonarjs/prefer-object-literal": {
      "type": "suggestion",
      "docs": {
        "description": "Object literal syntax should be used",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2428/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/prefer-object-literal",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-ignored-exceptions": {
      "type": "suggestion",
      "docs": {
        "description": "Exceptions should not be ignored",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2486/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-ignored-exceptions",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-gratuitous-expressions": {
      "type": "suggestion",
      "docs": {
        "description": "Boolean expressions should not be gratuitous",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2589/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-gratuitous-expressions",
      "plugin": "@sonarjs"
    },
    "@sonarjs/file-uploads": {
      "type": "problem",
      "docs": {
        "description": "File uploads should be restricted",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2598/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/file-uploads",
      "plugin": "@sonarjs"
    },
    "@sonarjs/file-permissions": {
      "type": "problem",
      "docs": {
        "description": "Setting loose POSIX file permissions is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2612/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/file-permissions",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-empty-character-class": {
      "type": "problem",
      "docs": {
        "description": "Empty character classes should not be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2639/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-empty-character-class",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-unenclosed-multiline-block": {
      "type": "suggestion",
      "docs": {
        "description": "Multiline blocks should be enclosed in curly braces",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2681/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-unenclosed-multiline-block",
      "plugin": "@sonarjs"
    },
    "@sonarjs/index-of-compare-to-positive-number": {
      "type": "suggestion",
      "docs": {
        "description": "\"indexOf\" checks should not be for positive numbers",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2692/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/index-of-compare-to-positive-number",
      "plugin": "@sonarjs"
    },
    "@sonarjs/assertions-in-tests": {
      "type": "suggestion",
      "docs": {
        "description": "Tests should include assertions",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2699/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/assertions-in-tests",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-implicit-global": {
      "type": "suggestion",
      "docs": {
        "description": "Variables should be declared explicitly",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2703/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-implicit-global",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-useless-catch": {
      "type": "suggestion",
      "docs": {
        "description": "\"catch\" clauses should do more than rethrow",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2737/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-useless-catch",
      "plugin": "@sonarjs"
    },
    "@sonarjs/xml-parser-xxe": {
      "type": "problem",
      "docs": {
        "description": "XML parsers should not be vulnerable to XXE attacks",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2755/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/xml-parser-xxe",
      "plugin": "@sonarjs"
    },
    "@sonarjs/non-existent-operator": {
      "hasSuggestions": true,
      "type": "problem",
      "docs": {
        "description": "Non-existent operators '=+', '=-' and '=!' should not be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2757/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/non-existent-operator",
      "plugin": "@sonarjs"
    },
    "@sonarjs/web-sql-database": {
      "type": "problem",
      "docs": {
        "description": "Web SQL databases should not be used",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2817/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": true,
      "name": "@sonarjs/web-sql-database",
      "plugin": "@sonarjs"
    },
    "@sonarjs/post-message": {
      "type": "problem",
      "docs": {
        "description": "Origins should be verified during cross-origin communications",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2819/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/post-message",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-array-delete": {
      "type": "suggestion",
      "docs": {
        "description": "\"delete\" should not be used on arrays",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2870/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-array-delete",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-alphabetical-sort": {
      "hasSuggestions": true,
      "type": "problem",
      "docs": {
        "description": "\"Array.prototype.sort()\" and \"Array.prototype.toSorted()\" should use a compare function",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2871/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-alphabetical-sort",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-incomplete-assertions": {
      "type": "suggestion",
      "docs": {
        "description": "Assertions should be complete",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2970/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-incomplete-assertions",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-global-this": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "The global \"this\" object should not be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2990/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-global-this",
      "plugin": "@sonarjs"
    },
    "@sonarjs/new-operator-misuse": {
      "type": "problem",
      "docs": {
        "description": "\"new\" should only be used with functions and classes",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S2999/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/new-operator-misuse",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-delete-var": {
      "type": "problem",
      "docs": {
        "description": "\"delete\" should be used only with object properties",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3001/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-delete-var",
      "plugin": "@sonarjs"
    },
    "@sonarjs/strings-comparison": {
      "type": "suggestion",
      "docs": {
        "description": "Comparison operators should not be used with strings",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3003/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/strings-comparison",
      "plugin": "@sonarjs"
    },
    "@sonarjs/file-name-differ-from-class": {
      "type": "suggestion",
      "docs": {
        "description": "Default export names and file names should match",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3317/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/file-name-differ-from-class",
      "plugin": "@sonarjs"
    },
    "@sonarjs/cookie-no-httponly": {
      "type": "problem",
      "docs": {
        "description": "Creating cookies without the \"HttpOnly\" flag is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3330/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/cookie-no-httponly",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-nested-conditional": {
      "type": "suggestion",
      "docs": {
        "description": "Ternary operators should not be nested",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3358/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-nested-conditional",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-incorrect-string-concat": {
      "type": "suggestion",
      "docs": {
        "description": "Strings and non-strings should not be added",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3402/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-incorrect-string-concat",
      "plugin": "@sonarjs"
    },
    "@sonarjs/different-types-comparison": {
      "hasSuggestions": true,
      "type": "problem",
      "docs": {
        "description": "Strict equality operators should not be used with dissimilar types",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3403/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/different-types-comparison",
      "plugin": "@sonarjs"
    },
    "@sonarjs/inverted-assertion-arguments": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Assertion arguments should be passed in the correct order",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3415/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/inverted-assertion-arguments",
      "plugin": "@sonarjs"
    },
    "@sonarjs/shorthand-property-grouping": {
      "type": "suggestion",
      "docs": {
        "description": "Shorthand object properties should be grouped at the beginning or end of an object declaration",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3499/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/shorthand-property-grouping",
      "plugin": "@sonarjs"
    },
    "@sonarjs/updated-const-var": {
      "type": "problem",
      "docs": {
        "description": "\"const\" variables should not be reassigned",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3500/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/updated-const-var",
      "plugin": "@sonarjs"
    },
    "@sonarjs/arguments-usage": {
      "type": "suggestion",
      "docs": {
        "description": "\"arguments\" should not be accessed directly",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3513/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/arguments-usage",
      "plugin": "@sonarjs"
    },
    "@sonarjs/destructuring-assignment-syntax": {
      "type": "suggestion",
      "docs": {
        "description": "Destructuring syntax should be used for assignments",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3514/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/destructuring-assignment-syntax",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-invariant-returns": {
      "type": "suggestion",
      "docs": {
        "description": "Function returns should not be invariant",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3516/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-invariant-returns",
      "plugin": "@sonarjs"
    },
    "@sonarjs/arrow-function-convention": {
      "type": "suggestion",
      "docs": {
        "description": "Braces and parentheses should be used consistently with arrow functions",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3524/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/arrow-function-convention",
      "plugin": "@sonarjs"
    },
    "@sonarjs/class-prototype": {
      "type": "suggestion",
      "docs": {
        "description": "Class methods should be used instead of \"prototype\" assignments",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3525/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/class-prototype",
      "plugin": "@sonarjs"
    },
    "@sonarjs/generator-without-yield": {
      "type": "problem",
      "docs": {
        "description": "Generators should explicitly \"yield\" a value",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3531/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/generator-without-yield",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-require-or-define": {
      "type": "suggestion",
      "docs": {
        "description": "\"import\" should be used to include external code",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3533/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-require-or-define",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-associative-arrays": {
      "type": "suggestion",
      "docs": {
        "description": "Array indexes should be numeric",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3579/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-associative-arrays",
      "plugin": "@sonarjs"
    },
    "@sonarjs/comma-or-logical-or-case": {
      "type": "problem",
      "docs": {
        "description": "Comma and logical OR operators should not be used in switch cases",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3616/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/comma-or-logical-or-case",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-redundant-jump": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Jump statements should not be redundant",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3626/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-redundant-jump",
      "plugin": "@sonarjs"
    },
    "@sonarjs/inconsistent-function-call": {
      "type": "suggestion",
      "docs": {
        "description": "Functions should be called consistently with or without \"new\"",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3686/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/inconsistent-function-call",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-use-of-empty-return-value": {
      "type": "problem",
      "docs": {
        "description": "The return value of void functions should not be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3699/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-use-of-empty-return-value",
      "plugin": "@sonarjs"
    },
    "@sonarjs/enforce-trailing-comma": {
      "deprecated": true,
      "replacedBy": [],
      "type": "suggestion",
      "docs": {
        "description": "Trailing commas should be used",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3723/javascript",
        "requiresTypeChecking": false
      },
      "fixable": "code",
      "name": "@sonarjs/enforce-trailing-comma",
      "plugin": "@sonarjs"
    },
    "@sonarjs/void-use": {
      "type": "suggestion",
      "docs": {
        "description": "\"void\" should not be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3735/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/void-use",
      "plugin": "@sonarjs"
    },
    "@sonarjs/operation-returning-nan": {
      "type": "suggestion",
      "docs": {
        "description": "Arithmetic operations should not result in \"NaN\"",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3757/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/operation-returning-nan",
      "plugin": "@sonarjs"
    },
    "@sonarjs/values-not-convertible-to-numbers": {
      "type": "suggestion",
      "docs": {
        "description": "Values not convertible to numbers should not be used in numeric comparisons",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3758/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/values-not-convertible-to-numbers",
      "plugin": "@sonarjs"
    },
    "@sonarjs/non-number-in-arithmetic-expression": {
      "type": "suggestion",
      "docs": {
        "description": "Arithmetic operators should only have numbers as operands",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3760/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/non-number-in-arithmetic-expression",
      "plugin": "@sonarjs"
    },
    "@sonarjs/cognitive-complexity": {
      "type": "suggestion",
      "docs": {
        "description": "Cognitive Complexity of functions should not be too high",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3776/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/cognitive-complexity",
      "plugin": "@sonarjs"
    },
    "@sonarjs/argument-type": {
      "type": "suggestion",
      "docs": {
        "description": "Arguments to built-in functions should match documented types",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3782/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/argument-type",
      "plugin": "@sonarjs"
    },
    "@sonarjs/in-operator-type-error": {
      "type": "problem",
      "docs": {
        "description": "\"in\" should not be used with primitive types",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3785/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/in-operator-type-error",
      "plugin": "@sonarjs"
    },
    "@sonarjs/array-callback-without-return": {
      "type": "problem",
      "docs": {
        "description": "Callbacks of array methods should have return statements",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3796/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/array-callback-without-return",
      "plugin": "@sonarjs"
    },
    "@sonarjs/declarations-in-global-scope": {
      "type": "suggestion",
      "docs": {
        "description": "Variables and functions should not be declared in the global scope",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3798/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/declarations-in-global-scope",
      "plugin": "@sonarjs"
    },
    "@sonarjs/function-return-type": {
      "type": "suggestion",
      "docs": {
        "description": "Functions should always return the same type",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3800/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/function-return-type",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-inconsistent-returns": {
      "type": "suggestion",
      "docs": {
        "description": "Functions should use \"return\" consistently",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3801/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-inconsistent-returns",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-reference-error": {
      "type": "problem",
      "docs": {
        "description": "Variables should be defined before being used",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3827/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-reference-error",
      "plugin": "@sonarjs"
    },
    "@sonarjs/super-invocation": {
      "type": "problem",
      "docs": {
        "description": "\"super()\" should be invoked appropriately",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3854/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/super-invocation",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-all-duplicated-branches": {
      "type": "problem",
      "docs": {
        "description": "All branches in a conditional structure should not have exactly the same implementation",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3923/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-all-duplicated-branches",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-same-line-conditional": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Conditionals should start on new lines",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3972/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-same-line-conditional",
      "plugin": "@sonarjs"
    },
    "@sonarjs/conditional-indentation": {
      "type": "suggestion",
      "docs": {
        "description": "A conditionally executed single line should be denoted by indentation",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3973/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "name": "@sonarjs/conditional-indentation",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-collection-size-mischeck": {
      "hasSuggestions": true,
      "type": "problem",
      "docs": {
        "description": "Collection size and array length comparisons should make sense",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3981/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-collection-size-mischeck",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-unthrown-error": {
      "hasSuggestions": true,
      "type": "problem",
      "docs": {
        "description": "Errors should not be created without being thrown",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S3984/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-unthrown-error",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-unused-collection": {
      "type": "suggestion",
      "docs": {
        "description": "Collection contents should be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4030/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-unused-collection",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-os-command-from-path": {
      "type": "problem",
      "docs": {
        "description": "Searching OS commands in PATH is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4036/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-os-command-from-path",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-misleading-array-reverse": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Array-mutating methods should not be used misleadingly",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4043/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-misleading-array-reverse",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-invalid-await": {
      "type": "suggestion",
      "docs": {
        "description": "\"await\" should only be used with promises",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4123/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-invalid-await",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-for-in-iterable": {
      "type": "suggestion",
      "docs": {
        "description": "\"for in\" should not be used with iterables",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4139/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-for-in-iterable",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-element-overwrite": {
      "type": "problem",
      "docs": {
        "description": "Collection elements should not be replaced unconditionally",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4143/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-element-overwrite",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-identical-functions": {
      "type": "suggestion",
      "docs": {
        "description": "Functions should not have identical implementations",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4144/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-identical-functions",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-empty-collection": {
      "type": "problem",
      "docs": {
        "description": "Empty collections should not be accessed or iterated",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4158/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-empty-collection",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-redundant-assignments": {
      "type": "suggestion",
      "docs": {
        "description": "Assignments should not be redundant",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4165/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-redundant-assignments",
      "plugin": "@sonarjs"
    },
    "@sonarjs/prefer-type-guard": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Type predicates should be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4322/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/prefer-type-guard",
      "plugin": "@sonarjs"
    },
    "@sonarjs/use-type-alias": {
      "type": "suggestion",
      "docs": {
        "description": "Type aliases should be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4323/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/use-type-alias",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-return-type-any": {
      "type": "suggestion",
      "docs": {
        "description": "Primitive return types should be used",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4324/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-return-type-any",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-implicit-dependencies": {
      "type": "suggestion",
      "docs": {
        "description": "Dependencies should be explicit",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4328/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-implicit-dependencies",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-useless-intersection": {
      "type": "problem",
      "docs": {
        "description": "Type intersections should use meaningful types",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4335/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-useless-intersection",
      "plugin": "@sonarjs"
    },
    "@sonarjs/weak-ssl": {
      "type": "problem",
      "docs": {
        "description": "Weak SSL/TLS protocols should not be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4423/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/weak-ssl",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-weak-keys": {
      "type": "problem",
      "docs": {
        "description": "Cryptographic keys should be robust",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4426/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-weak-keys",
      "plugin": "@sonarjs"
    },
    "@sonarjs/csrf": {
      "type": "problem",
      "docs": {
        "description": "Disabling CSRF protections is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4502/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/csrf",
      "plugin": "@sonarjs"
    },
    "@sonarjs/production-debug": {
      "type": "problem",
      "docs": {
        "description": "Delivering code in production with debug features activated is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4507/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/production-debug",
      "plugin": "@sonarjs"
    },
    "@sonarjs/prefer-default-last": {
      "type": "suggestion",
      "docs": {
        "description": "\"default\" clauses should be last",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4524/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/prefer-default-last",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-in-misuse": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "\"in\" should not be used on arrays",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4619/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-in-misuse",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-duplicate-in-composite": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Union and intersection types should not include duplicated constituents",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4621/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-duplicate-in-composite",
      "plugin": "@sonarjs"
    },
    "@sonarjs/max-union-size": {
      "type": "suggestion",
      "docs": {
        "description": "Union types should not have too many elements",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4622/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/max-union-size",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-undefined-argument": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "\"undefined\" should not be passed as the value of optional parameters",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4623/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-undefined-argument",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-nested-template-literals": {
      "type": "suggestion",
      "docs": {
        "description": "Template literals should not be nested",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4624/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-nested-template-literals",
      "plugin": "@sonarjs"
    },
    "@sonarjs/prefer-promise-shorthand": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Shorthand promises should be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4634/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/prefer-promise-shorthand",
      "plugin": "@sonarjs"
    },
    "@sonarjs/os-command": {
      "type": "problem",
      "docs": {
        "description": "Using shell interpreter when executing OS commands is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4721/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/os-command",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-redundant-optional": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Optional property declarations should not use both '?' and 'undefined' syntax",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4782/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-redundant-optional",
      "plugin": "@sonarjs"
    },
    "@sonarjs/regular-expr": {
      "type": "problem",
      "docs": {
        "description": "Using regular expressions is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4784/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "name": "@sonarjs/regular-expr",
      "plugin": "@sonarjs"
    },
    "@sonarjs/encryption": {
      "type": "problem",
      "docs": {
        "description": "Encrypting data is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4787/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "name": "@sonarjs/encryption",
      "plugin": "@sonarjs"
    },
    "@sonarjs/hashing": {
      "type": "problem",
      "docs": {
        "description": "Using weak hashing algorithms is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4790/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/hashing",
      "plugin": "@sonarjs"
    },
    "@sonarjs/bool-param-default": {
      "type": "suggestion",
      "docs": {
        "description": "Optional boolean parameters should have default value",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4798/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/bool-param-default",
      "plugin": "@sonarjs"
    },
    "@sonarjs/xpath": {
      "type": "problem",
      "docs": {
        "description": "Executing XPath expressions is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4817/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "name": "@sonarjs/xpath",
      "plugin": "@sonarjs"
    },
    "@sonarjs/sockets": {
      "type": "problem",
      "docs": {
        "description": "Using Sockets is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4818/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "name": "@sonarjs/sockets",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-try-promise": {
      "type": "problem",
      "docs": {
        "description": "Promise rejections should not be caught by \"try\" blocks",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4822/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-try-promise",
      "plugin": "@sonarjs"
    },
    "@sonarjs/process-argv": {
      "type": "problem",
      "docs": {
        "description": "Using command line arguments is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4823/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "name": "@sonarjs/process-argv",
      "plugin": "@sonarjs"
    },
    "@sonarjs/standard-input": {
      "type": "problem",
      "docs": {
        "description": "Reading the Standard Input is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4829/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "name": "@sonarjs/standard-input",
      "plugin": "@sonarjs"
    },
    "@sonarjs/unverified-certificate": {
      "type": "problem",
      "docs": {
        "description": "Server certificates should be verified during SSL/TLS connections",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S4830/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/unverified-certificate",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-unsafe-unzip": {
      "type": "problem",
      "docs": {
        "description": "Expanding archive files without controlling resource consumption is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5042/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-unsafe-unzip",
      "plugin": "@sonarjs"
    },
    "@sonarjs/cors": {
      "type": "problem",
      "docs": {
        "description": "Having a permissive Cross-Origin Resource Sharing policy is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5122/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/cors",
      "plugin": "@sonarjs"
    },
    "@sonarjs/link-with-target-blank": {
      "type": "problem",
      "docs": {
        "description": "Authorizing an opened window to access back to the originating window is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5148/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/link-with-target-blank",
      "plugin": "@sonarjs"
    },
    "@sonarjs/disabled-auto-escaping": {
      "type": "problem",
      "docs": {
        "description": "Disabling auto-escaping in template engines is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5247/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/disabled-auto-escaping",
      "plugin": "@sonarjs"
    },
    "@sonarjs/table-header": {
      "type": "problem",
      "docs": {
        "description": "Tables should have headers",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5256/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/table-header",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-table-as-layout": {
      "type": "suggestion",
      "docs": {
        "description": "HTML \"<table>\" should not be used for layout purposes",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5257/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-table-as-layout",
      "plugin": "@sonarjs"
    },
    "@sonarjs/table-header-reference": {
      "type": "problem",
      "docs": {
        "description": "Table cells should reference their headers",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5260/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/table-header-reference",
      "plugin": "@sonarjs"
    },
    "@sonarjs/object-alt-content": {
      "type": "suggestion",
      "docs": {
        "description": "\"<object>\" tags should provide an alternative content",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5264/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/object-alt-content",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-clear-text-protocols": {
      "type": "problem",
      "docs": {
        "description": "Using clear-text protocols is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5332/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-clear-text-protocols",
      "plugin": "@sonarjs"
    },
    "@sonarjs/publicly-writable-directories": {
      "type": "problem",
      "docs": {
        "description": "Using publicly writable directories is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5443/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/publicly-writable-directories",
      "plugin": "@sonarjs"
    },
    "@sonarjs/unverified-hostname": {
      "type": "problem",
      "docs": {
        "description": "Server hostnames should be verified during SSL/TLS connections",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5527/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/unverified-hostname",
      "plugin": "@sonarjs"
    },
    "@sonarjs/encryption-secure-mode": {
      "type": "problem",
      "docs": {
        "description": "Encryption algorithms should be used with secure mode and padding scheme",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5542/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/encryption-secure-mode",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-weak-cipher": {
      "type": "problem",
      "docs": {
        "description": "Cipher algorithms should be robust",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5547/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-weak-cipher",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-intrusive-permissions": {
      "type": "problem",
      "docs": {
        "description": "Using intrusive permissions is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5604/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-intrusive-permissions",
      "plugin": "@sonarjs"
    },
    "@sonarjs/insecure-jwt-token": {
      "type": "problem",
      "docs": {
        "description": "JWT should be signed and verified with strong cipher algorithms",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5659/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/insecure-jwt-token",
      "plugin": "@sonarjs"
    },
    "@sonarjs/x-powered-by": {
      "type": "problem",
      "docs": {
        "description": "Disclosing fingerprints from web application technologies is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5689/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/x-powered-by",
      "plugin": "@sonarjs"
    },
    "@sonarjs/hidden-files": {
      "type": "problem",
      "docs": {
        "description": "Statically serving hidden files is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5691/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/hidden-files",
      "plugin": "@sonarjs"
    },
    "@sonarjs/content-length": {
      "type": "problem",
      "docs": {
        "description": "Allowing requests with excessive content length is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5693/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/content-length",
      "plugin": "@sonarjs"
    },
    "@sonarjs/disabled-resource-integrity": {
      "type": "problem",
      "docs": {
        "description": "Using remote artifacts without integrity checks is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5725/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/disabled-resource-integrity",
      "plugin": "@sonarjs"
    },
    "@sonarjs/content-security-policy": {
      "type": "problem",
      "docs": {
        "description": "Disabling content security policy fetch directives is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5728/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/content-security-policy",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-mixed-content": {
      "type": "problem",
      "docs": {
        "description": "Allowing mixed-content is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5730/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-mixed-content",
      "plugin": "@sonarjs"
    },
    "@sonarjs/frame-ancestors": {
      "type": "problem",
      "docs": {
        "description": "Disabling content security policy frame-ancestors directive is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5732/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/frame-ancestors",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-mime-sniff": {
      "type": "problem",
      "docs": {
        "description": "Allowing browsers to sniff MIME types is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5734/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-mime-sniff",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-referrer-policy": {
      "type": "problem",
      "docs": {
        "description": "Disabling strict HTTP no-referrer policy is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5736/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-referrer-policy",
      "plugin": "@sonarjs"
    },
    "@sonarjs/strict-transport-security": {
      "type": "problem",
      "docs": {
        "description": "Disabling Strict-Transport-Security policy is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5739/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/strict-transport-security",
      "plugin": "@sonarjs"
    },
    "@sonarjs/certificate-transparency": {
      "type": "problem",
      "docs": {
        "description": "Disabling Certificate Transparency monitoring is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5742/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/certificate-transparency",
      "plugin": "@sonarjs"
    },
    "@sonarjs/dns-prefetching": {
      "type": "problem",
      "docs": {
        "description": "Allowing browsers to perform DNS prefetching is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5743/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "name": "@sonarjs/dns-prefetching",
      "plugin": "@sonarjs"
    },
    "@sonarjs/confidential-information-logging": {
      "type": "problem",
      "docs": {
        "description": "Allowing confidential information to be logged is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5757/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/confidential-information-logging",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-ip-forward": {
      "type": "problem",
      "docs": {
        "description": "Forwarding client IP address is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5759/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-ip-forward",
      "plugin": "@sonarjs"
    },
    "@sonarjs/empty-string-repetition": {
      "type": "problem",
      "docs": {
        "description": "Repeated patterns in regular expressions should not match the empty string",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5842/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/empty-string-repetition",
      "plugin": "@sonarjs"
    },
    "@sonarjs/regex-complexity": {
      "type": "suggestion",
      "docs": {
        "description": "Regular expressions should not be too complicated",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5843/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/regex-complexity",
      "plugin": "@sonarjs"
    },
    "@sonarjs/anchor-precedence": {
      "type": "problem",
      "docs": {
        "description": "Alternatives in regular expressions should be grouped when used with anchors",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5850/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/anchor-precedence",
      "plugin": "@sonarjs"
    },
    "@sonarjs/slow-regex": {
      "type": "problem",
      "docs": {
        "description": "Using slow regular expressions is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5852/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/slow-regex",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-invalid-regexp": {
      "type": "problem",
      "docs": {
        "description": "Regular expressions should be syntactically valid",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5856/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-invalid-regexp",
      "plugin": "@sonarjs"
    },
    "@sonarjs/unused-named-groups": {
      "type": "suggestion",
      "docs": {
        "description": "Names of regular expressions named groups should be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5860/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/unused-named-groups",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-same-argument-assert": {
      "type": "problem",
      "docs": {
        "description": "Assertions should not be given twice the same argument",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5863/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-same-argument-assert",
      "plugin": "@sonarjs"
    },
    "@sonarjs/unicode-aware-regex": {
      "type": "problem",
      "docs": {
        "description": "Regular expressions using Unicode character classes or property escapes should enable the unicode flag",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5867/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/unicode-aware-regex",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-misleading-character-class": {
      "hasSuggestions": true,
      "type": "problem",
      "docs": {
        "description": "Unicode Grapheme Clusters should be avoided inside regex character classes",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5868/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-misleading-character-class",
      "plugin": "@sonarjs"
    },
    "@sonarjs/duplicates-in-character-class": {
      "type": "suggestion",
      "docs": {
        "description": "Character classes in regular expressions should not contain the same character twice",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5869/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/duplicates-in-character-class",
      "plugin": "@sonarjs"
    },
    "@sonarjs/session-regeneration": {
      "type": "problem",
      "docs": {
        "description": "A new session should be created during user authentication",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5876/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/session-regeneration",
      "plugin": "@sonarjs"
    },
    "@sonarjs/test-check-exception": {
      "type": "suggestion",
      "docs": {
        "description": "Tests should check which exception is thrown",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5958/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/test-check-exception",
      "plugin": "@sonarjs"
    },
    "@sonarjs/stable-tests": {
      "type": "suggestion",
      "docs": {
        "description": "Tests should be stable",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S5973/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/stable-tests",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-empty-after-reluctant": {
      "type": "suggestion",
      "docs": {
        "description": "Reluctant quantifiers in regular expressions should be followed by an expression that can't match the empty string",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6019/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-empty-after-reluctant",
      "plugin": "@sonarjs"
    },
    "@sonarjs/single-character-alternation": {
      "type": "suggestion",
      "docs": {
        "description": "Single-character alternations in regular expressions should be replaced with character classes",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6035/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/single-character-alternation",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-code-after-done": {
      "type": "suggestion",
      "docs": {
        "description": "Tests should not execute any code after \"done()\" is called",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6079/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-code-after-done",
      "plugin": "@sonarjs"
    },
    "@sonarjs/disabled-timeout": {
      "type": "problem",
      "docs": {
        "description": "Disabling Mocha timeouts should be explicit",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6080/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/disabled-timeout",
      "plugin": "@sonarjs"
    },
    "@sonarjs/chai-determinate-assertion": {
      "type": "suggestion",
      "docs": {
        "description": "Chai assertions should have only one reason to succeed",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6092/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/chai-determinate-assertion",
      "plugin": "@sonarjs"
    },
    "@sonarjs/aws-s3-bucket-server-encryption": {
      "type": "problem",
      "docs": {
        "description": "Disabling server-side encryption of S3 buckets is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6245/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "name": "@sonarjs/aws-s3-bucket-server-encryption",
      "plugin": "@sonarjs"
    },
    "@sonarjs/aws-s3-bucket-insecure-http": {
      "type": "problem",
      "docs": {
        "description": "Authorizing HTTP communications with S3 buckets is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6249/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/aws-s3-bucket-insecure-http",
      "plugin": "@sonarjs"
    },
    "@sonarjs/aws-s3-bucket-versioning": {
      "type": "problem",
      "docs": {
        "description": "Disabling versioning of S3 buckets is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6252/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/aws-s3-bucket-versioning",
      "plugin": "@sonarjs"
    },
    "@sonarjs/aws-s3-bucket-granted-access": {
      "type": "problem",
      "docs": {
        "description": "Granting access to S3 buckets to all or authenticated users is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6265/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/aws-s3-bucket-granted-access",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-angular-bypass-sanitization": {
      "type": "problem",
      "docs": {
        "description": "Disabling Angular built-in sanitization is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6268/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-angular-bypass-sanitization",
      "plugin": "@sonarjs"
    },
    "@sonarjs/aws-iam-public-access": {
      "type": "problem",
      "docs": {
        "description": "Policies authorizing public access to resources are security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6270/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/aws-iam-public-access",
      "plugin": "@sonarjs"
    },
    "@sonarjs/aws-ec2-unencrypted-ebs-volume": {
      "type": "problem",
      "docs": {
        "description": "Using unencrypted EBS volumes is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6275/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/aws-ec2-unencrypted-ebs-volume",
      "plugin": "@sonarjs"
    },
    "@sonarjs/aws-s3-bucket-public-access": {
      "type": "problem",
      "docs": {
        "description": "Allowing public ACLs or policies on a S3 bucket is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6281/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/aws-s3-bucket-public-access",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-vue-bypass-sanitization": {
      "type": "problem",
      "docs": {
        "description": "Disabling Vue.js built-in escaping is security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6299/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": true,
      "name": "@sonarjs/no-vue-bypass-sanitization",
      "plugin": "@sonarjs"
    },
    "@sonarjs/aws-iam-all-privileges": {
      "type": "problem",
      "docs": {
        "description": "Policies granting all privileges are security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6302/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/aws-iam-all-privileges",
      "plugin": "@sonarjs"
    },
    "@sonarjs/aws-rds-unencrypted-databases": {
      "type": "problem",
      "docs": {
        "description": "Using unencrypted RDS DB resources is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6303/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/aws-rds-unencrypted-databases",
      "plugin": "@sonarjs"
    },
    "@sonarjs/aws-iam-all-resources-accessible": {
      "type": "problem",
      "docs": {
        "description": "Policies granting access to all resources of an account are security-sensitive",
        "recommended": false,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6304/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/aws-iam-all-resources-accessible",
      "plugin": "@sonarjs"
    },
    "@sonarjs/aws-opensearchservice-domain": {
      "type": "problem",
      "docs": {
        "description": "Using unencrypted Elasticsearch domains is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6308/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/aws-opensearchservice-domain",
      "plugin": "@sonarjs"
    },
    "@sonarjs/aws-iam-privilege-escalation": {
      "type": "problem",
      "docs": {
        "description": "AWS IAM policies should limit the scope of permissions given",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6317/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/aws-iam-privilege-escalation",
      "plugin": "@sonarjs"
    },
    "@sonarjs/aws-sagemaker-unencrypted-notebook": {
      "type": "problem",
      "docs": {
        "description": "Using unencrypted SageMaker notebook instances is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6319/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/aws-sagemaker-unencrypted-notebook",
      "plugin": "@sonarjs"
    },
    "@sonarjs/aws-restricted-ip-admin-access": {
      "type": "problem",
      "docs": {
        "description": "Administration services access should be restricted to specific IP addresses",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6321/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/aws-restricted-ip-admin-access",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-empty-alternatives": {
      "type": "problem",
      "docs": {
        "description": "Alternation in regular expressions should not contain empty alternatives",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6323/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-empty-alternatives",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-control-regex": {
      "type": "problem",
      "docs": {
        "description": "Regular expressions should not contain control characters",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6324/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-control-regex",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-regex-spaces": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Regular expressions should not contain multiple spaces",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6326/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-regex-spaces",
      "plugin": "@sonarjs"
    },
    "@sonarjs/aws-sns-unencrypted-topics": {
      "type": "problem",
      "docs": {
        "description": "Using unencrypted SNS topics is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6327/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/aws-sns-unencrypted-topics",
      "plugin": "@sonarjs"
    },
    "@sonarjs/existing-groups": {
      "type": "problem",
      "docs": {
        "description": "Replacement strings should reference existing regular expression groups",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6328/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/existing-groups",
      "plugin": "@sonarjs"
    },
    "@sonarjs/aws-ec2-rds-dms-public": {
      "type": "problem",
      "docs": {
        "description": "Allowing public network access to cloud resources is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6329/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/aws-ec2-rds-dms-public",
      "plugin": "@sonarjs"
    },
    "@sonarjs/aws-sqs-unencrypted-queue": {
      "type": "problem",
      "docs": {
        "description": "Using unencrypted SQS queues is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6330/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/aws-sqs-unencrypted-queue",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-empty-group": {
      "type": "suggestion",
      "docs": {
        "description": "Regular expressions should not contain empty groups",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6331/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/no-empty-group",
      "plugin": "@sonarjs"
    },
    "@sonarjs/aws-efs-unencrypted": {
      "type": "problem",
      "docs": {
        "description": "Using unencrypted EFS file systems is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6332/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/aws-efs-unencrypted",
      "plugin": "@sonarjs"
    },
    "@sonarjs/aws-apigateway-public-api": {
      "type": "problem",
      "docs": {
        "description": "Creating public APIs is security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6333/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/aws-apigateway-public-api",
      "plugin": "@sonarjs"
    },
    "@sonarjs/stateful-regex": {
      "type": "problem",
      "docs": {
        "description": "Regular expressions with the global flag should be used with caution",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6351/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/stateful-regex",
      "plugin": "@sonarjs"
    },
    "@sonarjs/concise-regex": {
      "type": "suggestion",
      "docs": {
        "description": "Regular expression quantifiers and character classes should be used concisely",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6353/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/concise-regex",
      "plugin": "@sonarjs"
    },
    "@sonarjs/single-char-in-character-classes": {
      "type": "suggestion",
      "docs": {
        "description": "Character classes in regular expressions should not contain only one character",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6397/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/single-char-in-character-classes",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-hardcoded-secrets": {
      "type": "problem",
      "docs": {
        "description": "Hard-coded secrets are security-sensitive",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6418/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-hardcoded-secrets",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-exclusive-tests": {
      "hasSuggestions": true,
      "type": "problem",
      "docs": {
        "description": "Exclusive tests should not be commited to version control",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6426/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-exclusive-tests",
      "plugin": "@sonarjs"
    },
    "@sonarjs/jsx-no-leaked-render": {
      "hasSuggestions": true,
      "type": "problem",
      "docs": {
        "description": "React components should not render non-boolean condition values",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6439/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/jsx-no-leaked-render",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-hook-setter-in-body": {
      "type": "problem",
      "docs": {
        "description": "React's useState hook should not be used directly in the render function or body of a component",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6442/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-hook-setter-in-body",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-useless-react-setstate": {
      "type": "problem",
      "docs": {
        "description": "React state setter function should not be called with its matching state variable",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6443/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-useless-react-setstate",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-uniq-key": {
      "type": "suggestion",
      "docs": {
        "description": "JSX list components keys should match up between renders",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6486/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-uniq-key",
      "plugin": "@sonarjs"
    },
    "@sonarjs/redundant-type-aliases": {
      "type": "suggestion",
      "docs": {
        "description": "Redundant type aliases should not be used",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6564/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/redundant-type-aliases",
      "plugin": "@sonarjs"
    },
    "@sonarjs/prefer-regexp-exec": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "\"RegExp.exec()\" should be preferred over \"String.match()\"",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6594/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/prefer-regexp-exec",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-internal-api-use": {
      "type": "suggestion",
      "docs": {
        "description": "Users should not use internal APIs",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6627/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-internal-api-use",
      "plugin": "@sonarjs"
    },
    "@sonarjs/prefer-read-only-props": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "React props should be read-only",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6759/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/prefer-read-only-props",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-literal-call": {
      "type": "problem",
      "docs": {
        "description": "Literals should not be used as functions",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6958/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-literal-call",
      "plugin": "@sonarjs"
    },
    "@sonarjs/reduce-initial-value": {
      "type": "problem",
      "docs": {
        "description": "\"Array.reduce()\" calls should include an initial value",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S6959/javascript",
        "requiresTypeChecking": true
      },
      "deprecated": false,
      "name": "@sonarjs/reduce-initial-value",
      "plugin": "@sonarjs"
    },
    "@sonarjs/no-async-constructor": {
      "type": "suggestion",
      "docs": {
        "description": "Constructors should not contain asynchronous operations",
        "recommended": true,
        "url": "https://sonarsource.github.io/rspec/#/rspec/S7059/javascript",
        "requiresTypeChecking": false
      },
      "deprecated": false,
      "name": "@sonarjs/no-async-constructor",
      "plugin": "@sonarjs"
    },
    "@tw/classnames-order": {
      "docs": {
        "description": "Enforce a consistent and logical order of the Tailwind CSS classnames",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/francoismassart/eslint-plugin-tailwindcss/tree/master/docs/rules/classnames-order.md"
      },
      "fixable": "code",
      "name": "@tw/classnames-order",
      "plugin": "@tw"
    },
    "@tw/enforces-negative-arbitrary-values": {
      "docs": {
        "description": "Warns about dash prefixed classnames using arbitrary values",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://github.com/francoismassart/eslint-plugin-tailwindcss/tree/master/docs/rules/enforces-negative-arbitrary-values.md"
      },
      "fixable": null,
      "name": "@tw/enforces-negative-arbitrary-values",
      "plugin": "@tw"
    },
    "@tw/enforces-shorthand": {
      "docs": {
        "description": "Enforces the usage of shorthand Tailwind CSS classnames",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://github.com/francoismassart/eslint-plugin-tailwindcss/tree/master/docs/rules/enforces-shorthand.md"
      },
      "fixable": "code",
      "name": "@tw/enforces-shorthand",
      "plugin": "@tw"
    },
    "@tw/migration-from-tailwind-2": {
      "docs": {
        "description": "Detect obsolete classnames when upgrading to Tailwind CSS v3",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://github.com/francoismassart/eslint-plugin-tailwindcss/tree/master/docs/rules/migration-from-tailwind-2.md"
      },
      "fixable": "code",
      "name": "@tw/migration-from-tailwind-2",
      "plugin": "@tw"
    },
    "@tw/no-arbitrary-value": {
      "docs": {
        "description": "Forbid using arbitrary values in classnames",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/francoismassart/eslint-plugin-tailwindcss/tree/master/docs/rules/no-arbitrary-value.md"
      },
      "fixable": null,
      "name": "@tw/no-arbitrary-value",
      "plugin": "@tw"
    },
    "@tw/no-contradicting-classname": {
      "docs": {
        "description": "Avoid contradicting Tailwind CSS classnames (e.g. \"w-3 w-5\")",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://github.com/francoismassart/eslint-plugin-tailwindcss/tree/master/docs/rules/no-contradicting-classname.md"
      },
      "fixable": null,
      "name": "@tw/no-contradicting-classname",
      "plugin": "@tw"
    },
    "@tw/no-custom-classname": {
      "docs": {
        "description": "Detect classnames which do not belong to Tailwind CSS",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/francoismassart/eslint-plugin-tailwindcss/tree/master/docs/rules/no-custom-classname.md"
      },
      "fixable": null,
      "name": "@tw/no-custom-classname",
      "plugin": "@tw"
    },
    "@tw/no-unnecessary-arbitrary-value": {
      "docs": {
        "description": "Forbid using arbitrary values in classnames when an equivalent preset exists",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://github.com/francoismassart/eslint-plugin-tailwindcss/tree/master/docs/rules/no-unnecessary-arbitrary-value.md"
      },
      "fixable": "code",
      "name": "@tw/no-unnecessary-arbitrary-value",
      "plugin": "@tw"
    },
    "@next/google-font-display": {
      "docs": {
        "description": "Enforce font-display behavior with Google Fonts.",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/google-font-display"
      },
      "type": "problem",
      "name": "@next/google-font-display",
      "plugin": "@next"
    },
    "@next/google-font-preconnect": {
      "docs": {
        "description": "Ensure `preconnect` is used with Google Fonts.",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/google-font-preconnect"
      },
      "type": "problem",
      "name": "@next/google-font-preconnect",
      "plugin": "@next"
    },
    "@next/inline-script-id": {
      "docs": {
        "description": "Enforce `id` attribute on `next/script` components with inline content.",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/inline-script-id"
      },
      "type": "problem",
      "name": "@next/inline-script-id",
      "plugin": "@next"
    },
    "@next/next-script-for-ga": {
      "docs": {
        "description": "Prefer `next/script` component when using the inline script for Google Analytics.",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/next-script-for-ga"
      },
      "type": "problem",
      "name": "@next/next-script-for-ga",
      "plugin": "@next"
    },
    "@next/no-assign-module-variable": {
      "docs": {
        "description": "Prevent assignment to the `module` variable.",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/no-assign-module-variable"
      },
      "type": "problem",
      "name": "@next/no-assign-module-variable",
      "plugin": "@next"
    },
    "@next/no-async-client-component": {
      "docs": {
        "description": "Prevent client components from being async functions.",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/no-async-client-component"
      },
      "type": "problem",
      "name": "@next/no-async-client-component",
      "plugin": "@next"
    },
    "@next/no-before-interactive-script-outside-document": {
      "docs": {
        "description": "Prevent usage of `next/script`'s `beforeInteractive` strategy outside of `pages/_document.js`.",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/no-before-interactive-script-outside-document"
      },
      "type": "problem",
      "name": "@next/no-before-interactive-script-outside-document",
      "plugin": "@next"
    },
    "@next/no-css-tags": {
      "docs": {
        "description": "Prevent manual stylesheet tags.",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/no-css-tags"
      },
      "type": "problem",
      "name": "@next/no-css-tags",
      "plugin": "@next"
    },
    "@next/no-document-import-in-page": {
      "docs": {
        "description": "Prevent importing `next/document` outside of `pages/_document.js`.",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/no-document-import-in-page"
      },
      "type": "problem",
      "name": "@next/no-document-import-in-page",
      "plugin": "@next"
    },
    "@next/no-duplicate-head": {
      "docs": {
        "description": "Prevent duplicate usage of `<Head>` in `pages/_document.js`.",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/no-duplicate-head"
      },
      "type": "problem",
      "name": "@next/no-duplicate-head",
      "plugin": "@next"
    },
    "@next/no-head-element": {
      "docs": {
        "description": "Prevent usage of `<head>` element.",
        "category": "HTML",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/no-head-element"
      },
      "type": "problem",
      "name": "@next/no-head-element",
      "plugin": "@next"
    },
    "@next/no-head-import-in-document": {
      "docs": {
        "description": "Prevent usage of `next/head` in `pages/_document.js`.",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/no-head-import-in-document"
      },
      "type": "problem",
      "name": "@next/no-head-import-in-document",
      "plugin": "@next"
    },
    "@next/no-html-link-for-pages": {
      "docs": {
        "description": "Prevent usage of `<a>` elements to navigate to internal Next.js pages.",
        "category": "HTML",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/no-html-link-for-pages"
      },
      "type": "problem",
      "name": "@next/no-html-link-for-pages",
      "plugin": "@next"
    },
    "@next/no-img-element": {
      "docs": {
        "description": "Prevent usage of `<img>` element due to slower LCP and higher bandwidth.",
        "category": "HTML",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/no-img-element"
      },
      "type": "problem",
      "name": "@next/no-img-element",
      "plugin": "@next"
    },
    "@next/no-page-custom-font": {
      "docs": {
        "description": "Prevent page-only custom fonts.",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/no-page-custom-font"
      },
      "type": "problem",
      "name": "@next/no-page-custom-font",
      "plugin": "@next"
    },
    "@next/no-script-component-in-head": {
      "docs": {
        "description": "Prevent usage of `next/script` in `next/head` component.",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/no-script-component-in-head"
      },
      "type": "problem",
      "name": "@next/no-script-component-in-head",
      "plugin": "@next"
    },
    "@next/no-styled-jsx-in-document": {
      "docs": {
        "description": "Prevent usage of `styled-jsx` in `pages/_document.js`.",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/no-styled-jsx-in-document"
      },
      "type": "problem",
      "name": "@next/no-styled-jsx-in-document",
      "plugin": "@next"
    },
    "@next/no-sync-scripts": {
      "docs": {
        "description": "Prevent synchronous scripts.",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/no-sync-scripts"
      },
      "type": "problem",
      "name": "@next/no-sync-scripts",
      "plugin": "@next"
    },
    "@next/no-title-in-document-head": {
      "docs": {
        "description": "Prevent usage of `<title>` with `Head` component from `next/document`.",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/no-title-in-document-head"
      },
      "type": "problem",
      "name": "@next/no-title-in-document-head",
      "plugin": "@next"
    },
    "@next/no-typos": {
      "docs": {
        "description": "Prevent common typos in Next.js data fetching functions.",
        "recommended": true
      },
      "type": "problem",
      "name": "@next/no-typos",
      "plugin": "@next"
    },
    "@next/no-unwanted-polyfillio": {
      "docs": {
        "description": "Prevent duplicate polyfills from Polyfill.io.",
        "category": "HTML",
        "recommended": true,
        "url": "https://nextjs.org/docs/messages/no-unwanted-polyfillio"
      },
      "type": "problem",
      "name": "@next/no-unwanted-polyfillio",
      "plugin": "@next"
    },
    "@ts/adjacent-overload-signatures": {
      "type": "suggestion",
      "docs": {
        "description": "Require that function overload signatures be consecutive",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/adjacent-overload-signatures"
      },
      "name": "@ts/adjacent-overload-signatures",
      "plugin": "@ts"
    },
    "@ts/array-type": {
      "type": "suggestion",
      "docs": {
        "description": "Require consistently using either `T[]` or `Array<T>` for arrays",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/array-type"
      },
      "fixable": "code",
      "name": "@ts/array-type",
      "plugin": "@ts"
    },
    "@ts/await-thenable": {
      "type": "problem",
      "docs": {
        "description": "Disallow awaiting a value that is not a Thenable",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/await-thenable"
      },
      "hasSuggestions": true,
      "name": "@ts/await-thenable",
      "plugin": "@ts"
    },
    "@ts/ban-ts-comment": {
      "type": "problem",
      "docs": {
        "description": "Disallow `@ts-<directive>` comments or require descriptions after directives",
        "recommended": {
          "recommended": true,
          "strict": [
            {
              "minimumDescriptionLength": 10
            }
          ]
        },
        "url": "https://typescript-eslint.io/rules/ban-ts-comment"
      },
      "hasSuggestions": true,
      "name": "@ts/ban-ts-comment",
      "plugin": "@ts"
    },
    "@ts/ban-tslint-comment": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `// tslint:<rule-flag>` comments",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/ban-tslint-comment"
      },
      "fixable": "code",
      "name": "@ts/ban-tslint-comment",
      "plugin": "@ts"
    },
    "@ts/class-literal-property-style": {
      "type": "problem",
      "docs": {
        "description": "Enforce that literals on classes are exposed in a consistent style",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/class-literal-property-style"
      },
      "hasSuggestions": true,
      "name": "@ts/class-literal-property-style",
      "plugin": "@ts"
    },
    "@ts/class-methods-use-this": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce that class methods utilize `this`",
        "extendsBaseRule": true,
        "requiresTypeChecking": false,
        "url": "https://typescript-eslint.io/rules/class-methods-use-this"
      },
      "name": "@ts/class-methods-use-this",
      "plugin": "@ts"
    },
    "@ts/consistent-generic-constructors": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce specifying generic type arguments on type annotation or constructor name of a constructor call",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/consistent-generic-constructors"
      },
      "fixable": "code",
      "name": "@ts/consistent-generic-constructors",
      "plugin": "@ts"
    },
    "@ts/consistent-indexed-object-style": {
      "type": "suggestion",
      "docs": {
        "description": "Require or disallow the `Record` type",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/consistent-indexed-object-style"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@ts/consistent-indexed-object-style",
      "plugin": "@ts"
    },
    "@ts/consistent-return": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "treatUndefinedAsUnspecified": false
        }
      ],
      "docs": {
        "description": "Require `return` statements to either always or never specify values",
        "extendsBaseRule": true,
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/consistent-return"
      },
      "name": "@ts/consistent-return",
      "plugin": "@ts"
    },
    "@ts/consistent-type-assertions": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent usage of type assertions",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/consistent-type-assertions"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@ts/consistent-type-assertions",
      "plugin": "@ts"
    },
    "@ts/consistent-type-definitions": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce type definitions to consistently use either `interface` or `type`",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/consistent-type-definitions"
      },
      "fixable": "code",
      "name": "@ts/consistent-type-definitions",
      "plugin": "@ts"
    },
    "@ts/consistent-type-exports": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent usage of type exports",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/consistent-type-exports"
      },
      "fixable": "code",
      "name": "@ts/consistent-type-exports",
      "plugin": "@ts"
    },
    "@ts/consistent-type-imports": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent usage of type imports",
        "url": "https://typescript-eslint.io/rules/consistent-type-imports"
      },
      "fixable": "code",
      "name": "@ts/consistent-type-imports",
      "plugin": "@ts"
    },
    "@ts/default-param-last": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce default parameters to be last",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/default-param-last"
      },
      "name": "@ts/default-param-last",
      "plugin": "@ts"
    },
    "@ts/dot-notation": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowIndexSignaturePropertyAccess": false,
          "allowKeywords": true,
          "allowPattern": "",
          "allowPrivateClassPropertyAccess": false,
          "allowProtectedClassPropertyAccess": false
        }
      ],
      "docs": {
        "description": "Enforce dot notation whenever possible",
        "extendsBaseRule": true,
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/dot-notation"
      },
      "fixable": "code",
      "name": "@ts/dot-notation",
      "plugin": "@ts"
    },
    "@ts/explicit-function-return-type": {
      "type": "problem",
      "docs": {
        "description": "Require explicit return types on functions and class methods",
        "url": "https://typescript-eslint.io/rules/explicit-function-return-type"
      },
      "name": "@ts/explicit-function-return-type",
      "plugin": "@ts"
    },
    "@ts/explicit-member-accessibility": {
      "type": "problem",
      "docs": {
        "description": "Require explicit accessibility modifiers on class properties and methods",
        "url": "https://typescript-eslint.io/rules/explicit-member-accessibility"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@ts/explicit-member-accessibility",
      "plugin": "@ts"
    },
    "@ts/explicit-module-boundary-types": {
      "type": "problem",
      "docs": {
        "description": "Require explicit return and argument types on exported functions' and classes' public class methods",
        "url": "https://typescript-eslint.io/rules/explicit-module-boundary-types"
      },
      "name": "@ts/explicit-module-boundary-types",
      "plugin": "@ts"
    },
    "@ts/init-declarations": {
      "type": "suggestion",
      "docs": {
        "description": "Require or disallow initialization in variable declarations",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/init-declarations"
      },
      "name": "@ts/init-declarations",
      "plugin": "@ts"
    },
    "@ts/max-params": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum number of parameters in function definitions",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/max-params"
      },
      "name": "@ts/max-params",
      "plugin": "@ts"
    },
    "@ts/member-ordering": {
      "type": "suggestion",
      "docs": {
        "description": "Require a consistent member declaration order",
        "url": "https://typescript-eslint.io/rules/member-ordering"
      },
      "name": "@ts/member-ordering",
      "plugin": "@ts"
    },
    "@ts/method-signature-style": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using a particular method signature syntax",
        "url": "https://typescript-eslint.io/rules/method-signature-style"
      },
      "fixable": "code",
      "name": "@ts/method-signature-style",
      "plugin": "@ts"
    },
    "@ts/naming-convention": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce naming conventions for everything across a codebase",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/naming-convention"
      },
      "name": "@ts/naming-convention",
      "plugin": "@ts"
    },
    "@ts/no-array-constructor": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow generic `Array` constructors",
        "extendsBaseRule": true,
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-array-constructor"
      },
      "fixable": "code",
      "name": "@ts/no-array-constructor",
      "plugin": "@ts"
    },
    "@ts/no-array-delete": {
      "type": "problem",
      "docs": {
        "description": "Disallow using the `delete` operator on array values",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-array-delete"
      },
      "hasSuggestions": true,
      "name": "@ts/no-array-delete",
      "plugin": "@ts"
    },
    "@ts/no-base-to-string": {
      "type": "suggestion",
      "docs": {
        "description": "Require `.toString()` and `.toLocaleString()` to only be called on objects which provide useful information when stringified",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-base-to-string"
      },
      "name": "@ts/no-base-to-string",
      "plugin": "@ts"
    },
    "@ts/no-confusing-non-null-assertion": {
      "type": "problem",
      "docs": {
        "description": "Disallow non-null assertion in locations that may be confusing",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/no-confusing-non-null-assertion"
      },
      "hasSuggestions": true,
      "name": "@ts/no-confusing-non-null-assertion",
      "plugin": "@ts"
    },
    "@ts/no-confusing-void-expression": {
      "type": "problem",
      "docs": {
        "description": "Require expressions of type void to appear in statement position",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-confusing-void-expression"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@ts/no-confusing-void-expression",
      "plugin": "@ts"
    },
    "@ts/no-deprecated": {
      "type": "problem",
      "docs": {
        "description": "Disallow using code marked as `@deprecated`",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-deprecated"
      },
      "name": "@ts/no-deprecated",
      "plugin": "@ts"
    },
    "@ts/no-dupe-class-members": {
      "type": "problem",
      "docs": {
        "description": "Disallow duplicate class members",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-dupe-class-members"
      },
      "name": "@ts/no-dupe-class-members",
      "plugin": "@ts"
    },
    "@ts/no-duplicate-enum-values": {
      "type": "problem",
      "docs": {
        "description": "Disallow duplicate enum member values",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-duplicate-enum-values"
      },
      "hasSuggestions": false,
      "name": "@ts/no-duplicate-enum-values",
      "plugin": "@ts"
    },
    "@ts/no-duplicate-type-constituents": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow duplicate constituents of union or intersection types",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-duplicate-type-constituents"
      },
      "fixable": "code",
      "name": "@ts/no-duplicate-type-constituents",
      "plugin": "@ts"
    },
    "@ts/no-dynamic-delete": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using the `delete` operator on computed key expressions",
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/no-dynamic-delete"
      },
      "fixable": "code",
      "name": "@ts/no-dynamic-delete",
      "plugin": "@ts"
    },
    "@ts/no-empty-function": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allow": []
        }
      ],
      "docs": {
        "description": "Disallow empty functions",
        "extendsBaseRule": true,
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/no-empty-function"
      },
      "name": "@ts/no-empty-function",
      "plugin": "@ts"
    },
    "@ts/no-empty-interface": {
      "type": "suggestion",
      "deprecated": true,
      "docs": {
        "description": "Disallow the declaration of empty interfaces",
        "url": "https://typescript-eslint.io/rules/no-empty-interface"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "replacedBy": [
        "@typescript-eslint/no-empty-object-type"
      ],
      "name": "@ts/no-empty-interface",
      "plugin": "@ts"
    },
    "@ts/no-empty-object-type": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow accidentally using the \"empty object\" type",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-empty-object-type"
      },
      "hasSuggestions": true,
      "name": "@ts/no-empty-object-type",
      "plugin": "@ts"
    },
    "@ts/no-explicit-any": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the `any` type",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-explicit-any"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@ts/no-explicit-any",
      "plugin": "@ts"
    },
    "@ts/no-extra-non-null-assertion": {
      "type": "problem",
      "docs": {
        "description": "Disallow extra non-null assertions",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-extra-non-null-assertion"
      },
      "fixable": "code",
      "name": "@ts/no-extra-non-null-assertion",
      "plugin": "@ts"
    },
    "@ts/no-extraneous-class": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow classes used as namespaces",
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/no-extraneous-class"
      },
      "name": "@ts/no-extraneous-class",
      "plugin": "@ts"
    },
    "@ts/no-floating-promises": {
      "type": "problem",
      "docs": {
        "description": "Require Promise-like statements to be handled appropriately",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-floating-promises"
      },
      "hasSuggestions": true,
      "name": "@ts/no-floating-promises",
      "plugin": "@ts"
    },
    "@ts/no-for-in-array": {
      "type": "problem",
      "docs": {
        "description": "Disallow iterating over an array with a for-in loop",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-for-in-array"
      },
      "name": "@ts/no-for-in-array",
      "plugin": "@ts"
    },
    "@ts/no-implied-eval": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `eval()`-like methods",
        "extendsBaseRule": true,
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-implied-eval"
      },
      "name": "@ts/no-implied-eval",
      "plugin": "@ts"
    },
    "@ts/no-import-type-side-effects": {
      "type": "problem",
      "docs": {
        "description": "Enforce the use of top-level import type qualifier when an import only has specifiers with inline type qualifiers",
        "url": "https://typescript-eslint.io/rules/no-import-type-side-effects"
      },
      "fixable": "code",
      "name": "@ts/no-import-type-side-effects",
      "plugin": "@ts"
    },
    "@ts/no-inferrable-types": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow explicit type declarations for variables or parameters initialized to a number, string, or boolean",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/no-inferrable-types"
      },
      "fixable": "code",
      "name": "@ts/no-inferrable-types",
      "plugin": "@ts"
    },
    "@ts/no-invalid-this": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "capIsConstructor": true
        }
      ],
      "docs": {
        "description": "Disallow `this` keywords outside of classes or class-like objects",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-invalid-this"
      },
      "name": "@ts/no-invalid-this",
      "plugin": "@ts"
    },
    "@ts/no-invalid-void-type": {
      "type": "problem",
      "docs": {
        "description": "Disallow `void` type outside of generic or return types",
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/no-invalid-void-type"
      },
      "name": "@ts/no-invalid-void-type",
      "plugin": "@ts"
    },
    "@ts/no-loop-func": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow function declarations that contain unsafe references inside loop statements",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-loop-func"
      },
      "name": "@ts/no-loop-func",
      "plugin": "@ts"
    },
    "@ts/no-loss-of-precision": {
      "type": "problem",
      "deprecated": true,
      "docs": {
        "description": "Disallow literal numbers that lose precision",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-loss-of-precision"
      },
      "name": "@ts/no-loss-of-precision",
      "plugin": "@ts"
    },
    "@ts/no-magic-numbers": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow magic numbers",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-magic-numbers"
      },
      "name": "@ts/no-magic-numbers",
      "plugin": "@ts"
    },
    "@ts/no-meaningless-void-operator": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the `void` operator except when used to discard a value",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-meaningless-void-operator"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@ts/no-meaningless-void-operator",
      "plugin": "@ts"
    },
    "@ts/no-misused-new": {
      "type": "problem",
      "docs": {
        "description": "Enforce valid definition of `new` and `constructor`",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-misused-new"
      },
      "name": "@ts/no-misused-new",
      "plugin": "@ts"
    },
    "@ts/no-misused-promises": {
      "type": "problem",
      "docs": {
        "description": "Disallow Promises in places not designed to handle them",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-misused-promises"
      },
      "name": "@ts/no-misused-promises",
      "plugin": "@ts"
    },
    "@ts/no-mixed-enums": {
      "type": "problem",
      "docs": {
        "description": "Disallow enums from having both number and string members",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-mixed-enums"
      },
      "name": "@ts/no-mixed-enums",
      "plugin": "@ts"
    },
    "@ts/no-namespace": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow TypeScript namespaces",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-namespace"
      },
      "name": "@ts/no-namespace",
      "plugin": "@ts"
    },
    "@ts/no-non-null-asserted-nullish-coalescing": {
      "type": "problem",
      "docs": {
        "description": "Disallow non-null assertions in the left operand of a nullish coalescing operator",
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/no-non-null-asserted-nullish-coalescing"
      },
      "hasSuggestions": true,
      "name": "@ts/no-non-null-asserted-nullish-coalescing",
      "plugin": "@ts"
    },
    "@ts/no-non-null-asserted-optional-chain": {
      "type": "problem",
      "docs": {
        "description": "Disallow non-null assertions after an optional chain expression",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-non-null-asserted-optional-chain"
      },
      "hasSuggestions": true,
      "name": "@ts/no-non-null-asserted-optional-chain",
      "plugin": "@ts"
    },
    "@ts/no-non-null-assertion": {
      "type": "problem",
      "docs": {
        "description": "Disallow non-null assertions using the `!` postfix operator",
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/no-non-null-assertion"
      },
      "hasSuggestions": true,
      "name": "@ts/no-non-null-assertion",
      "plugin": "@ts"
    },
    "@ts/no-redeclare": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow variable redeclaration",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-redeclare"
      },
      "name": "@ts/no-redeclare",
      "plugin": "@ts"
    },
    "@ts/no-redundant-type-constituents": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow members of unions and intersections that do nothing or override type information",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-redundant-type-constituents"
      },
      "name": "@ts/no-redundant-type-constituents",
      "plugin": "@ts"
    },
    "@ts/no-require-imports": {
      "type": "problem",
      "docs": {
        "description": "Disallow invocation of `require()`",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-require-imports"
      },
      "name": "@ts/no-require-imports",
      "plugin": "@ts"
    },
    "@ts/no-restricted-imports": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified modules when loaded by `import`",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-restricted-imports"
      },
      "name": "@ts/no-restricted-imports",
      "plugin": "@ts"
    },
    "@ts/no-restricted-types": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow certain types",
        "url": "https://typescript-eslint.io/rules/no-restricted-types"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@ts/no-restricted-types",
      "plugin": "@ts"
    },
    "@ts/no-shadow": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow variable declarations from shadowing variables declared in the outer scope",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-shadow"
      },
      "name": "@ts/no-shadow",
      "plugin": "@ts"
    },
    "@ts/no-this-alias": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow aliasing `this`",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-this-alias"
      },
      "name": "@ts/no-this-alias",
      "plugin": "@ts"
    },
    "@ts/no-type-alias": {
      "type": "suggestion",
      "deprecated": true,
      "docs": {
        "description": "Disallow type aliases",
        "url": "https://typescript-eslint.io/rules/no-type-alias"
      },
      "name": "@ts/no-type-alias",
      "plugin": "@ts"
    },
    "@ts/no-unnecessary-boolean-literal-compare": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary equality comparisons against boolean literals",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-boolean-literal-compare"
      },
      "fixable": "code",
      "name": "@ts/no-unnecessary-boolean-literal-compare",
      "plugin": "@ts"
    },
    "@ts/no-unnecessary-condition": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow conditionals where the type is always truthy or always falsy",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-condition"
      },
      "fixable": "code",
      "name": "@ts/no-unnecessary-condition",
      "plugin": "@ts"
    },
    "@ts/no-unnecessary-parameter-property-assignment": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary assignment of constructor property parameter",
        "url": "https://typescript-eslint.io/rules/no-unnecessary-parameter-property-assignment"
      },
      "name": "@ts/no-unnecessary-parameter-property-assignment",
      "plugin": "@ts"
    },
    "@ts/no-unnecessary-qualifier": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary namespace qualifiers",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-qualifier"
      },
      "fixable": "code",
      "name": "@ts/no-unnecessary-qualifier",
      "plugin": "@ts"
    },
    "@ts/no-unnecessary-template-expression": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary template expressions",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-template-expression"
      },
      "fixable": "code",
      "name": "@ts/no-unnecessary-template-expression",
      "plugin": "@ts"
    },
    "@ts/no-unnecessary-type-arguments": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow type arguments that are equal to the default",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-type-arguments"
      },
      "fixable": "code",
      "name": "@ts/no-unnecessary-type-arguments",
      "plugin": "@ts"
    },
    "@ts/no-unnecessary-type-assertion": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow type assertions that do not change the type of an expression",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-type-assertion"
      },
      "fixable": "code",
      "name": "@ts/no-unnecessary-type-assertion",
      "plugin": "@ts"
    },
    "@ts/no-unnecessary-type-constraint": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary constraints on generic types",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-unnecessary-type-constraint"
      },
      "hasSuggestions": true,
      "name": "@ts/no-unnecessary-type-constraint",
      "plugin": "@ts"
    },
    "@ts/no-unnecessary-type-parameters": {
      "type": "problem",
      "docs": {
        "description": "Disallow type parameters that aren't used multiple times",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-type-parameters"
      },
      "hasSuggestions": true,
      "name": "@ts/no-unnecessary-type-parameters",
      "plugin": "@ts"
    },
    "@ts/no-unsafe-argument": {
      "type": "problem",
      "docs": {
        "description": "Disallow calling a function with a value with type `any`",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-argument"
      },
      "name": "@ts/no-unsafe-argument",
      "plugin": "@ts"
    },
    "@ts/no-unsafe-assignment": {
      "type": "problem",
      "docs": {
        "description": "Disallow assigning a value with type `any` to variables and properties",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-assignment"
      },
      "name": "@ts/no-unsafe-assignment",
      "plugin": "@ts"
    },
    "@ts/no-unsafe-call": {
      "type": "problem",
      "docs": {
        "description": "Disallow calling a value with type `any`",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-call"
      },
      "name": "@ts/no-unsafe-call",
      "plugin": "@ts"
    },
    "@ts/no-unsafe-declaration-merging": {
      "type": "problem",
      "docs": {
        "description": "Disallow unsafe declaration merging",
        "recommended": "recommended",
        "requiresTypeChecking": false,
        "url": "https://typescript-eslint.io/rules/no-unsafe-declaration-merging"
      },
      "name": "@ts/no-unsafe-declaration-merging",
      "plugin": "@ts"
    },
    "@ts/no-unsafe-enum-comparison": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow comparing an enum value with a non-enum value",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-enum-comparison"
      },
      "hasSuggestions": true,
      "name": "@ts/no-unsafe-enum-comparison",
      "plugin": "@ts"
    },
    "@ts/no-unsafe-function-type": {
      "type": "problem",
      "docs": {
        "description": "Disallow using the unsafe built-in Function type",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-unsafe-function-type"
      },
      "fixable": "code",
      "name": "@ts/no-unsafe-function-type",
      "plugin": "@ts"
    },
    "@ts/no-unsafe-member-access": {
      "type": "problem",
      "docs": {
        "description": "Disallow member access on a value with type `any`",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-member-access"
      },
      "name": "@ts/no-unsafe-member-access",
      "plugin": "@ts"
    },
    "@ts/no-unsafe-return": {
      "type": "problem",
      "docs": {
        "description": "Disallow returning a value with type `any` from a function",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-return"
      },
      "name": "@ts/no-unsafe-return",
      "plugin": "@ts"
    },
    "@ts/no-unsafe-type-assertion": {
      "type": "problem",
      "docs": {
        "description": "Disallow type assertions that narrow a type",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-type-assertion"
      },
      "name": "@ts/no-unsafe-type-assertion",
      "plugin": "@ts"
    },
    "@ts/no-unsafe-unary-minus": {
      "type": "problem",
      "docs": {
        "description": "Require unary negation to take a number",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-unary-minus"
      },
      "name": "@ts/no-unsafe-unary-minus",
      "plugin": "@ts"
    },
    "@ts/no-unused-expressions": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowShortCircuit": false,
          "allowTaggedTemplates": false,
          "allowTernary": false
        }
      ],
      "docs": {
        "description": "Disallow unused expressions",
        "extendsBaseRule": true,
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-unused-expressions"
      },
      "name": "@ts/no-unused-expressions",
      "plugin": "@ts"
    },
    "@ts/no-unused-vars": {
      "type": "problem",
      "docs": {
        "description": "Disallow unused variables",
        "extendsBaseRule": true,
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-unused-vars"
      },
      "name": "@ts/no-unused-vars",
      "plugin": "@ts"
    },
    "@ts/no-use-before-define": {
      "type": "problem",
      "docs": {
        "description": "Disallow the use of variables before they are defined",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-use-before-define"
      },
      "name": "@ts/no-use-before-define",
      "plugin": "@ts"
    },
    "@ts/no-useless-constructor": {
      "type": "problem",
      "docs": {
        "description": "Disallow unnecessary constructors",
        "extendsBaseRule": true,
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/no-useless-constructor"
      },
      "hasSuggestions": true,
      "name": "@ts/no-useless-constructor",
      "plugin": "@ts"
    },
    "@ts/no-useless-empty-export": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow empty exports that don't change anything in a module file",
        "url": "https://typescript-eslint.io/rules/no-useless-empty-export"
      },
      "fixable": "code",
      "hasSuggestions": false,
      "name": "@ts/no-useless-empty-export",
      "plugin": "@ts"
    },
    "@ts/no-var-requires": {
      "type": "problem",
      "deprecated": true,
      "docs": {
        "description": "Disallow `require` statements except in import statements",
        "url": "https://typescript-eslint.io/rules/no-var-requires"
      },
      "replacedBy": [
        "@typescript-eslint/no-require-imports"
      ],
      "name": "@ts/no-var-requires",
      "plugin": "@ts"
    },
    "@ts/no-wrapper-object-types": {
      "type": "problem",
      "docs": {
        "description": "Disallow using confusing built-in primitive class wrappers",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-wrapper-object-types"
      },
      "fixable": "code",
      "name": "@ts/no-wrapper-object-types",
      "plugin": "@ts"
    },
    "@ts/non-nullable-type-assertion-style": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce non-null assertions over explicit type assertions",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/non-nullable-type-assertion-style"
      },
      "fixable": "code",
      "name": "@ts/non-nullable-type-assertion-style",
      "plugin": "@ts"
    },
    "@ts/only-throw-error": {
      "type": "problem",
      "docs": {
        "description": "Disallow throwing non-`Error` values as exceptions",
        "extendsBaseRule": "no-throw-literal",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/only-throw-error"
      },
      "name": "@ts/only-throw-error",
      "plugin": "@ts"
    },
    "@ts/parameter-properties": {
      "type": "problem",
      "docs": {
        "description": "Require or disallow parameter properties in class constructors",
        "url": "https://typescript-eslint.io/rules/parameter-properties"
      },
      "name": "@ts/parameter-properties",
      "plugin": "@ts"
    },
    "@ts/prefer-as-const": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of `as const` over literal type",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/prefer-as-const"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@ts/prefer-as-const",
      "plugin": "@ts"
    },
    "@ts/prefer-destructuring": {
      "type": "suggestion",
      "docs": {
        "description": "Require destructuring from arrays and/or objects",
        "extendsBaseRule": true,
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-destructuring"
      },
      "fixable": "code",
      "name": "@ts/prefer-destructuring",
      "plugin": "@ts"
    },
    "@ts/prefer-enum-initializers": {
      "type": "suggestion",
      "docs": {
        "description": "Require each enum member value to be explicitly initialized",
        "url": "https://typescript-eslint.io/rules/prefer-enum-initializers"
      },
      "hasSuggestions": true,
      "name": "@ts/prefer-enum-initializers",
      "plugin": "@ts"
    },
    "@ts/prefer-find": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of Array.prototype.find() over Array.prototype.filter() followed by [0] when looking for a single result",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-find"
      },
      "hasSuggestions": true,
      "name": "@ts/prefer-find",
      "plugin": "@ts"
    },
    "@ts/prefer-for-of": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of `for-of` loop over the standard `for` loop where possible",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/prefer-for-of"
      },
      "name": "@ts/prefer-for-of",
      "plugin": "@ts"
    },
    "@ts/prefer-function-type": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using function types instead of interfaces with call signatures",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/prefer-function-type"
      },
      "fixable": "code",
      "name": "@ts/prefer-function-type",
      "plugin": "@ts"
    },
    "@ts/prefer-includes": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce `includes` method over `indexOf` method",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-includes"
      },
      "fixable": "code",
      "name": "@ts/prefer-includes",
      "plugin": "@ts"
    },
    "@ts/prefer-literal-enum-member": {
      "type": "suggestion",
      "docs": {
        "description": "Require all enum members to be literal values",
        "recommended": "strict",
        "requiresTypeChecking": false,
        "url": "https://typescript-eslint.io/rules/prefer-literal-enum-member"
      },
      "name": "@ts/prefer-literal-enum-member",
      "plugin": "@ts"
    },
    "@ts/prefer-namespace-keyword": {
      "type": "suggestion",
      "docs": {
        "description": "Require using `namespace` keyword over `module` keyword to declare custom TypeScript modules",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/prefer-namespace-keyword"
      },
      "fixable": "code",
      "name": "@ts/prefer-namespace-keyword",
      "plugin": "@ts"
    },
    "@ts/prefer-nullish-coalescing": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using the nullish coalescing operator instead of logical assignments or chaining",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-nullish-coalescing"
      },
      "hasSuggestions": true,
      "name": "@ts/prefer-nullish-coalescing",
      "plugin": "@ts"
    },
    "@ts/prefer-optional-chain": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using concise optional chain expressions instead of chained logical ands, negated logical ors, or empty objects",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-optional-chain"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@ts/prefer-optional-chain",
      "plugin": "@ts"
    },
    "@ts/prefer-promise-reject-errors": {
      "type": "suggestion",
      "docs": {
        "description": "Require using Error objects as Promise rejection reasons",
        "extendsBaseRule": true,
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-promise-reject-errors"
      },
      "name": "@ts/prefer-promise-reject-errors",
      "plugin": "@ts"
    },
    "@ts/prefer-readonly": {
      "type": "suggestion",
      "docs": {
        "description": "Require private members to be marked as `readonly` if they're never modified outside of the constructor",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-readonly"
      },
      "fixable": "code",
      "name": "@ts/prefer-readonly",
      "plugin": "@ts"
    },
    "@ts/prefer-readonly-parameter-types": {
      "type": "suggestion",
      "docs": {
        "description": "Require function parameters to be typed as `readonly` to prevent accidental mutation of inputs",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-readonly-parameter-types"
      },
      "name": "@ts/prefer-readonly-parameter-types",
      "plugin": "@ts"
    },
    "@ts/prefer-reduce-type-parameter": {
      "type": "problem",
      "docs": {
        "description": "Enforce using type parameter when calling `Array#reduce` instead of using a type assertion",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-reduce-type-parameter"
      },
      "fixable": "code",
      "name": "@ts/prefer-reduce-type-parameter",
      "plugin": "@ts"
    },
    "@ts/prefer-regexp-exec": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce `RegExp#exec` over `String#match` if no global flag is provided",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-regexp-exec"
      },
      "fixable": "code",
      "name": "@ts/prefer-regexp-exec",
      "plugin": "@ts"
    },
    "@ts/prefer-return-this-type": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce that `this` is used when only `this` type is returned",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-return-this-type"
      },
      "fixable": "code",
      "name": "@ts/prefer-return-this-type",
      "plugin": "@ts"
    },
    "@ts/prefer-string-starts-ends-with": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using `String#startsWith` and `String#endsWith` over other equivalent methods of checking substrings",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-string-starts-ends-with"
      },
      "fixable": "code",
      "name": "@ts/prefer-string-starts-ends-with",
      "plugin": "@ts"
    },
    "@ts/prefer-ts-expect-error": {
      "type": "problem",
      "deprecated": true,
      "docs": {
        "description": "Enforce using `@ts-expect-error` over `@ts-ignore`",
        "url": "https://typescript-eslint.io/rules/prefer-ts-expect-error"
      },
      "fixable": "code",
      "replacedBy": [
        "@typescript-eslint/ban-ts-comment"
      ],
      "name": "@ts/prefer-ts-expect-error",
      "plugin": "@ts"
    },
    "@ts/promise-function-async": {
      "type": "suggestion",
      "docs": {
        "description": "Require any function or method that returns a Promise to be marked async",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/promise-function-async"
      },
      "fixable": "code",
      "name": "@ts/promise-function-async",
      "plugin": "@ts"
    },
    "@ts/related-getter-setter-pairs": {
      "type": "problem",
      "docs": {
        "description": "Enforce that `get()` types should be assignable to their equivalent `set()` type",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/related-getter-setter-pairs"
      },
      "name": "@ts/related-getter-setter-pairs",
      "plugin": "@ts"
    },
    "@ts/require-array-sort-compare": {
      "type": "problem",
      "docs": {
        "description": "Require `Array#sort` and `Array#toSorted` calls to always provide a `compareFunction`",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/require-array-sort-compare"
      },
      "name": "@ts/require-array-sort-compare",
      "plugin": "@ts"
    },
    "@ts/require-await": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow async functions which do not return promises and have no `await` expression",
        "extendsBaseRule": true,
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/require-await"
      },
      "hasSuggestions": true,
      "name": "@ts/require-await",
      "plugin": "@ts"
    },
    "@ts/restrict-plus-operands": {
      "type": "problem",
      "docs": {
        "description": "Require both operands of addition to be the same type and be `bigint`, `number`, or `string`",
        "recommended": {
          "recommended": true,
          "strict": [
            {
              "allowAny": false,
              "allowBoolean": false,
              "allowNullish": false,
              "allowNumberAndString": false,
              "allowRegExp": false
            }
          ]
        },
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/restrict-plus-operands"
      },
      "name": "@ts/restrict-plus-operands",
      "plugin": "@ts"
    },
    "@ts/restrict-template-expressions": {
      "type": "problem",
      "docs": {
        "description": "Enforce template literal expressions to be of `string` type",
        "recommended": {
          "recommended": true,
          "strict": [
            {
              "allowAny": false,
              "allowBoolean": false,
              "allowNever": false,
              "allowNullish": false,
              "allowNumber": false,
              "allowRegExp": false
            }
          ]
        },
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/restrict-template-expressions"
      },
      "name": "@ts/restrict-template-expressions",
      "plugin": "@ts"
    },
    "@ts/return-await": {
      "type": "problem",
      "docs": {
        "description": "Enforce consistent awaiting of returned promises",
        "extendsBaseRule": "no-return-await",
        "recommended": {
          "strict": [
            "error-handling-correctness-only"
          ]
        },
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/return-await"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@ts/return-await",
      "plugin": "@ts"
    },
    "@ts/sort-type-constituents": {
      "type": "suggestion",
      "deprecated": true,
      "docs": {
        "description": "Enforce constituents of a type union/intersection to be sorted alphabetically",
        "url": "https://typescript-eslint.io/rules/sort-type-constituents"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "replacedBy": [
        "perfectionist/sort-intersection-types",
        "perfectionist/sort-union-types"
      ],
      "name": "@ts/sort-type-constituents",
      "plugin": "@ts"
    },
    "@ts/strict-boolean-expressions": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow certain types in boolean expressions",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/strict-boolean-expressions"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@ts/strict-boolean-expressions",
      "plugin": "@ts"
    },
    "@ts/switch-exhaustiveness-check": {
      "type": "suggestion",
      "docs": {
        "description": "Require switch-case statements to be exhaustive",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/switch-exhaustiveness-check"
      },
      "hasSuggestions": true,
      "name": "@ts/switch-exhaustiveness-check",
      "plugin": "@ts"
    },
    "@ts/triple-slash-reference": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow certain triple slash directives in favor of ES6-style import declarations",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/triple-slash-reference"
      },
      "name": "@ts/triple-slash-reference",
      "plugin": "@ts"
    },
    "@ts/typedef": {
      "type": "suggestion",
      "docs": {
        "description": "Require type annotations in certain places",
        "url": "https://typescript-eslint.io/rules/typedef"
      },
      "name": "@ts/typedef",
      "plugin": "@ts"
    },
    "@ts/unbound-method": {
      "type": "problem",
      "docs": {
        "description": "Enforce unbound methods are called with their expected scope",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/unbound-method"
      },
      "name": "@ts/unbound-method",
      "plugin": "@ts"
    },
    "@ts/unified-signatures": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow two overloads that could be unified into one with a union or an optional/rest parameter",
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/unified-signatures"
      },
      "name": "@ts/unified-signatures",
      "plugin": "@ts"
    },
    "@ts/use-unknown-in-catch-callback-variable": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce typing arguments in Promise rejection callbacks as `unknown`",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/use-unknown-in-catch-callback-variable"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@ts/use-unknown-in-catch-callback-variable",
      "plugin": "@ts"
    },
    "@eslint-react/avoid-shorthand-boolean": {
      "type": "problem",
      "docs": {
        "description": "disallow using shorthand boolean attributes",
        "url": "https://eslint-react.xyz/docs/rules/avoid-shorthand-boolean"
      },
      "fixable": "code",
      "name": "@eslint-react/avoid-shorthand-boolean",
      "plugin": "@eslint-react"
    },
    "@eslint-react/avoid-shorthand-fragment": {
      "type": "problem",
      "docs": {
        "description": "disallow using shorthand fragment syntax",
        "url": "https://eslint-react.xyz/docs/rules/avoid-shorthand-fragment"
      },
      "name": "@eslint-react/avoid-shorthand-fragment",
      "plugin": "@eslint-react"
    },
    "@eslint-react/ensure-forward-ref-using-ref": {
      "type": "problem",
      "docs": {
        "description": "require a 'ref' parameter to be set when using 'forwardRef'",
        "url": "https://eslint-react.xyz/docs/rules/ensure-forward-ref-using-ref"
      },
      "name": "@eslint-react/ensure-forward-ref-using-ref",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-access-state-in-setstate": {
      "type": "problem",
      "docs": {
        "description": "disallow accessing 'this.state' within 'setState'",
        "url": "https://eslint-react.xyz/docs/rules/no-access-state-in-setstate"
      },
      "name": "@eslint-react/no-access-state-in-setstate",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-array-index-key": {
      "type": "problem",
      "docs": {
        "description": "disallow using Array index as 'key'",
        "url": "https://eslint-react.xyz/docs/rules/no-array-index-key"
      },
      "name": "@eslint-react/no-array-index-key",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-children-count": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'Children.count'",
        "url": "https://eslint-react.xyz/docs/rules/no-children-count"
      },
      "name": "@eslint-react/no-children-count",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-children-for-each": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'Children.forEach'",
        "url": "https://eslint-react.xyz/docs/rules/no-children-for-each"
      },
      "name": "@eslint-react/no-children-for-each",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-children-map": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'Children.map'",
        "url": "https://eslint-react.xyz/docs/rules/no-children-map"
      },
      "name": "@eslint-react/no-children-map",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-children-only": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'Children.only'",
        "url": "https://eslint-react.xyz/docs/rules/no-children-only"
      },
      "name": "@eslint-react/no-children-only",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-children-prop": {
      "type": "problem",
      "docs": {
        "description": "disallow passing 'children' as props",
        "url": "https://eslint-react.xyz/docs/rules/no-children-prop"
      },
      "name": "@eslint-react/no-children-prop",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-children-to-array": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'Children.toArray'",
        "url": "https://eslint-react.xyz/docs/rules/no-children-to-array"
      },
      "name": "@eslint-react/no-children-to-array",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-class-component": {
      "type": "problem",
      "docs": {
        "description": "disallow using class components",
        "url": "https://eslint-react.xyz/docs/rules/no-class-component"
      },
      "name": "@eslint-react/no-class-component",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-clone-element": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'cloneElement'",
        "url": "https://eslint-react.xyz/docs/rules/no-clone-element"
      },
      "name": "@eslint-react/no-clone-element",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-comment-textnodes": {
      "type": "problem",
      "docs": {
        "description": "disallow comments from being inserted as text nodes",
        "url": "https://eslint-react.xyz/docs/rules/no-comment-textnodes"
      },
      "name": "@eslint-react/no-comment-textnodes",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-complex-conditional-rendering": {
      "type": "problem",
      "docs": {
        "description": "disallow complex conditional rendering",
        "url": "https://eslint-react.xyz/docs/rules/no-complex-conditional-rendering"
      },
      "name": "@eslint-react/no-complex-conditional-rendering",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-component-will-mount": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'componentWillMount'",
        "url": "https://eslint-react.xyz/docs/rules/no-component-will-mount"
      },
      "fixable": "code",
      "name": "@eslint-react/no-component-will-mount",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-component-will-receive-props": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'componentWillReceiveProps'",
        "url": "https://eslint-react.xyz/docs/rules/no-component-will-receive-props"
      },
      "fixable": "code",
      "name": "@eslint-react/no-component-will-receive-props",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-component-will-update": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'componentWillReceiveProps'",
        "url": "https://eslint-react.xyz/docs/rules/no-component-will-update"
      },
      "fixable": "code",
      "name": "@eslint-react/no-component-will-update",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-context-provider": {
      "type": "problem",
      "docs": {
        "description": "disallow the use of '<Context.Provider>'",
        "url": "https://eslint-react.xyz/docs/rules/no-context-provider"
      },
      "fixable": "code",
      "name": "@eslint-react/no-context-provider",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-create-ref": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'createRef' in function components",
        "url": "https://eslint-react.xyz/docs/rules/no-create-ref"
      },
      "name": "@eslint-react/no-create-ref",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-default-props": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'defaultProps' property in components",
        "url": "https://eslint-react.xyz/docs/rules/no-default-props"
      },
      "name": "@eslint-react/no-default-props",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-direct-mutation-state": {
      "type": "problem",
      "docs": {
        "description": "disallow direct mutation of state",
        "url": "https://eslint-react.xyz/docs/rules/no-direct-mutation-state"
      },
      "name": "@eslint-react/no-direct-mutation-state",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-duplicate-jsx-props": {
      "type": "problem",
      "docs": {
        "description": "disallow duplicate props",
        "url": "https://eslint-react.xyz/docs/rules/no-duplicate-jsx-props"
      },
      "name": "@eslint-react/no-duplicate-jsx-props",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-duplicate-key": {
      "type": "problem",
      "docs": {
        "description": "disallow duplicate keys when rendering list",
        "url": "https://eslint-react.xyz/docs/rules/no-duplicate-key"
      },
      "name": "@eslint-react/no-duplicate-key",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-forward-ref": {
      "type": "problem",
      "docs": {
        "description": "disallow the use of 'forwardRef'",
        "url": "https://eslint-react.xyz/docs/rules/no-forward-ref"
      },
      "fixable": "code",
      "name": "@eslint-react/no-forward-ref",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-implicit-key": {
      "type": "problem",
      "docs": {
        "description": "disallow implicit 'key' props",
        "url": "https://eslint-react.xyz/docs/rules/no-implicit-key"
      },
      "name": "@eslint-react/no-implicit-key",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-leaked-conditional-rendering": {
      "type": "problem",
      "docs": {
        "description": "disallow problematic leaked values from being rendered",
        "url": "https://eslint-react.xyz/docs/rules/no-leaked-conditional-rendering"
      },
      "name": "@eslint-react/no-leaked-conditional-rendering",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-missing-component-display-name": {
      "type": "problem",
      "docs": {
        "description": "require 'displayName' for 'memo' and 'forwardRef' components",
        "url": "https://eslint-react.xyz/docs/rules/no-missing-component-display-name"
      },
      "name": "@eslint-react/no-missing-component-display-name",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-missing-key": {
      "type": "problem",
      "docs": {
        "description": "require 'key' when rendering list",
        "url": "https://eslint-react.xyz/docs/rules/no-missing-key"
      },
      "name": "@eslint-react/no-missing-key",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-nested-components": {
      "type": "problem",
      "docs": {
        "description": "disallow using unstable nested components",
        "url": "https://eslint-react.xyz/docs/rules/no-nested-components"
      },
      "name": "@eslint-react/no-nested-components",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-prop-types": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'propTypes' property in components",
        "url": "https://eslint-react.xyz/docs/rules/no-prop-types"
      },
      "name": "@eslint-react/no-prop-types",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-redundant-should-component-update": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'shouldComponentUpdate' in class component extends 'React.PureComponent'",
        "url": "https://eslint-react.xyz/docs/rules/no-redundant-should-component-update"
      },
      "name": "@eslint-react/no-redundant-should-component-update",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-set-state-in-component-did-mount": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'setState' in 'componentDidMount'",
        "url": "https://eslint-react.xyz/docs/rules/no-set-state-in-component-did-mount"
      },
      "name": "@eslint-react/no-set-state-in-component-did-mount",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-set-state-in-component-did-update": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'setState' in 'componentDidUpdate'",
        "url": "https://eslint-react.xyz/docs/rules/no-set-state-in-component-did-update"
      },
      "name": "@eslint-react/no-set-state-in-component-did-update",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-set-state-in-component-will-update": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'setState' in 'componentWillUpdate'",
        "url": "https://eslint-react.xyz/docs/rules/no-set-state-in-component-will-update"
      },
      "name": "@eslint-react/no-set-state-in-component-will-update",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-string-refs": {
      "type": "problem",
      "docs": {
        "description": "disallow using deprecated string refs",
        "url": "https://eslint-react.xyz/docs/rules/no-string-refs"
      },
      "name": "@eslint-react/no-string-refs",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-unsafe-component-will-mount": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'UNSAFE_componentWillMount'",
        "url": "https://eslint-react.xyz/docs/rules/no-unsafe-component-will-mount"
      },
      "name": "@eslint-react/no-unsafe-component-will-mount",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-unsafe-component-will-receive-props": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'UNSAFE_componentWillReceiveProps'",
        "url": "https://eslint-react.xyz/docs/rules/no-unsafe-component-will-receive-props"
      },
      "name": "@eslint-react/no-unsafe-component-will-receive-props",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-unsafe-component-will-update": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'UNSAFE_componentWillUpdate'",
        "url": "https://eslint-react.xyz/docs/rules/no-unsafe-component-will-update"
      },
      "name": "@eslint-react/no-unsafe-component-will-update",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-unstable-context-value": {
      "type": "problem",
      "docs": {
        "description": "disallow passing constructed values to context providers",
        "url": "https://eslint-react.xyz/docs/rules/no-unstable-context-value"
      },
      "name": "@eslint-react/no-unstable-context-value",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-unstable-default-props": {
      "type": "problem",
      "docs": {
        "description": "disallow using unstable value as default param in function component",
        "url": "https://eslint-react.xyz/docs/rules/no-unstable-default-props"
      },
      "name": "@eslint-react/no-unstable-default-props",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-unused-class-component-members": {
      "type": "problem",
      "docs": {
        "description": "disallow unused class component members",
        "url": "https://eslint-react.xyz/docs/rules/no-unused-class-component-members"
      },
      "name": "@eslint-react/no-unused-class-component-members",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-unused-state": {
      "type": "problem",
      "docs": {
        "description": "disallow unused state of class component",
        "url": "https://eslint-react.xyz/docs/rules/no-unused-state"
      },
      "name": "@eslint-react/no-unused-state",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-useless-fragment": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowExpressions": true
        }
      ],
      "docs": {
        "description": "disallow unnecessary fragments",
        "url": "https://eslint-react.xyz/docs/rules/no-useless-fragment"
      },
      "name": "@eslint-react/no-useless-fragment",
      "plugin": "@eslint-react"
    },
    "@eslint-react/prefer-destructuring-assignment": {
      "type": "problem",
      "docs": {
        "description": "enforce using destructuring assignment in component props and context",
        "url": "https://eslint-react.xyz/docs/rules/prefer-destructuring-assignment"
      },
      "name": "@eslint-react/prefer-destructuring-assignment",
      "plugin": "@eslint-react"
    },
    "@eslint-react/prefer-react-namespace-import": {
      "type": "problem",
      "docs": {
        "description": "enforce React is imported via a namespace import",
        "url": "https://eslint-react.xyz/docs/rules/prefer-react-namespace-import"
      },
      "fixable": "code",
      "name": "@eslint-react/prefer-react-namespace-import",
      "plugin": "@eslint-react"
    },
    "@eslint-react/prefer-read-only-props": {
      "type": "problem",
      "docs": {
        "description": "enforce read-only props in components",
        "url": "https://eslint-react.xyz/docs/rules/prefer-read-only-props"
      },
      "name": "@eslint-react/prefer-read-only-props",
      "plugin": "@eslint-react"
    },
    "@eslint-react/prefer-shorthand-boolean": {
      "type": "problem",
      "docs": {
        "description": "enforce using shorthand boolean attributes",
        "url": "https://eslint-react.xyz/docs/rules/prefer-shorthand-boolean"
      },
      "fixable": "code",
      "name": "@eslint-react/prefer-shorthand-boolean",
      "plugin": "@eslint-react"
    },
    "@eslint-react/prefer-shorthand-fragment": {
      "type": "problem",
      "docs": {
        "description": "enforce using fragment syntax instead of 'Fragment' component",
        "url": "https://eslint-react.xyz/docs/rules/prefer-shorthand-fragment"
      },
      "name": "@eslint-react/prefer-shorthand-fragment",
      "plugin": "@eslint-react"
    },
    "@eslint-react/use-jsx-vars": {
      "type": "problem",
      "docs": {
        "description": "helpes `eslint/no-unused-vars` to correctly mark JSX variables as used.",
        "url": "https://eslint-react.xyz/docs/rules/use-jsx-vars"
      },
      "name": "@eslint-react/use-jsx-vars",
      "plugin": "@eslint-react"
    },
    "@eslint-react/jsx-no-duplicate-props": {
      "type": "problem",
      "docs": {
        "description": "disallow duplicate props",
        "url": "https://eslint-react.xyz/docs/rules/no-duplicate-jsx-props"
      },
      "name": "@eslint-react/jsx-no-duplicate-props",
      "plugin": "@eslint-react"
    },
    "@eslint-react/jsx-uses-vars": {
      "type": "problem",
      "docs": {
        "description": "helpes `eslint/no-unused-vars` to correctly mark JSX variables as used.",
        "url": "https://eslint-react.xyz/docs/rules/use-jsx-vars"
      },
      "name": "@eslint-react/jsx-uses-vars",
      "plugin": "@eslint-react"
    },
    "@eslint-react/no-complicated-conditional-rendering": {
      "type": "problem",
      "docs": {
        "description": "disallow complex conditional rendering",
        "url": "https://eslint-react.xyz/docs/rules/no-complex-conditional-rendering"
      },
      "name": "@eslint-react/no-complicated-conditional-rendering",
      "plugin": "@eslint-react"
    },
    "@eslint-react/dom/no-dangerously-set-innerhtml": {
      "type": "problem",
      "docs": {
        "description": "disallow when a DOM component is using 'dangerouslySetInnerHTML'",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-dangerously-set-innerhtml"
      },
      "name": "@eslint-react/dom/no-dangerously-set-innerhtml",
      "plugin": "@eslint-react"
    },
    "@eslint-react/dom/no-dangerously-set-innerhtml-with-children": {
      "type": "problem",
      "docs": {
        "description": "disallow when a DOM component is using both 'children' and 'dangerouslySetInnerHTML'",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-dangerously-set-innerhtml-with-children"
      },
      "name": "@eslint-react/dom/no-dangerously-set-innerhtml-with-children",
      "plugin": "@eslint-react"
    },
    "@eslint-react/dom/no-find-dom-node": {
      "type": "problem",
      "docs": {
        "description": "disallow 'findDOMNode'",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-find-dom-node"
      },
      "name": "@eslint-react/dom/no-find-dom-node",
      "plugin": "@eslint-react"
    },
    "@eslint-react/dom/no-missing-button-type": {
      "type": "problem",
      "docs": {
        "description": "enforce that button component have an explicit 'type' attribute",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-missing-button-type"
      },
      "name": "@eslint-react/dom/no-missing-button-type",
      "plugin": "@eslint-react"
    },
    "@eslint-react/dom/no-missing-iframe-sandbox": {
      "type": "problem",
      "docs": {
        "description": "enforce that 'iframe' component have an explicit 'sandbox' attribute",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-missing-iframe-sandbox"
      },
      "name": "@eslint-react/dom/no-missing-iframe-sandbox",
      "plugin": "@eslint-react"
    },
    "@eslint-react/dom/no-namespace": {
      "type": "problem",
      "docs": {
        "description": "enforce that namespaces are not used in React elements",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-namespace"
      },
      "name": "@eslint-react/dom/no-namespace",
      "plugin": "@eslint-react"
    },
    "@eslint-react/dom/no-render-return-value": {
      "type": "problem",
      "docs": {
        "description": "disallow usage of the return value of 'ReactDOM.render'",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-render-return-value"
      },
      "name": "@eslint-react/dom/no-render-return-value",
      "plugin": "@eslint-react"
    },
    "@eslint-react/dom/no-script-url": {
      "type": "problem",
      "docs": {
        "description": "disallow 'javascript:' URLs as JSX event handler prop's value",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-script-url"
      },
      "name": "@eslint-react/dom/no-script-url",
      "plugin": "@eslint-react"
    },
    "@eslint-react/dom/no-unknown-property": {
      "docs": {
        "description": "disallow usage of unknown DOM property",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-unknown-property"
      },
      "fixable": "code",
      "name": "@eslint-react/dom/no-unknown-property",
      "plugin": "@eslint-react"
    },
    "@eslint-react/dom/no-unsafe-iframe-sandbox": {
      "type": "problem",
      "docs": {
        "description": "disallow unsafe iframe 'sandbox' attribute combinations",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-unsafe-iframe-sandbox"
      },
      "name": "@eslint-react/dom/no-unsafe-iframe-sandbox",
      "plugin": "@eslint-react"
    },
    "@eslint-react/dom/no-unsafe-target-blank": {
      "type": "problem",
      "docs": {
        "description": "disallow 'target=\"_blank\"' on an external link without 'rel=\"noreferrer noopener\"'",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-unsafe-target-blank"
      },
      "name": "@eslint-react/dom/no-unsafe-target-blank",
      "plugin": "@eslint-react"
    },
    "@eslint-react/dom/no-void-elements-with-children": {
      "type": "problem",
      "docs": {
        "description": "disallow void elements (AKA self-closing elements) from having children",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-void-elements-with-children"
      },
      "name": "@eslint-react/dom/no-void-elements-with-children",
      "plugin": "@eslint-react"
    },
    "@eslint-react/dom/no-children-in-void-dom-elements": {
      "type": "problem",
      "docs": {
        "description": "disallow void elements (AKA self-closing elements) from having children",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-void-elements-with-children"
      },
      "name": "@eslint-react/dom/no-children-in-void-dom-elements",
      "plugin": "@eslint-react"
    },
    "@eslint-react/web-api/no-leaked-event-listener": {
      "type": "problem",
      "docs": {
        "description": "enforce that every 'addEventListener' in a component or custom Hook has a corresponding 'removeEventListener'.",
        "url": "https://eslint-react.xyz/docs/rules/web-api-no-leaked-event-listener"
      },
      "name": "@eslint-react/web-api/no-leaked-event-listener",
      "plugin": "@eslint-react"
    },
    "@eslint-react/web-api/no-leaked-interval": {
      "type": "problem",
      "docs": {
        "description": "enforce that every 'setInterval' in a component or custom Hook has a corresponding 'clearInterval'.",
        "url": "https://eslint-react.xyz/docs/rules/web-api-no-leaked-interval"
      },
      "name": "@eslint-react/web-api/no-leaked-interval",
      "plugin": "@eslint-react"
    },
    "@eslint-react/web-api/no-leaked-resize-observer": {
      "type": "problem",
      "docs": {
        "description": "enforce cleanup of 'ResizeObserver' instances in components and custom Hooks.",
        "url": "https://eslint-react.xyz/docs/rules/web-api-no-leaked-resize-observer"
      },
      "name": "@eslint-react/web-api/no-leaked-resize-observer",
      "plugin": "@eslint-react"
    },
    "@eslint-react/web-api/no-leaked-timeout": {
      "type": "problem",
      "docs": {
        "description": "enforce that every 'setTimeout' in a component or custom Hook has a corresponding 'clearTimeout'.",
        "url": "https://eslint-react.xyz/docs/rules/web-api-no-leaked-timeout"
      },
      "name": "@eslint-react/web-api/no-leaked-timeout",
      "plugin": "@eslint-react"
    },
    "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect": {
      "type": "problem",
      "docs": {
        "description": "disallow direct calls to the 'set' function of 'useState' in 'useEffect'",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-no-direct-set-state-in-use-effect"
      },
      "name": "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect",
      "plugin": "@eslint-react"
    },
    "@eslint-react/hooks-extra/no-direct-set-state-in-use-layout-effect": {
      "type": "problem",
      "docs": {
        "description": "disallow direct calls to the 'set' function of 'useState' in 'useLayoutEffect'",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-no-direct-set-state-in-use-layout-effect"
      },
      "name": "@eslint-react/hooks-extra/no-direct-set-state-in-use-layout-effect",
      "plugin": "@eslint-react"
    },
    "@eslint-react/hooks-extra/no-unnecessary-use-callback": {
      "type": "problem",
      "docs": {
        "description": "disallow unnecessary usage of 'useCallback'",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-no-unnecessary-use-callback"
      },
      "name": "@eslint-react/hooks-extra/no-unnecessary-use-callback",
      "plugin": "@eslint-react"
    },
    "@eslint-react/hooks-extra/no-unnecessary-use-memo": {
      "type": "problem",
      "docs": {
        "description": "disallow unnecessary usage of 'useMemo'",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-no-unnecessary-use-memo"
      },
      "name": "@eslint-react/hooks-extra/no-unnecessary-use-memo",
      "plugin": "@eslint-react"
    },
    "@eslint-react/hooks-extra/no-useless-custom-hooks": {
      "type": "problem",
      "docs": {
        "description": "enforce custom Hooks to use at least one other hook inside",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-no-useless-custom-hooks"
      },
      "name": "@eslint-react/hooks-extra/no-useless-custom-hooks",
      "plugin": "@eslint-react"
    },
    "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization": {
      "type": "problem",
      "docs": {
        "description": "disallow function calls in 'useState' that aren't wrapped in an initializer function",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-prefer-use-state-lazy-initialization"
      },
      "name": "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization",
      "plugin": "@eslint-react"
    },
    "@eslint-react/hooks-extra/ensure-custom-hooks-using-other-hooks": {
      "type": "problem",
      "docs": {
        "description": "enforce custom Hooks to use at least one other hook inside",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-no-useless-custom-hooks"
      },
      "name": "@eslint-react/hooks-extra/ensure-custom-hooks-using-other-hooks",
      "plugin": "@eslint-react"
    },
    "@eslint-react/hooks-extra/ensure-use-callback-has-non-empty-deps": {
      "type": "problem",
      "docs": {
        "description": "disallow unnecessary usage of 'useCallback'",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-no-unnecessary-use-callback"
      },
      "name": "@eslint-react/hooks-extra/ensure-use-callback-has-non-empty-deps",
      "plugin": "@eslint-react"
    },
    "@eslint-react/hooks-extra/ensure-use-memo-has-non-empty-deps": {
      "type": "problem",
      "docs": {
        "description": "disallow unnecessary usage of 'useMemo'",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-no-unnecessary-use-memo"
      },
      "name": "@eslint-react/hooks-extra/ensure-use-memo-has-non-empty-deps",
      "plugin": "@eslint-react"
    },
    "@eslint-react/hooks-extra/no-redundant-custom-hook": {
      "type": "problem",
      "docs": {
        "description": "enforce custom Hooks to use at least one other hook inside",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-no-useless-custom-hooks"
      },
      "name": "@eslint-react/hooks-extra/no-redundant-custom-hook",
      "plugin": "@eslint-react"
    },
    "@eslint-react/naming-convention/component-name": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowAllCaps": false,
          "allowLeadingUnderscore": false,
          "allowNamespace": false,
          "excepts": [],
          "rule": "PascalCase"
        }
      ],
      "docs": {
        "description": "enforce component naming convention to 'PascalCase' or 'CONSTANT_CASE'",
        "url": "https://eslint-react.xyz/docs/rules/naming-convention-component-name"
      },
      "name": "@eslint-react/naming-convention/component-name",
      "plugin": "@eslint-react"
    },
    "@eslint-react/naming-convention/filename": {
      "type": "problem",
      "defaultOptions": [
        {
          "excepts": [
            "^index$"
          ],
          "extensions": [
            ".js",
            ".jsx",
            ".ts",
            ".tsx"
          ],
          "rule": "PascalCase"
        }
      ],
      "docs": {
        "description": "enforce naming convention for JSX filenames",
        "url": "https://eslint-react.xyz/docs/rules/naming-convention-filename"
      },
      "name": "@eslint-react/naming-convention/filename",
      "plugin": "@eslint-react"
    },
    "@eslint-react/naming-convention/filename-extension": {
      "type": "problem",
      "defaultOptions": [
        {
          "allow": "as-needed",
          "extensions": [
            ".jsx",
            ".tsx"
          ],
          "ignoreFilesWithoutCode": false
        }
      ],
      "docs": {
        "description": "enforce naming convention for JSX file extensions",
        "url": "https://eslint-react.xyz/docs/rules/naming-convention-filename-extension"
      },
      "name": "@eslint-react/naming-convention/filename-extension",
      "plugin": "@eslint-react"
    },
    "@eslint-react/naming-convention/use-state": {
      "type": "problem",
      "docs": {
        "description": "enforce destructuring and symmetric naming of 'useState' hook value and setter variables",
        "url": "https://eslint-react.xyz/docs/rules/naming-convention-use-state"
      },
      "name": "@eslint-react/naming-convention/use-state",
      "plugin": "@eslint-react"
    },
    "@eslint-react/debug/class-component": {
      "type": "problem",
      "docs": {
        "description": "report all class components, including anonymous ones",
        "url": "https://eslint-react.xyz/docs/rules/debug-class-component"
      },
      "name": "@eslint-react/debug/class-component",
      "plugin": "@eslint-react"
    },
    "@eslint-react/debug/function-component": {
      "type": "problem",
      "docs": {
        "description": "report all function components, including anonymous ones",
        "url": "https://eslint-react.xyz/docs/rules/debug-function-component"
      },
      "name": "@eslint-react/debug/function-component",
      "plugin": "@eslint-react"
    },
    "@eslint-react/debug/hook": {
      "type": "problem",
      "docs": {
        "description": "report all React Hooks",
        "url": "https://eslint-react.xyz/docs/rules/debug-hook"
      },
      "name": "@eslint-react/debug/hook",
      "plugin": "@eslint-react"
    },
    "@eslint-react/debug/is-from-react": {
      "type": "problem",
      "docs": {
        "description": "report all identifiers that are initialized from React.",
        "url": "https://eslint-react.xyz/docs/rules/debug-is-from-react"
      },
      "name": "@eslint-react/debug/is-from-react",
      "plugin": "@eslint-react"
    },
    "@eslint-react/debug/react-hooks": {
      "type": "problem",
      "docs": {
        "description": "report all React Hooks",
        "url": "https://eslint-react.xyz/docs/rules/debug-hook"
      },
      "name": "@eslint-react/debug/react-hooks",
      "plugin": "@eslint-react"
    },
    "@jsx-a11y/accessible-emoji": {
      "docs": {
        "description": "Enforce emojis are wrapped in `<span>` and provide screen reader access.",
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/accessible-emoji.md"
      },
      "deprecated": true,
      "name": "@jsx-a11y/accessible-emoji",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/alt-text": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/alt-text.md",
        "description": "Enforce all elements that require alternative text have meaningful information to relay back to end user."
      },
      "name": "@jsx-a11y/alt-text",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/anchor-ambiguous-text": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/anchor-ambiguous-text.md",
        "description": "Enforce `<a>` text to not exactly match \"click here\", \"here\", \"link\", or \"a link\"."
      },
      "name": "@jsx-a11y/anchor-ambiguous-text",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/anchor-has-content": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/anchor-has-content.md",
        "description": "Enforce all anchors to contain accessible content."
      },
      "name": "@jsx-a11y/anchor-has-content",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/anchor-is-valid": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/anchor-is-valid.md",
        "description": "Enforce all anchors are valid, navigable elements."
      },
      "name": "@jsx-a11y/anchor-is-valid",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/aria-activedescendant-has-tabindex": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/aria-activedescendant-has-tabindex.md",
        "description": "Enforce elements with aria-activedescendant are tabbable."
      },
      "name": "@jsx-a11y/aria-activedescendant-has-tabindex",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/aria-props": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/aria-props.md",
        "description": "Enforce all `aria-*` props are valid."
      },
      "name": "@jsx-a11y/aria-props",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/aria-proptypes": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/aria-proptypes.md",
        "description": "Enforce ARIA state and property values are valid."
      },
      "name": "@jsx-a11y/aria-proptypes",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/aria-role": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/aria-role.md",
        "description": "Enforce that elements with ARIA roles must use a valid, non-abstract ARIA role."
      },
      "name": "@jsx-a11y/aria-role",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/aria-unsupported-elements": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/aria-unsupported-elements.md",
        "description": "Enforce that elements that do not support ARIA roles, states, and properties do not have those attributes."
      },
      "name": "@jsx-a11y/aria-unsupported-elements",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/autocomplete-valid": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/autocomplete-valid.md",
        "description": "Enforce that autocomplete attributes are used correctly."
      },
      "name": "@jsx-a11y/autocomplete-valid",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/click-events-have-key-events": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/click-events-have-key-events.md",
        "description": "Enforce a clickable non-interactive element has at least one keyboard event listener."
      },
      "name": "@jsx-a11y/click-events-have-key-events",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/control-has-associated-label": {
      "docs": {
        "description": "Enforce that a control (an interactive element) has a text label.",
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/main/docs/rules/control-has-associated-label.md"
      },
      "name": "@jsx-a11y/control-has-associated-label",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/heading-has-content": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/heading-has-content.md",
        "description": "Enforce heading (`h1`, `h2`, etc) elements contain accessible content."
      },
      "name": "@jsx-a11y/heading-has-content",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/html-has-lang": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/html-has-lang.md",
        "description": "Enforce `<html>` element has `lang` prop."
      },
      "name": "@jsx-a11y/html-has-lang",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/iframe-has-title": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/iframe-has-title.md",
        "description": "Enforce iframe elements have a title attribute."
      },
      "name": "@jsx-a11y/iframe-has-title",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/img-redundant-alt": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/img-redundant-alt.md",
        "description": "Enforce `<img>` alt prop does not contain the word \"image\", \"picture\", or \"photo\"."
      },
      "name": "@jsx-a11y/img-redundant-alt",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/interactive-supports-focus": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/interactive-supports-focus.md",
        "description": "Enforce that elements with interactive handlers like `onClick` must be focusable."
      },
      "name": "@jsx-a11y/interactive-supports-focus",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/label-has-associated-control": {
      "docs": {
        "description": "Enforce that a `label` tag has a text label and an associated control.",
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/main/docs/rules/label-has-associated-control.md"
      },
      "name": "@jsx-a11y/label-has-associated-control",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/label-has-for": {
      "deprecated": true,
      "replacedBy": [
        "label-has-associated-control"
      ],
      "docs": {
        "description": "Enforce that `<label>` elements have the `htmlFor` prop.",
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/label-has-for.md"
      },
      "name": "@jsx-a11y/label-has-for",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/lang": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/lang.md",
        "description": "Enforce lang attribute has a valid value."
      },
      "name": "@jsx-a11y/lang",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/media-has-caption": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/media-has-caption.md",
        "description": "Enforces that `<audio>` and `<video>` elements must have a `<track>` for captions."
      },
      "name": "@jsx-a11y/media-has-caption",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/mouse-events-have-key-events": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/mouse-events-have-key-events.md",
        "description": "Enforce that `onMouseOver`/`onMouseOut` are accompanied by `onFocus`/`onBlur` for keyboard-only users."
      },
      "name": "@jsx-a11y/mouse-events-have-key-events",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/no-access-key": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-access-key.md",
        "description": "Enforce that the `accessKey` prop is not used on any element to avoid complications with keyboard commands used by a screen reader."
      },
      "name": "@jsx-a11y/no-access-key",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/no-aria-hidden-on-focusable": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-aria-hidden-on-focusable.md",
        "description": "Disallow `aria-hidden=\"true\"` from being set on focusable elements."
      },
      "name": "@jsx-a11y/no-aria-hidden-on-focusable",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/no-autofocus": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-autofocus.md",
        "description": "Enforce autoFocus prop is not used."
      },
      "name": "@jsx-a11y/no-autofocus",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/no-distracting-elements": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-distracting-elements.md",
        "description": "Enforce distracting elements are not used."
      },
      "name": "@jsx-a11y/no-distracting-elements",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/no-interactive-element-to-noninteractive-role": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-interactive-element-to-noninteractive-role.md",
        "description": "Interactive elements should not be assigned non-interactive roles."
      },
      "name": "@jsx-a11y/no-interactive-element-to-noninteractive-role",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/no-noninteractive-element-interactions": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-noninteractive-element-interactions.md",
        "description": "Non-interactive elements should not be assigned mouse or keyboard event listeners."
      },
      "name": "@jsx-a11y/no-noninteractive-element-interactions",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/no-noninteractive-element-to-interactive-role": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-noninteractive-element-to-interactive-role.md",
        "description": "Non-interactive elements should not be assigned interactive roles."
      },
      "name": "@jsx-a11y/no-noninteractive-element-to-interactive-role",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/no-noninteractive-tabindex": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-noninteractive-tabindex.md",
        "description": "`tabIndex` should only be declared on interactive elements."
      },
      "name": "@jsx-a11y/no-noninteractive-tabindex",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/no-onchange": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-onchange.md",
        "description": "Enforce usage of `onBlur` over `onChange` on select menus for accessibility."
      },
      "deprecated": true,
      "name": "@jsx-a11y/no-onchange",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/no-redundant-roles": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-redundant-roles.md",
        "description": "Enforce explicit role property is not the same as implicit/default role property on element."
      },
      "name": "@jsx-a11y/no-redundant-roles",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/no-static-element-interactions": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-static-element-interactions.md",
        "description": "Enforce that non-interactive, visible elements (such as `<div>`) that have click handlers use the role attribute."
      },
      "name": "@jsx-a11y/no-static-element-interactions",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/prefer-tag-over-role": {
      "docs": {
        "description": "Enforces using semantic DOM elements over the ARIA `role` property.",
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/prefer-tag-over-role.md"
      },
      "name": "@jsx-a11y/prefer-tag-over-role",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/role-has-required-aria-props": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/role-has-required-aria-props.md",
        "description": "Enforce that elements with ARIA roles must have all required attributes for that role."
      },
      "name": "@jsx-a11y/role-has-required-aria-props",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/role-supports-aria-props": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/role-supports-aria-props.md",
        "description": "Enforce that elements with explicit or implicit roles defined contain only `aria-*` properties supported by that `role`."
      },
      "name": "@jsx-a11y/role-supports-aria-props",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/scope": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/scope.md",
        "description": "Enforce `scope` prop is only used on `<th>` elements."
      },
      "name": "@jsx-a11y/scope",
      "plugin": "@jsx-a11y"
    },
    "@jsx-a11y/tabindex-no-positive": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/tabindex-no-positive.md",
        "description": "Enforce `tabIndex` value is not greater than zero."
      },
      "name": "@jsx-a11y/tabindex-no-positive",
      "plugin": "@jsx-a11y"
    },
    "@react/boolean-prop-naming": {
      "docs": {
        "category": "Stylistic Issues",
        "description": "Enforces consistent naming for boolean props",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/boolean-prop-naming.md"
      },
      "name": "@react/boolean-prop-naming",
      "plugin": "@react"
    },
    "@react/button-has-type": {
      "docs": {
        "description": "Disallow usage of `button` elements without an explicit `type` attribute",
        "category": "Possible Errors",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/button-has-type.md"
      },
      "name": "@react/button-has-type",
      "plugin": "@react"
    },
    "@react/checked-requires-onchange-or-readonly": {
      "docs": {
        "description": "Enforce using `onChange` or `readonly` attribute when `checked` is used",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/checked-requires-onchange-or-readonly.md"
      },
      "name": "@react/checked-requires-onchange-or-readonly",
      "plugin": "@react"
    },
    "@react/default-props-match-prop-types": {
      "docs": {
        "description": "Enforce all defaultProps have a corresponding non-required PropType",
        "category": "Best Practices",
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/default-props-match-prop-types.md"
      },
      "name": "@react/default-props-match-prop-types",
      "plugin": "@react"
    },
    "@react/destructuring-assignment": {
      "docs": {
        "description": "Enforce consistent usage of destructuring assignment of props, state, and context",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/destructuring-assignment.md"
      },
      "fixable": "code",
      "name": "@react/destructuring-assignment",
      "plugin": "@react"
    },
    "@react/display-name": {
      "docs": {
        "description": "Disallow missing displayName in a React component definition",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/display-name.md"
      },
      "name": "@react/display-name",
      "plugin": "@react"
    },
    "@react/forbid-component-props": {
      "docs": {
        "description": "Disallow certain props on components",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/forbid-component-props.md"
      },
      "name": "@react/forbid-component-props",
      "plugin": "@react"
    },
    "@react/forbid-dom-props": {
      "docs": {
        "description": "Disallow certain props on DOM Nodes",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/forbid-dom-props.md"
      },
      "name": "@react/forbid-dom-props",
      "plugin": "@react"
    },
    "@react/forbid-elements": {
      "docs": {
        "description": "Disallow certain elements",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/forbid-elements.md"
      },
      "name": "@react/forbid-elements",
      "plugin": "@react"
    },
    "@react/forbid-foreign-prop-types": {
      "docs": {
        "description": "Disallow using another component's propTypes",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/forbid-foreign-prop-types.md"
      },
      "name": "@react/forbid-foreign-prop-types",
      "plugin": "@react"
    },
    "@react/forbid-prop-types": {
      "docs": {
        "description": "Disallow certain propTypes",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/forbid-prop-types.md"
      },
      "name": "@react/forbid-prop-types",
      "plugin": "@react"
    },
    "@react/forward-ref-uses-ref": {
      "docs": {
        "description": "Require all forwardRef components include a ref parameter",
        "category": "Possible Errors",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/forward-ref-uses-ref.md"
      },
      "type": "suggestion",
      "hasSuggestions": true,
      "name": "@react/forward-ref-uses-ref",
      "plugin": "@react"
    },
    "@react/function-component-definition": {
      "docs": {
        "description": "Enforce a specific function type for function components",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/function-component-definition.md"
      },
      "fixable": "code",
      "name": "@react/function-component-definition",
      "plugin": "@react"
    },
    "@react/hook-use-state": {
      "docs": {
        "description": "Ensure destructuring and symmetric naming of useState hook value and setter variables",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/hook-use-state.md"
      },
      "type": "suggestion",
      "hasSuggestions": true,
      "name": "@react/hook-use-state",
      "plugin": "@react"
    },
    "@react/iframe-missing-sandbox": {
      "docs": {
        "description": "Enforce sandbox attribute on iframe elements",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/iframe-missing-sandbox.md"
      },
      "name": "@react/iframe-missing-sandbox",
      "plugin": "@react"
    },
    "@react/jsx-boolean-value": {
      "docs": {
        "description": "Enforce boolean attributes notation in JSX",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-boolean-value.md"
      },
      "fixable": "code",
      "name": "@react/jsx-boolean-value",
      "plugin": "@react"
    },
    "@react/jsx-child-element-spacing": {
      "docs": {
        "description": "Enforce or disallow spaces inside of curly braces in JSX attributes and expressions",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-child-element-spacing.md"
      },
      "fixable": null,
      "name": "@react/jsx-child-element-spacing",
      "plugin": "@react"
    },
    "@react/jsx-closing-bracket-location": {
      "docs": {
        "description": "Enforce closing bracket location in JSX",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-closing-bracket-location.md"
      },
      "fixable": "code",
      "name": "@react/jsx-closing-bracket-location",
      "plugin": "@react"
    },
    "@react/jsx-closing-tag-location": {
      "docs": {
        "description": "Enforce closing tag location for multiline JSX",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-closing-tag-location.md"
      },
      "fixable": "whitespace",
      "name": "@react/jsx-closing-tag-location",
      "plugin": "@react"
    },
    "@react/jsx-curly-spacing": {
      "docs": {
        "description": "Enforce or disallow spaces inside of curly braces in JSX attributes and expressions",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-curly-spacing.md"
      },
      "fixable": "code",
      "name": "@react/jsx-curly-spacing",
      "plugin": "@react"
    },
    "@react/jsx-curly-newline": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent linebreaks in curly braces in JSX attributes and expressions",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-curly-newline.md"
      },
      "fixable": "whitespace",
      "name": "@react/jsx-curly-newline",
      "plugin": "@react"
    },
    "@react/jsx-equals-spacing": {
      "docs": {
        "description": "Enforce or disallow spaces around equal signs in JSX attributes",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-equals-spacing.md"
      },
      "fixable": "code",
      "name": "@react/jsx-equals-spacing",
      "plugin": "@react"
    },
    "@react/jsx-filename-extension": {
      "docs": {
        "description": "Disallow file extensions that may contain JSX",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-filename-extension.md"
      },
      "name": "@react/jsx-filename-extension",
      "plugin": "@react"
    },
    "@react/jsx-first-prop-new-line": {
      "docs": {
        "description": "Enforce proper position of the first property in JSX",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-first-prop-new-line.md"
      },
      "fixable": "code",
      "name": "@react/jsx-first-prop-new-line",
      "plugin": "@react"
    },
    "@react/jsx-handler-names": {
      "docs": {
        "description": "Enforce event handler naming conventions in JSX",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-handler-names.md"
      },
      "name": "@react/jsx-handler-names",
      "plugin": "@react"
    },
    "@react/jsx-indent": {
      "docs": {
        "description": "Enforce JSX indentation",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-indent.md"
      },
      "fixable": "whitespace",
      "name": "@react/jsx-indent",
      "plugin": "@react"
    },
    "@react/jsx-indent-props": {
      "docs": {
        "description": "Enforce props indentation in JSX",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-indent-props.md"
      },
      "fixable": "code",
      "name": "@react/jsx-indent-props",
      "plugin": "@react"
    },
    "@react/jsx-key": {
      "docs": {
        "description": "Disallow missing `key` props in iterators/collection literals",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-key.md"
      },
      "name": "@react/jsx-key",
      "plugin": "@react"
    },
    "@react/jsx-max-depth": {
      "docs": {
        "description": "Enforce JSX maximum depth",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-max-depth.md"
      },
      "name": "@react/jsx-max-depth",
      "plugin": "@react"
    },
    "@react/jsx-max-props-per-line": {
      "docs": {
        "description": "Enforce maximum of props on a single line in JSX",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-max-props-per-line.md"
      },
      "fixable": "code",
      "name": "@react/jsx-max-props-per-line",
      "plugin": "@react"
    },
    "@react/jsx-newline": {
      "docs": {
        "description": "Require or prevent a new line after jsx elements and expressions.",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-newline.md"
      },
      "fixable": "code",
      "name": "@react/jsx-newline",
      "plugin": "@react"
    },
    "@react/jsx-no-bind": {
      "docs": {
        "description": "Disallow `.bind()` or arrow functions in JSX props",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-bind.md"
      },
      "name": "@react/jsx-no-bind",
      "plugin": "@react"
    },
    "@react/jsx-no-comment-textnodes": {
      "docs": {
        "description": "Disallow comments from being inserted as text nodes",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-comment-textnodes.md"
      },
      "name": "@react/jsx-no-comment-textnodes",
      "plugin": "@react"
    },
    "@react/jsx-no-constructed-context-values": {
      "docs": {
        "description": "Disallows JSX context provider values from taking values that will cause needless rerenders",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-constructed-context-values.md"
      },
      "name": "@react/jsx-no-constructed-context-values",
      "plugin": "@react"
    },
    "@react/jsx-no-duplicate-props": {
      "docs": {
        "description": "Disallow duplicate properties in JSX",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-duplicate-props.md"
      },
      "name": "@react/jsx-no-duplicate-props",
      "plugin": "@react"
    },
    "@react/jsx-no-leaked-render": {
      "docs": {
        "description": "Disallow problematic leaked values from being rendered",
        "category": "Possible Errors",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-leaked-render.md"
      },
      "fixable": "code",
      "name": "@react/jsx-no-leaked-render",
      "plugin": "@react"
    },
    "@react/jsx-no-literals": {
      "docs": {
        "description": "Disallow usage of string literals in JSX",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-literals.md"
      },
      "name": "@react/jsx-no-literals",
      "plugin": "@react"
    },
    "@react/jsx-no-script-url": {
      "docs": {
        "description": "Disallow usage of `javascript:` URLs",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-script-url.md"
      },
      "name": "@react/jsx-no-script-url",
      "plugin": "@react"
    },
    "@react/jsx-no-target-blank": {
      "fixable": "code",
      "docs": {
        "description": "Disallow `target=\"_blank\"` attribute without `rel=\"noreferrer\"`",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-target-blank.md"
      },
      "name": "@react/jsx-no-target-blank",
      "plugin": "@react"
    },
    "@react/jsx-no-useless-fragment": {
      "type": "suggestion",
      "fixable": "code",
      "docs": {
        "description": "Disallow unnecessary fragments",
        "category": "Possible Errors",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-useless-fragment.md"
      },
      "name": "@react/jsx-no-useless-fragment",
      "plugin": "@react"
    },
    "@react/jsx-one-expression-per-line": {
      "docs": {
        "description": "Require one JSX element per line",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-one-expression-per-line.md"
      },
      "fixable": "whitespace",
      "name": "@react/jsx-one-expression-per-line",
      "plugin": "@react"
    },
    "@react/jsx-no-undef": {
      "docs": {
        "description": "Disallow undeclared variables in JSX",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-no-undef.md"
      },
      "name": "@react/jsx-no-undef",
      "plugin": "@react"
    },
    "@react/jsx-curly-brace-presence": {
      "docs": {
        "description": "Disallow unnecessary JSX expressions when literals alone are sufficient or enforce JSX expressions on literals in JSX children or attributes",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-curly-brace-presence.md"
      },
      "fixable": "code",
      "name": "@react/jsx-curly-brace-presence",
      "plugin": "@react"
    },
    "@react/jsx-pascal-case": {
      "docs": {
        "description": "Enforce PascalCase for user-defined JSX components",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-pascal-case.md"
      },
      "name": "@react/jsx-pascal-case",
      "plugin": "@react"
    },
    "@react/jsx-fragments": {
      "docs": {
        "description": "Enforce shorthand or standard form for React fragments",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-fragments.md"
      },
      "fixable": "code",
      "name": "@react/jsx-fragments",
      "plugin": "@react"
    },
    "@react/jsx-props-no-multi-spaces": {
      "docs": {
        "description": "Disallow multiple spaces between inline JSX props",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-props-no-multi-spaces.md"
      },
      "fixable": "code",
      "name": "@react/jsx-props-no-multi-spaces",
      "plugin": "@react"
    },
    "@react/jsx-props-no-spreading": {
      "docs": {
        "description": "Disallow JSX prop spreading",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-props-no-spreading.md"
      },
      "name": "@react/jsx-props-no-spreading",
      "plugin": "@react"
    },
    "@react/jsx-props-no-spread-multi": {
      "docs": {
        "description": "Disallow JSX prop spreading the same identifier multiple times",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-props-no-spread-multi.md"
      },
      "name": "@react/jsx-props-no-spread-multi",
      "plugin": "@react"
    },
    "@react/jsx-sort-default-props": {
      "deprecated": true,
      "replacedBy": [
        "sort-default-props"
      ],
      "docs": {
        "description": "Enforce defaultProps declarations alphabetical sorting",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-sort-default-props.md"
      },
      "name": "@react/jsx-sort-default-props",
      "plugin": "@react"
    },
    "@react/jsx-sort-props": {
      "docs": {
        "description": "Enforce props alphabetical sorting",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-sort-props.md"
      },
      "fixable": "code",
      "name": "@react/jsx-sort-props",
      "plugin": "@react"
    },
    "@react/jsx-space-before-closing": {
      "deprecated": true,
      "replacedBy": [
        "jsx-tag-spacing"
      ],
      "docs": {
        "description": "Enforce spacing before closing bracket in JSX",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-space-before-closing.md"
      },
      "fixable": "code",
      "name": "@react/jsx-space-before-closing",
      "plugin": "@react"
    },
    "@react/jsx-tag-spacing": {
      "docs": {
        "description": "Enforce whitespace in and around the JSX opening and closing brackets",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-tag-spacing.md"
      },
      "fixable": "whitespace",
      "name": "@react/jsx-tag-spacing",
      "plugin": "@react"
    },
    "@react/jsx-uses-react": {
      "docs": {
        "description": "Disallow React to be incorrectly marked as unused",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-uses-react.md"
      },
      "name": "@react/jsx-uses-react",
      "plugin": "@react"
    },
    "@react/jsx-uses-vars": {
      "docs": {
        "description": "Disallow variables used in JSX to be incorrectly marked as unused",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-uses-vars.md"
      },
      "name": "@react/jsx-uses-vars",
      "plugin": "@react"
    },
    "@react/jsx-wrap-multilines": {
      "docs": {
        "description": "Disallow missing parentheses around multiline JSX",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/jsx-wrap-multilines.md"
      },
      "fixable": "code",
      "name": "@react/jsx-wrap-multilines",
      "plugin": "@react"
    },
    "@react/no-invalid-html-attribute": {
      "docs": {
        "description": "Disallow usage of invalid attributes",
        "category": "Possible Errors",
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-invalid-html-attribute.md"
      },
      "type": "suggestion",
      "hasSuggestions": true,
      "name": "@react/no-invalid-html-attribute",
      "plugin": "@react"
    },
    "@react/no-access-state-in-setstate": {
      "docs": {
        "description": "Disallow when this.state is accessed within setState",
        "category": "Possible Errors",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-access-state-in-setstate.md"
      },
      "name": "@react/no-access-state-in-setstate",
      "plugin": "@react"
    },
    "@react/no-adjacent-inline-elements": {
      "docs": {
        "description": "Disallow adjacent inline elements not separated by whitespace.",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-adjacent-inline-elements.md"
      },
      "name": "@react/no-adjacent-inline-elements",
      "plugin": "@react"
    },
    "@react/no-array-index-key": {
      "docs": {
        "description": "Disallow usage of Array index in keys",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-array-index-key.md"
      },
      "name": "@react/no-array-index-key",
      "plugin": "@react"
    },
    "@react/no-arrow-function-lifecycle": {
      "docs": {
        "description": "Lifecycle methods should be methods on the prototype, not class fields",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-arrow-function-lifecycle.md"
      },
      "fixable": "code",
      "name": "@react/no-arrow-function-lifecycle",
      "plugin": "@react"
    },
    "@react/no-children-prop": {
      "docs": {
        "description": "Disallow passing of children as props",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-children-prop.md"
      },
      "name": "@react/no-children-prop",
      "plugin": "@react"
    },
    "@react/no-danger": {
      "docs": {
        "description": "Disallow usage of dangerous JSX properties",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-danger.md"
      },
      "name": "@react/no-danger",
      "plugin": "@react"
    },
    "@react/no-danger-with-children": {
      "docs": {
        "description": "Disallow when a DOM element is using both children and dangerouslySetInnerHTML",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-danger-with-children.md"
      },
      "name": "@react/no-danger-with-children",
      "plugin": "@react"
    },
    "@react/no-deprecated": {
      "docs": {
        "description": "Disallow usage of deprecated methods",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-deprecated.md"
      },
      "name": "@react/no-deprecated",
      "plugin": "@react"
    },
    "@react/no-did-mount-set-state": {
      "docs": {
        "description": "Disallow usage of setState in componentDidMount",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-did-mount-set-state.md"
      },
      "name": "@react/no-did-mount-set-state",
      "plugin": "@react"
    },
    "@react/no-did-update-set-state": {
      "docs": {
        "description": "Disallow usage of setState in componentDidUpdate",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-did-update-set-state.md"
      },
      "name": "@react/no-did-update-set-state",
      "plugin": "@react"
    },
    "@react/no-direct-mutation-state": {
      "docs": {
        "description": "Disallow direct mutation of this.state",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-direct-mutation-state.md"
      },
      "name": "@react/no-direct-mutation-state",
      "plugin": "@react"
    },
    "@react/no-find-dom-node": {
      "docs": {
        "description": "Disallow usage of findDOMNode",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-find-dom-node.md"
      },
      "name": "@react/no-find-dom-node",
      "plugin": "@react"
    },
    "@react/no-is-mounted": {
      "docs": {
        "description": "Disallow usage of isMounted",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-is-mounted.md"
      },
      "name": "@react/no-is-mounted",
      "plugin": "@react"
    },
    "@react/no-multi-comp": {
      "docs": {
        "description": "Disallow multiple component definition per file",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-multi-comp.md"
      },
      "name": "@react/no-multi-comp",
      "plugin": "@react"
    },
    "@react/no-namespace": {
      "docs": {
        "description": "Enforce that namespaces are not used in React elements",
        "category": "Possible Errors",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-namespace.md"
      },
      "name": "@react/no-namespace",
      "plugin": "@react"
    },
    "@react/no-set-state": {
      "docs": {
        "description": "Disallow usage of setState",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-set-state.md"
      },
      "name": "@react/no-set-state",
      "plugin": "@react"
    },
    "@react/no-string-refs": {
      "docs": {
        "description": "Disallow using string references",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-string-refs.md"
      },
      "name": "@react/no-string-refs",
      "plugin": "@react"
    },
    "@react/no-redundant-should-component-update": {
      "docs": {
        "description": "Disallow usage of shouldComponentUpdate when extending React.PureComponent",
        "category": "Possible Errors",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-redundant-should-component-update.md"
      },
      "name": "@react/no-redundant-should-component-update",
      "plugin": "@react"
    },
    "@react/no-render-return-value": {
      "docs": {
        "description": "Disallow usage of the return value of ReactDOM.render",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-render-return-value.md"
      },
      "name": "@react/no-render-return-value",
      "plugin": "@react"
    },
    "@react/no-this-in-sfc": {
      "docs": {
        "description": "Disallow `this` from being used in stateless functional components",
        "category": "Possible Errors",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-this-in-sfc.md"
      },
      "name": "@react/no-this-in-sfc",
      "plugin": "@react"
    },
    "@react/no-typos": {
      "docs": {
        "description": "Disallow common typos",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-typos.md"
      },
      "name": "@react/no-typos",
      "plugin": "@react"
    },
    "@react/no-unescaped-entities": {
      "hasSuggestions": true,
      "docs": {
        "description": "Disallow unescaped HTML entities from appearing in markup",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-unescaped-entities.md"
      },
      "name": "@react/no-unescaped-entities",
      "plugin": "@react"
    },
    "@react/no-unknown-property": {
      "docs": {
        "description": "Disallow usage of unknown DOM property",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-unknown-property.md"
      },
      "fixable": "code",
      "name": "@react/no-unknown-property",
      "plugin": "@react"
    },
    "@react/no-unsafe": {
      "docs": {
        "description": "Disallow usage of unsafe lifecycle methods",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-unsafe.md"
      },
      "name": "@react/no-unsafe",
      "plugin": "@react"
    },
    "@react/no-unstable-nested-components": {
      "docs": {
        "description": "Disallow creating unstable components inside components",
        "category": "Possible Errors",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-unstable-nested-components.md"
      },
      "name": "@react/no-unstable-nested-components",
      "plugin": "@react"
    },
    "@react/no-unused-class-component-methods": {
      "docs": {
        "description": "Disallow declaring unused methods of component class",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-unused-class-component-methods.md"
      },
      "name": "@react/no-unused-class-component-methods",
      "plugin": "@react"
    },
    "@react/no-unused-prop-types": {
      "docs": {
        "description": "Disallow definitions of unused propTypes",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-unused-prop-types.md"
      },
      "name": "@react/no-unused-prop-types",
      "plugin": "@react"
    },
    "@react/no-unused-state": {
      "docs": {
        "description": "Disallow definitions of unused state",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-unused-state.md"
      },
      "name": "@react/no-unused-state",
      "plugin": "@react"
    },
    "@react/no-object-type-as-default-prop": {
      "docs": {
        "description": "Disallow usage of referential-type variables as default param in functional component",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-object-type-as-default-prop.md"
      },
      "name": "@react/no-object-type-as-default-prop",
      "plugin": "@react"
    },
    "@react/no-will-update-set-state": {
      "docs": {
        "description": "Disallow usage of setState in componentWillUpdate",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/no-will-update-set-state.md"
      },
      "name": "@react/no-will-update-set-state",
      "plugin": "@react"
    },
    "@react/prefer-es6-class": {
      "docs": {
        "description": "Enforce ES5 or ES6 class for React Components",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/prefer-es6-class.md"
      },
      "name": "@react/prefer-es6-class",
      "plugin": "@react"
    },
    "@react/prefer-exact-props": {
      "docs": {
        "description": "Prefer exact proptype definitions",
        "category": "Possible Errors",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/prefer-exact-props.md"
      },
      "name": "@react/prefer-exact-props",
      "plugin": "@react"
    },
    "@react/prefer-read-only-props": {
      "docs": {
        "description": "Enforce that props are read-only",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/prefer-read-only-props.md"
      },
      "fixable": "code",
      "name": "@react/prefer-read-only-props",
      "plugin": "@react"
    },
    "@react/prefer-stateless-function": {
      "docs": {
        "description": "Enforce stateless components to be written as a pure function",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/prefer-stateless-function.md"
      },
      "name": "@react/prefer-stateless-function",
      "plugin": "@react"
    },
    "@react/prop-types": {
      "docs": {
        "description": "Disallow missing props validation in a React component definition",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/prop-types.md"
      },
      "name": "@react/prop-types",
      "plugin": "@react"
    },
    "@react/react-in-jsx-scope": {
      "docs": {
        "description": "Disallow missing React when using JSX",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/react-in-jsx-scope.md"
      },
      "name": "@react/react-in-jsx-scope",
      "plugin": "@react"
    },
    "@react/require-default-props": {
      "docs": {
        "description": "Enforce a defaultProps definition for every prop that is not a required prop",
        "category": "Best Practices",
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/require-default-props.md"
      },
      "name": "@react/require-default-props",
      "plugin": "@react"
    },
    "@react/require-optimization": {
      "docs": {
        "description": "Enforce React components to have a shouldComponentUpdate method",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/require-optimization.md"
      },
      "name": "@react/require-optimization",
      "plugin": "@react"
    },
    "@react/require-render-return": {
      "docs": {
        "description": "Enforce ES5 or ES6 class for returning value in render function",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/require-render-return.md"
      },
      "name": "@react/require-render-return",
      "plugin": "@react"
    },
    "@react/self-closing-comp": {
      "docs": {
        "description": "Disallow extra closing tags for components without children",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/self-closing-comp.md"
      },
      "fixable": "code",
      "name": "@react/self-closing-comp",
      "plugin": "@react"
    },
    "@react/sort-comp": {
      "docs": {
        "description": "Enforce component methods order",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/sort-comp.md"
      },
      "name": "@react/sort-comp",
      "plugin": "@react"
    },
    "@react/sort-default-props": {
      "docs": {
        "description": "Enforce defaultProps declarations alphabetical sorting",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/sort-default-props.md"
      },
      "name": "@react/sort-default-props",
      "plugin": "@react"
    },
    "@react/sort-prop-types": {
      "docs": {
        "description": "Enforce propTypes declarations alphabetical sorting",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/sort-prop-types.md"
      },
      "fixable": "code",
      "name": "@react/sort-prop-types",
      "plugin": "@react"
    },
    "@react/state-in-constructor": {
      "docs": {
        "description": "Enforce class component state initialization style",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/state-in-constructor.md"
      },
      "name": "@react/state-in-constructor",
      "plugin": "@react"
    },
    "@react/static-property-placement": {
      "docs": {
        "description": "Enforces where React component static properties should be positioned.",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/static-property-placement.md"
      },
      "fixable": null,
      "name": "@react/static-property-placement",
      "plugin": "@react"
    },
    "@react/style-prop-object": {
      "docs": {
        "description": "Enforce style prop value is an object",
        "category": "Possible Errors",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/style-prop-object.md"
      },
      "name": "@react/style-prop-object",
      "plugin": "@react"
    },
    "@react/void-dom-elements-no-children": {
      "docs": {
        "description": "Disallow void DOM elements (e.g. `<img />`, `<br />`) from receiving children",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/void-dom-elements-no-children.md"
      },
      "name": "@react/void-dom-elements-no-children",
      "plugin": "@react"
    },
    "@react-dom/no-dangerously-set-innerhtml": {
      "type": "problem",
      "docs": {
        "description": "disallow when a DOM component is using 'dangerouslySetInnerHTML'",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-dangerously-set-innerhtml"
      },
      "name": "@react-dom/no-dangerously-set-innerhtml",
      "plugin": "@react-dom"
    },
    "@react-dom/no-dangerously-set-innerhtml-with-children": {
      "type": "problem",
      "docs": {
        "description": "disallow when a DOM component is using both 'children' and 'dangerouslySetInnerHTML'",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-dangerously-set-innerhtml-with-children"
      },
      "name": "@react-dom/no-dangerously-set-innerhtml-with-children",
      "plugin": "@react-dom"
    },
    "@react-dom/no-find-dom-node": {
      "type": "problem",
      "docs": {
        "description": "disallow 'findDOMNode'",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-find-dom-node"
      },
      "name": "@react-dom/no-find-dom-node",
      "plugin": "@react-dom"
    },
    "@react-dom/no-missing-button-type": {
      "type": "problem",
      "docs": {
        "description": "enforce that button component have an explicit 'type' attribute",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-missing-button-type"
      },
      "name": "@react-dom/no-missing-button-type",
      "plugin": "@react-dom"
    },
    "@react-dom/no-missing-iframe-sandbox": {
      "type": "problem",
      "docs": {
        "description": "enforce that 'iframe' component have an explicit 'sandbox' attribute",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-missing-iframe-sandbox"
      },
      "name": "@react-dom/no-missing-iframe-sandbox",
      "plugin": "@react-dom"
    },
    "@react-dom/no-namespace": {
      "type": "problem",
      "docs": {
        "description": "enforce that namespaces are not used in React elements",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-namespace"
      },
      "name": "@react-dom/no-namespace",
      "plugin": "@react-dom"
    },
    "@react-dom/no-render-return-value": {
      "type": "problem",
      "docs": {
        "description": "disallow usage of the return value of 'ReactDOM.render'",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-render-return-value"
      },
      "name": "@react-dom/no-render-return-value",
      "plugin": "@react-dom"
    },
    "@react-dom/no-script-url": {
      "type": "problem",
      "docs": {
        "description": "disallow 'javascript:' URLs as JSX event handler prop's value",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-script-url"
      },
      "name": "@react-dom/no-script-url",
      "plugin": "@react-dom"
    },
    "@react-dom/no-unknown-property": {
      "docs": {
        "description": "disallow usage of unknown DOM property",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-unknown-property"
      },
      "fixable": "code",
      "name": "@react-dom/no-unknown-property",
      "plugin": "@react-dom"
    },
    "@react-dom/no-unsafe-iframe-sandbox": {
      "type": "problem",
      "docs": {
        "description": "disallow unsafe iframe 'sandbox' attribute combinations",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-unsafe-iframe-sandbox"
      },
      "name": "@react-dom/no-unsafe-iframe-sandbox",
      "plugin": "@react-dom"
    },
    "@react-dom/no-unsafe-target-blank": {
      "type": "problem",
      "docs": {
        "description": "disallow 'target=\"_blank\"' on an external link without 'rel=\"noreferrer noopener\"'",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-unsafe-target-blank"
      },
      "name": "@react-dom/no-unsafe-target-blank",
      "plugin": "@react-dom"
    },
    "@react-dom/no-void-elements-with-children": {
      "type": "problem",
      "docs": {
        "description": "disallow void elements (AKA self-closing elements) from having children",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-void-elements-with-children"
      },
      "name": "@react-dom/no-void-elements-with-children",
      "plugin": "@react-dom"
    },
    "@react-dom/no-children-in-void-dom-elements": {
      "type": "problem",
      "docs": {
        "description": "disallow void elements (AKA self-closing elements) from having children",
        "url": "https://eslint-react.xyz/docs/rules/dom-no-void-elements-with-children"
      },
      "name": "@react-dom/no-children-in-void-dom-elements",
      "plugin": "@react-dom"
    },
    "@react-hooks/rules-of-hooks": {
      "type": "problem",
      "docs": {
        "description": "enforces the Rules of Hooks",
        "recommended": true,
        "url": "https://reactjs.org/docs/hooks-rules.html"
      },
      "name": "@react-hooks/rules-of-hooks",
      "plugin": "@react-hooks"
    },
    "@react-hooks/exhaustive-deps": {
      "type": "suggestion",
      "docs": {
        "description": "verifies the list of dependencies for Hooks like useEffect and similar",
        "recommended": true,
        "url": "https://github.com/facebook/react/issues/14920"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "@react-hooks/exhaustive-deps",
      "plugin": "@react-hooks"
    },
    "@react-hooks-extra/no-direct-set-state-in-use-effect": {
      "type": "problem",
      "docs": {
        "description": "disallow direct calls to the 'set' function of 'useState' in 'useEffect'",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-no-direct-set-state-in-use-effect"
      },
      "name": "@react-hooks-extra/no-direct-set-state-in-use-effect",
      "plugin": "@react-hooks-extra"
    },
    "@react-hooks-extra/no-direct-set-state-in-use-layout-effect": {
      "type": "problem",
      "docs": {
        "description": "disallow direct calls to the 'set' function of 'useState' in 'useLayoutEffect'",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-no-direct-set-state-in-use-layout-effect"
      },
      "name": "@react-hooks-extra/no-direct-set-state-in-use-layout-effect",
      "plugin": "@react-hooks-extra"
    },
    "@react-hooks-extra/no-unnecessary-use-callback": {
      "type": "problem",
      "docs": {
        "description": "disallow unnecessary usage of 'useCallback'",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-no-unnecessary-use-callback"
      },
      "name": "@react-hooks-extra/no-unnecessary-use-callback",
      "plugin": "@react-hooks-extra"
    },
    "@react-hooks-extra/no-unnecessary-use-memo": {
      "type": "problem",
      "docs": {
        "description": "disallow unnecessary usage of 'useMemo'",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-no-unnecessary-use-memo"
      },
      "name": "@react-hooks-extra/no-unnecessary-use-memo",
      "plugin": "@react-hooks-extra"
    },
    "@react-hooks-extra/no-useless-custom-hooks": {
      "type": "problem",
      "docs": {
        "description": "enforce custom Hooks to use at least one other hook inside",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-no-useless-custom-hooks"
      },
      "name": "@react-hooks-extra/no-useless-custom-hooks",
      "plugin": "@react-hooks-extra"
    },
    "@react-hooks-extra/prefer-use-state-lazy-initialization": {
      "type": "problem",
      "docs": {
        "description": "disallow function calls in 'useState' that aren't wrapped in an initializer function",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-prefer-use-state-lazy-initialization"
      },
      "name": "@react-hooks-extra/prefer-use-state-lazy-initialization",
      "plugin": "@react-hooks-extra"
    },
    "@react-hooks-extra/ensure-custom-hooks-using-other-hooks": {
      "type": "problem",
      "docs": {
        "description": "enforce custom Hooks to use at least one other hook inside",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-no-useless-custom-hooks"
      },
      "name": "@react-hooks-extra/ensure-custom-hooks-using-other-hooks",
      "plugin": "@react-hooks-extra"
    },
    "@react-hooks-extra/ensure-use-callback-has-non-empty-deps": {
      "type": "problem",
      "docs": {
        "description": "disallow unnecessary usage of 'useCallback'",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-no-unnecessary-use-callback"
      },
      "name": "@react-hooks-extra/ensure-use-callback-has-non-empty-deps",
      "plugin": "@react-hooks-extra"
    },
    "@react-hooks-extra/ensure-use-memo-has-non-empty-deps": {
      "type": "problem",
      "docs": {
        "description": "disallow unnecessary usage of 'useMemo'",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-no-unnecessary-use-memo"
      },
      "name": "@react-hooks-extra/ensure-use-memo-has-non-empty-deps",
      "plugin": "@react-hooks-extra"
    },
    "@react-hooks-extra/no-redundant-custom-hook": {
      "type": "problem",
      "docs": {
        "description": "enforce custom Hooks to use at least one other hook inside",
        "url": "https://eslint-react.xyz/docs/rules/hooks-extra-no-useless-custom-hooks"
      },
      "name": "@react-hooks-extra/no-redundant-custom-hook",
      "plugin": "@react-hooks-extra"
    },
    "@react-naming-convention/component-name": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowAllCaps": false,
          "allowLeadingUnderscore": false,
          "allowNamespace": false,
          "excepts": [],
          "rule": "PascalCase"
        }
      ],
      "docs": {
        "description": "enforce component naming convention to 'PascalCase' or 'CONSTANT_CASE'",
        "url": "https://eslint-react.xyz/docs/rules/naming-convention-component-name"
      },
      "name": "@react-naming-convention/component-name",
      "plugin": "@react-naming-convention"
    },
    "@react-naming-convention/filename": {
      "type": "problem",
      "defaultOptions": [
        {
          "excepts": [
            "^index$"
          ],
          "extensions": [
            ".js",
            ".jsx",
            ".ts",
            ".tsx"
          ],
          "rule": "PascalCase"
        }
      ],
      "docs": {
        "description": "enforce naming convention for JSX filenames",
        "url": "https://eslint-react.xyz/docs/rules/naming-convention-filename"
      },
      "name": "@react-naming-convention/filename",
      "plugin": "@react-naming-convention"
    },
    "@react-naming-convention/filename-extension": {
      "type": "problem",
      "defaultOptions": [
        {
          "allow": "as-needed",
          "extensions": [
            ".jsx",
            ".tsx"
          ],
          "ignoreFilesWithoutCode": false
        }
      ],
      "docs": {
        "description": "enforce naming convention for JSX file extensions",
        "url": "https://eslint-react.xyz/docs/rules/naming-convention-filename-extension"
      },
      "name": "@react-naming-convention/filename-extension",
      "plugin": "@react-naming-convention"
    },
    "@react-naming-convention/use-state": {
      "type": "problem",
      "docs": {
        "description": "enforce destructuring and symmetric naming of 'useState' hook value and setter variables",
        "url": "https://eslint-react.xyz/docs/rules/naming-convention-use-state"
      },
      "name": "@react-naming-convention/use-state",
      "plugin": "@react-naming-convention"
    },
    "@react-refresh/only-export-components": {
      "type": "problem",
      "name": "@react-refresh/only-export-components",
      "plugin": "@react-refresh"
    },
    "@react-web-api/no-leaked-event-listener": {
      "type": "problem",
      "docs": {
        "description": "enforce that every 'addEventListener' in a component or custom Hook has a corresponding 'removeEventListener'.",
        "url": "https://eslint-react.xyz/docs/rules/web-api-no-leaked-event-listener"
      },
      "name": "@react-web-api/no-leaked-event-listener",
      "plugin": "@react-web-api"
    },
    "@react-web-api/no-leaked-interval": {
      "type": "problem",
      "docs": {
        "description": "enforce that every 'setInterval' in a component or custom Hook has a corresponding 'clearInterval'.",
        "url": "https://eslint-react.xyz/docs/rules/web-api-no-leaked-interval"
      },
      "name": "@react-web-api/no-leaked-interval",
      "plugin": "@react-web-api"
    },
    "@react-web-api/no-leaked-resize-observer": {
      "type": "problem",
      "docs": {
        "description": "enforce cleanup of 'ResizeObserver' instances in components and custom Hooks.",
        "url": "https://eslint-react.xyz/docs/rules/web-api-no-leaked-resize-observer"
      },
      "name": "@react-web-api/no-leaked-resize-observer",
      "plugin": "@react-web-api"
    },
    "@react-web-api/no-leaked-timeout": {
      "type": "problem",
      "docs": {
        "description": "enforce that every 'setTimeout' in a component or custom Hook has a corresponding 'clearTimeout'.",
        "url": "https://eslint-react.xyz/docs/rules/web-api-no-leaked-timeout"
      },
      "name": "@react-web-api/no-leaked-timeout",
      "plugin": "@react-web-api"
    },
    "@react-x/avoid-shorthand-boolean": {
      "type": "problem",
      "docs": {
        "description": "disallow using shorthand boolean attributes",
        "url": "https://eslint-react.xyz/docs/rules/avoid-shorthand-boolean"
      },
      "fixable": "code",
      "name": "@react-x/avoid-shorthand-boolean",
      "plugin": "@react-x"
    },
    "@react-x/avoid-shorthand-fragment": {
      "type": "problem",
      "docs": {
        "description": "disallow using shorthand fragment syntax",
        "url": "https://eslint-react.xyz/docs/rules/avoid-shorthand-fragment"
      },
      "name": "@react-x/avoid-shorthand-fragment",
      "plugin": "@react-x"
    },
    "@react-x/ensure-forward-ref-using-ref": {
      "type": "problem",
      "docs": {
        "description": "require a 'ref' parameter to be set when using 'forwardRef'",
        "url": "https://eslint-react.xyz/docs/rules/ensure-forward-ref-using-ref"
      },
      "name": "@react-x/ensure-forward-ref-using-ref",
      "plugin": "@react-x"
    },
    "@react-x/no-access-state-in-setstate": {
      "type": "problem",
      "docs": {
        "description": "disallow accessing 'this.state' within 'setState'",
        "url": "https://eslint-react.xyz/docs/rules/no-access-state-in-setstate"
      },
      "name": "@react-x/no-access-state-in-setstate",
      "plugin": "@react-x"
    },
    "@react-x/no-array-index-key": {
      "type": "problem",
      "docs": {
        "description": "disallow using Array index as 'key'",
        "url": "https://eslint-react.xyz/docs/rules/no-array-index-key"
      },
      "name": "@react-x/no-array-index-key",
      "plugin": "@react-x"
    },
    "@react-x/no-children-count": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'Children.count'",
        "url": "https://eslint-react.xyz/docs/rules/no-children-count"
      },
      "name": "@react-x/no-children-count",
      "plugin": "@react-x"
    },
    "@react-x/no-children-for-each": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'Children.forEach'",
        "url": "https://eslint-react.xyz/docs/rules/no-children-for-each"
      },
      "name": "@react-x/no-children-for-each",
      "plugin": "@react-x"
    },
    "@react-x/no-children-map": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'Children.map'",
        "url": "https://eslint-react.xyz/docs/rules/no-children-map"
      },
      "name": "@react-x/no-children-map",
      "plugin": "@react-x"
    },
    "@react-x/no-children-only": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'Children.only'",
        "url": "https://eslint-react.xyz/docs/rules/no-children-only"
      },
      "name": "@react-x/no-children-only",
      "plugin": "@react-x"
    },
    "@react-x/no-children-prop": {
      "type": "problem",
      "docs": {
        "description": "disallow passing 'children' as props",
        "url": "https://eslint-react.xyz/docs/rules/no-children-prop"
      },
      "name": "@react-x/no-children-prop",
      "plugin": "@react-x"
    },
    "@react-x/no-children-to-array": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'Children.toArray'",
        "url": "https://eslint-react.xyz/docs/rules/no-children-to-array"
      },
      "name": "@react-x/no-children-to-array",
      "plugin": "@react-x"
    },
    "@react-x/no-class-component": {
      "type": "problem",
      "docs": {
        "description": "disallow using class components",
        "url": "https://eslint-react.xyz/docs/rules/no-class-component"
      },
      "name": "@react-x/no-class-component",
      "plugin": "@react-x"
    },
    "@react-x/no-clone-element": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'cloneElement'",
        "url": "https://eslint-react.xyz/docs/rules/no-clone-element"
      },
      "name": "@react-x/no-clone-element",
      "plugin": "@react-x"
    },
    "@react-x/no-comment-textnodes": {
      "type": "problem",
      "docs": {
        "description": "disallow comments from being inserted as text nodes",
        "url": "https://eslint-react.xyz/docs/rules/no-comment-textnodes"
      },
      "name": "@react-x/no-comment-textnodes",
      "plugin": "@react-x"
    },
    "@react-x/no-complex-conditional-rendering": {
      "type": "problem",
      "docs": {
        "description": "disallow complex conditional rendering",
        "url": "https://eslint-react.xyz/docs/rules/no-complex-conditional-rendering"
      },
      "name": "@react-x/no-complex-conditional-rendering",
      "plugin": "@react-x"
    },
    "@react-x/no-component-will-mount": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'componentWillMount'",
        "url": "https://eslint-react.xyz/docs/rules/no-component-will-mount"
      },
      "fixable": "code",
      "name": "@react-x/no-component-will-mount",
      "plugin": "@react-x"
    },
    "@react-x/no-component-will-receive-props": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'componentWillReceiveProps'",
        "url": "https://eslint-react.xyz/docs/rules/no-component-will-receive-props"
      },
      "fixable": "code",
      "name": "@react-x/no-component-will-receive-props",
      "plugin": "@react-x"
    },
    "@react-x/no-component-will-update": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'componentWillReceiveProps'",
        "url": "https://eslint-react.xyz/docs/rules/no-component-will-update"
      },
      "fixable": "code",
      "name": "@react-x/no-component-will-update",
      "plugin": "@react-x"
    },
    "@react-x/no-context-provider": {
      "type": "problem",
      "docs": {
        "description": "disallow the use of '<Context.Provider>'",
        "url": "https://eslint-react.xyz/docs/rules/no-context-provider"
      },
      "fixable": "code",
      "name": "@react-x/no-context-provider",
      "plugin": "@react-x"
    },
    "@react-x/no-create-ref": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'createRef' in function components",
        "url": "https://eslint-react.xyz/docs/rules/no-create-ref"
      },
      "name": "@react-x/no-create-ref",
      "plugin": "@react-x"
    },
    "@react-x/no-default-props": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'defaultProps' property in components",
        "url": "https://eslint-react.xyz/docs/rules/no-default-props"
      },
      "name": "@react-x/no-default-props",
      "plugin": "@react-x"
    },
    "@react-x/no-direct-mutation-state": {
      "type": "problem",
      "docs": {
        "description": "disallow direct mutation of state",
        "url": "https://eslint-react.xyz/docs/rules/no-direct-mutation-state"
      },
      "name": "@react-x/no-direct-mutation-state",
      "plugin": "@react-x"
    },
    "@react-x/no-duplicate-jsx-props": {
      "type": "problem",
      "docs": {
        "description": "disallow duplicate props",
        "url": "https://eslint-react.xyz/docs/rules/no-duplicate-jsx-props"
      },
      "name": "@react-x/no-duplicate-jsx-props",
      "plugin": "@react-x"
    },
    "@react-x/no-duplicate-key": {
      "type": "problem",
      "docs": {
        "description": "disallow duplicate keys when rendering list",
        "url": "https://eslint-react.xyz/docs/rules/no-duplicate-key"
      },
      "name": "@react-x/no-duplicate-key",
      "plugin": "@react-x"
    },
    "@react-x/no-forward-ref": {
      "type": "problem",
      "docs": {
        "description": "disallow the use of 'forwardRef'",
        "url": "https://eslint-react.xyz/docs/rules/no-forward-ref"
      },
      "fixable": "code",
      "name": "@react-x/no-forward-ref",
      "plugin": "@react-x"
    },
    "@react-x/no-implicit-key": {
      "type": "problem",
      "docs": {
        "description": "disallow implicit 'key' props",
        "url": "https://eslint-react.xyz/docs/rules/no-implicit-key"
      },
      "name": "@react-x/no-implicit-key",
      "plugin": "@react-x"
    },
    "@react-x/no-leaked-conditional-rendering": {
      "type": "problem",
      "docs": {
        "description": "disallow problematic leaked values from being rendered",
        "url": "https://eslint-react.xyz/docs/rules/no-leaked-conditional-rendering"
      },
      "name": "@react-x/no-leaked-conditional-rendering",
      "plugin": "@react-x"
    },
    "@react-x/no-missing-component-display-name": {
      "type": "problem",
      "docs": {
        "description": "require 'displayName' for 'memo' and 'forwardRef' components",
        "url": "https://eslint-react.xyz/docs/rules/no-missing-component-display-name"
      },
      "name": "@react-x/no-missing-component-display-name",
      "plugin": "@react-x"
    },
    "@react-x/no-missing-key": {
      "type": "problem",
      "docs": {
        "description": "require 'key' when rendering list",
        "url": "https://eslint-react.xyz/docs/rules/no-missing-key"
      },
      "name": "@react-x/no-missing-key",
      "plugin": "@react-x"
    },
    "@react-x/no-nested-components": {
      "type": "problem",
      "docs": {
        "description": "disallow using unstable nested components",
        "url": "https://eslint-react.xyz/docs/rules/no-nested-components"
      },
      "name": "@react-x/no-nested-components",
      "plugin": "@react-x"
    },
    "@react-x/no-prop-types": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'propTypes' property in components",
        "url": "https://eslint-react.xyz/docs/rules/no-prop-types"
      },
      "name": "@react-x/no-prop-types",
      "plugin": "@react-x"
    },
    "@react-x/no-redundant-should-component-update": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'shouldComponentUpdate' in class component extends 'React.PureComponent'",
        "url": "https://eslint-react.xyz/docs/rules/no-redundant-should-component-update"
      },
      "name": "@react-x/no-redundant-should-component-update",
      "plugin": "@react-x"
    },
    "@react-x/no-set-state-in-component-did-mount": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'setState' in 'componentDidMount'",
        "url": "https://eslint-react.xyz/docs/rules/no-set-state-in-component-did-mount"
      },
      "name": "@react-x/no-set-state-in-component-did-mount",
      "plugin": "@react-x"
    },
    "@react-x/no-set-state-in-component-did-update": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'setState' in 'componentDidUpdate'",
        "url": "https://eslint-react.xyz/docs/rules/no-set-state-in-component-did-update"
      },
      "name": "@react-x/no-set-state-in-component-did-update",
      "plugin": "@react-x"
    },
    "@react-x/no-set-state-in-component-will-update": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'setState' in 'componentWillUpdate'",
        "url": "https://eslint-react.xyz/docs/rules/no-set-state-in-component-will-update"
      },
      "name": "@react-x/no-set-state-in-component-will-update",
      "plugin": "@react-x"
    },
    "@react-x/no-string-refs": {
      "type": "problem",
      "docs": {
        "description": "disallow using deprecated string refs",
        "url": "https://eslint-react.xyz/docs/rules/no-string-refs"
      },
      "name": "@react-x/no-string-refs",
      "plugin": "@react-x"
    },
    "@react-x/no-unsafe-component-will-mount": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'UNSAFE_componentWillMount'",
        "url": "https://eslint-react.xyz/docs/rules/no-unsafe-component-will-mount"
      },
      "name": "@react-x/no-unsafe-component-will-mount",
      "plugin": "@react-x"
    },
    "@react-x/no-unsafe-component-will-receive-props": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'UNSAFE_componentWillReceiveProps'",
        "url": "https://eslint-react.xyz/docs/rules/no-unsafe-component-will-receive-props"
      },
      "name": "@react-x/no-unsafe-component-will-receive-props",
      "plugin": "@react-x"
    },
    "@react-x/no-unsafe-component-will-update": {
      "type": "problem",
      "docs": {
        "description": "disallow using 'UNSAFE_componentWillUpdate'",
        "url": "https://eslint-react.xyz/docs/rules/no-unsafe-component-will-update"
      },
      "name": "@react-x/no-unsafe-component-will-update",
      "plugin": "@react-x"
    },
    "@react-x/no-unstable-context-value": {
      "type": "problem",
      "docs": {
        "description": "disallow passing constructed values to context providers",
        "url": "https://eslint-react.xyz/docs/rules/no-unstable-context-value"
      },
      "name": "@react-x/no-unstable-context-value",
      "plugin": "@react-x"
    },
    "@react-x/no-unstable-default-props": {
      "type": "problem",
      "docs": {
        "description": "disallow using unstable value as default param in function component",
        "url": "https://eslint-react.xyz/docs/rules/no-unstable-default-props"
      },
      "name": "@react-x/no-unstable-default-props",
      "plugin": "@react-x"
    },
    "@react-x/no-unused-class-component-members": {
      "type": "problem",
      "docs": {
        "description": "disallow unused class component members",
        "url": "https://eslint-react.xyz/docs/rules/no-unused-class-component-members"
      },
      "name": "@react-x/no-unused-class-component-members",
      "plugin": "@react-x"
    },
    "@react-x/no-unused-state": {
      "type": "problem",
      "docs": {
        "description": "disallow unused state of class component",
        "url": "https://eslint-react.xyz/docs/rules/no-unused-state"
      },
      "name": "@react-x/no-unused-state",
      "plugin": "@react-x"
    },
    "@react-x/no-useless-fragment": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowExpressions": true
        }
      ],
      "docs": {
        "description": "disallow unnecessary fragments",
        "url": "https://eslint-react.xyz/docs/rules/no-useless-fragment"
      },
      "name": "@react-x/no-useless-fragment",
      "plugin": "@react-x"
    },
    "@react-x/prefer-destructuring-assignment": {
      "type": "problem",
      "docs": {
        "description": "enforce using destructuring assignment in component props and context",
        "url": "https://eslint-react.xyz/docs/rules/prefer-destructuring-assignment"
      },
      "name": "@react-x/prefer-destructuring-assignment",
      "plugin": "@react-x"
    },
    "@react-x/prefer-react-namespace-import": {
      "type": "problem",
      "docs": {
        "description": "enforce React is imported via a namespace import",
        "url": "https://eslint-react.xyz/docs/rules/prefer-react-namespace-import"
      },
      "fixable": "code",
      "name": "@react-x/prefer-react-namespace-import",
      "plugin": "@react-x"
    },
    "@react-x/prefer-read-only-props": {
      "type": "problem",
      "docs": {
        "description": "enforce read-only props in components",
        "url": "https://eslint-react.xyz/docs/rules/prefer-read-only-props"
      },
      "name": "@react-x/prefer-read-only-props",
      "plugin": "@react-x"
    },
    "@react-x/prefer-shorthand-boolean": {
      "type": "problem",
      "docs": {
        "description": "enforce using shorthand boolean attributes",
        "url": "https://eslint-react.xyz/docs/rules/prefer-shorthand-boolean"
      },
      "fixable": "code",
      "name": "@react-x/prefer-shorthand-boolean",
      "plugin": "@react-x"
    },
    "@react-x/prefer-shorthand-fragment": {
      "type": "problem",
      "docs": {
        "description": "enforce using fragment syntax instead of 'Fragment' component",
        "url": "https://eslint-react.xyz/docs/rules/prefer-shorthand-fragment"
      },
      "name": "@react-x/prefer-shorthand-fragment",
      "plugin": "@react-x"
    },
    "@react-x/use-jsx-vars": {
      "type": "problem",
      "docs": {
        "description": "helpes `eslint/no-unused-vars` to correctly mark JSX variables as used.",
        "url": "https://eslint-react.xyz/docs/rules/use-jsx-vars"
      },
      "name": "@react-x/use-jsx-vars",
      "plugin": "@react-x"
    },
    "@react-x/jsx-no-duplicate-props": {
      "type": "problem",
      "docs": {
        "description": "disallow duplicate props",
        "url": "https://eslint-react.xyz/docs/rules/no-duplicate-jsx-props"
      },
      "name": "@react-x/jsx-no-duplicate-props",
      "plugin": "@react-x"
    },
    "@react-x/jsx-uses-vars": {
      "type": "problem",
      "docs": {
        "description": "helpes `eslint/no-unused-vars` to correctly mark JSX variables as used.",
        "url": "https://eslint-react.xyz/docs/rules/use-jsx-vars"
      },
      "name": "@react-x/jsx-uses-vars",
      "plugin": "@react-x"
    },
    "@react-x/no-complicated-conditional-rendering": {
      "type": "problem",
      "docs": {
        "description": "disallow complex conditional rendering",
        "url": "https://eslint-react.xyz/docs/rules/no-complex-conditional-rendering"
      },
      "name": "@react-x/no-complicated-conditional-rendering",
      "plugin": "@react-x"
    },
    "@prettier/prettier": {
      "docs": {
        "url": "https://github.com/prettier/eslint-plugin-prettier#options"
      },
      "type": "layout",
      "fixable": "code",
      "name": "@prettier/prettier",
      "plugin": "@prettier"
    }
  },
  "files": [
    {
      "filepath": "eslint.config.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*config*.?([cm])[jt]s?(x)",
        "**/*.config.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30,
        32,
        34
      ]
    },
    {
      "filepath": "eslint.config.viewer.js",
      "globs": [
        "**/*.js",
        "**/*.?([cm])js?(x)",
        "**/*.?([cm])js?(x)",
        "**/*config*.?([cm])[jt]s?(x)",
        "**/*.?([cm])js?(x)"
      ],
      "configs": [
        2,
        19,
        30,
        32,
        33
      ]
    },
    {
      "filepath": "src/config.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*config*.?([cm])[jt]s?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30,
        32
      ]
    },
    {
      "filepath": "src/configs/airbnb/best-practices.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/airbnb/errors.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/airbnb/es6.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/airbnb/index.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/{index,vite,esbuild,rollup,rolldown,webpack,rspack}.?([cm])[jt]s?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30,
        32
      ]
    },
    {
      "filepath": "src/configs/airbnb/node.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/airbnb/strict.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/airbnb/style.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/airbnb/variables.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/arca.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/comments.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/disables.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/eslint-config/base.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/eslint-config/config.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*config*.?([cm])[jt]s?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30,
        32
      ]
    },
    {
      "filepath": "src/configs/eslint-config/formatting.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/eslint-config/index.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/{index,vite,esbuild,rollup,rolldown,webpack,rspack}.?([cm])[jt]s?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30,
        32
      ]
    },
    {
      "filepath": "src/configs/eslint-config/node.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/eslint-config/utils.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/eslint.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/esx.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/ignores.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/import.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/index.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/{index,vite,esbuild,rollup,rolldown,webpack,rspack}.?([cm])[jt]s?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30,
        32
      ]
    },
    {
      "filepath": "src/configs/javascript.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/jsx.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/mutation.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/next.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/node.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/perfectionist.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/prettier-config/config.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*config*.?([cm])[jt]s?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30,
        32
      ]
    },
    {
      "filepath": "src/configs/prettier-config/index.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/{index,vite,esbuild,rollup,rolldown,webpack,rspack}.?([cm])[jt]s?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30,
        32
      ]
    },
    {
      "filepath": "src/configs/prettier-config/reformatted-rules.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/prettier-config/utils.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/prettier.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/promise.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/react.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/regexp.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/sonarjs.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/tailwindcss.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/typescript.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/configs/unicorn.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/constants.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/index.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/{index,vite,esbuild,rollup,rolldown,webpack,rspack}.?([cm])[jt]s?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30,
        32
      ]
    },
    {
      "filepath": "src/plugins.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/scripts/typegen.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/types.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "src/utils.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30
      ]
    },
    {
      "filepath": "tsup.config.ts",
      "globs": [
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*.?([m])ts?(x)",
        "**/*config*.?([cm])[jt]s?(x)",
        "**/*.config.?([m])ts?(x)"
      ],
      "configs": [
        19,
        25,
        26,
        27,
        28,
        30,
        32,
        34
      ]
    }
  ],
  "meta": {
    "lastUpdate": 1735503386428,
    "basePath": "",
    "configPath": ""
  }
}